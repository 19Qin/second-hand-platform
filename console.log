
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::               (v2.7.18)

2025-10-01 00:12:02 [main] INFO  com.fliliy.secondhand.SecondHandApplication - Starting SecondHandApplication using Java 20 on bogon with PID 42541 (/Users/yit/Desktop/second-hand-platform2/target/second-hand-0.0.1-SNAPSHOT.jar started by yit in /Users/yit/Desktop/second-hand-platform2)
2025-10-01 00:12:02 [main] DEBUG com.fliliy.secondhand.SecondHandApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-10-01 00:12:02 [main] INFO  com.fliliy.secondhand.SecondHandApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-01 00:12:03 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-01 00:12:03 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-01 00:12:04 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 245 ms. Found 15 JPA repository interfaces.
2025-10-01 00:12:04 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-01 00:12:04 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-10-01 00:12:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-01 00:12:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ChatMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-01 00:12:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.UserTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-01 00:12:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-01 00:12:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.SystemConfigRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-01 00:12:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.TransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-01 00:12:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.SmsRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-01 00:12:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ChatRoomRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-01 00:12:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.UserNotificationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-01 00:12:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ProductImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-01 00:12:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-01 00:12:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-01 00:12:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ProductTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-01 00:12:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ProductFavoriteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-01 00:12:04 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.UserAddressRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-01 00:12:04 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 22 ms. Found 0 Redis repository interfaces.
2025-10-01 00:12:04 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-10-01 00:12:05 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-10-01 00:12:05 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-10-01 00:12:05 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-10-01 00:12:05 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2673 ms
2025-10-01 00:12:05 [main] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader org.springframework.boot.loader.LaunchedURLClassLoader@254989ff
2025-10-01 00:12:05 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-01 00:12:05 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-10-01 00:12:05 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.mysql.cj.jdbc.Driver"
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:mysql://localhost:3306/fliliy_db?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - username................................"root"
2025-10-01 00:12:05 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2025-10-01 00:12:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-01 00:12:06 [main] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@14a54ef6
2025-10-01 00:12:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-01 00:12:06 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-10-01 00:12:06 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2025-10-01 00:12:06 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2f4818b3
2025-10-01 00:12:06 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6e751288
2025-10-01 00:12:06 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5f517ef3
2025-10-01 00:12:06 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@e5aedc7
2025-10-01 00:12:06 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@711ee0a7
2025-10-01 00:12:06 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@a14172c
2025-10-01 00:12:06 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4c854c81
2025-10-01 00:12:06 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7a856a7f
2025-10-01 00:12:06 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@12a11d2d
2025-10-01 00:12:06 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:12:07 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-10-01 00:12:07 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-01 00:12:10 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 9731a9d5-75ef-47ea-ab2d-686e6bbf58df

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-10-01 00:12:10 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/auth/**']
2025-10-01 00:12:10 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-10-01 00:12:10 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/h2-console/**']
2025-10-01 00:12:10 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/categories/**']
2025-10-01 00:12:10 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/products']
2025-10-01 00:12:10 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/products/*']
2025-10-01 00:12:10 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/files/**']
2025-10-01 00:12:10 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/system/**']
2025-10-01 00:12:10 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-10-01 00:12:10 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@58c42c8c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3af236d0, org.springframework.security.web.context.SecurityContextPersistenceFilter@59b492ec, org.springframework.security.web.header.HeaderWriterFilter@159ac15f, org.springframework.web.filter.CorsFilter@23564dd2, org.springframework.security.web.authentication.logout.LogoutFilter@63f9ddf9, com.fliliy.secondhand.config.JwtAuthenticationFilter@3382f8ae, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49cc9b2a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@11826398, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@54895681, org.springframework.security.web.session.SessionManagementFilter@4e48462d, org.springframework.security.web.access.ExceptionTranslationFilter@799f354a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4bcdd11]
2025-10-01 00:12:10 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-10-01 00:12:10 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8080 is already in use
2025-10-01 00:12:10 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-01 00:12:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-01 00:12:10 [main] DEBUG com.zaxxer.hikari.pool.HikariPool 2025-10-01 00:12:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:12:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:12:32 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-01 00:12:32 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-01 00:12:32 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-01 00:12:32 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /health
2025-10-01 00:12:32 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:12:32 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-01 00:12:32 [http-nio-8080-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /health] with attributes [permitAll]
2025-10-01 00:12:32 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /health
2025-10-01 00:12:32 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:12:49 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/sms/send
2025-10-01 00:12:49 [http-nio-8080-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:12:49 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-01 00:12:49 [http-nio-8080-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/sms/send] with attributes [permitAll]
2025-10-01 00:12:49 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/sms/send
Hibernate: 
    select
        count(verificati0_.id) as col_0_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.mobile=? 
        and verificati0_.type=? 
        and verificati0_.created_at>?
Hibernate: 
    update
        verification_codes 
    set
        used=1 
    where
        mobile=? 
        and type=? 
        and used=0
2025-10-01 00:12:50 [http-nio-8080-exec-2] INFO  com.fliliy.secondhand.service.SmsService - Saving verification code - Mobile: 13800138000, Type: LOGIN, Enum name: LOGIN
Hibernate: 
    select
        verificati0_.id as id1_14_0_,
        verificati0_.attempts as attempts2_14_0_,
        verificati0_.code as code3_14_0_,
        verificati0_.created_at as created_4_14_0_,
        verificati0_.email as email5_14_0_,
        verificati0_.expires_at as expires_6_14_0_,
        verificati0_.max_attempts as max_atte7_14_0_,
        verificati0_.mobile as mobile8_14_0_,
        verificati0_.type as type9_14_0_,
        verificati0_.used as used10_14_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.id=?
Hibernate: 
    insert 
    into
        verification_codes
        (attempts, code, created_at, email, expires_at, max_attempts, mobile, type, used, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        sms_records
        (code, cost_amount, created_at, error_code, error_message, ip_address, mobile, provider, provider_msg_id, send_status, sent_at, template_code, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-01 00:12:50 [http-nio-8080-exec-2] INFO  com.fliliy.secondhand.service.SmsService - SMS record saved - Mobile: 13800138000, Type: LOGIN, SmsType name: LOGIN
2025-10-01 00:12:50 [http-nio-8080-exec-2] INFO  com.fliliy.secondhand.service.SmsService - Sending SMS to 13800138000: Your verification code is 3497
2025-10-01 00:12:50 [http-nio-8080-exec-2] INFO  com.fliliy.secondhand.service.SmsService - SMS code sent to mobile: 13800138000, type: LOGIN, code: 3497
2025-10-01 00:12:50 [http-nio-8080-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:12:50 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/sms/send
2025-10-01 00:12:50 [http-nio-8080-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:12:50 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-01 00:12:50 [http-nio-8080-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/sms/send] with attributes [permitAll]
2025-10-01 00:12:50 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/sms/send
Hibernate: 
    select
        count(verificati0_.id) as col_0_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.mobile=? 
        and verificati0_.type=? 
        and verificati0_.created_at>?
Hibernate: 
    update
        verification_codes 
    set
        used=1 
    where
        mobile=? 
        and type=? 
        and used=0
2025-10-01 00:12:50 [http-nio-8080-exec-4] INFO  com.fliliy.secondhand.service.SmsService - Saving verification code - Mobile: 13800138999, Type: LOGIN, Enum name: LOGIN
Hibernate: 
    select
        verificati0_.id as id1_14_0_,
        verificati0_.attempts as attempts2_14_0_,
        verificati0_.code as code3_14_0_,
        verificati0_.created_at as created_4_14_0_,
        verificati0_.email as email5_14_0_,
        verificati0_.expires_at as expires_6_14_0_,
        verificati0_.max_attempts as max_atte7_14_0_,
        verificati0_.mobile as mobile8_14_0_,
        verificati0_.type as type9_14_0_,
        verificati0_.used as used10_14_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.id=?
Hibernate: 
    insert 
    into
        verification_codes
        (attempts, code, created_at, email, expires_at, max_attempts, mobile, type, used, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        sms_records
        (code, cost_amount, created_at, error_code, error_message, ip_address, mobile, provider, provider_msg_id, send_status, sent_at, template_code, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-01 00:12:50 [http-nio-8080-exec-4] INFO  com.fliliy.secondhand.service.SmsService - SMS record saved - Mobile: 13800138999, Type: LOGIN, SmsType name: LOGIN
2025-10-01 00:12:50 [http-nio-8080-exec-4] INFO  com.fliliy.secondhand.service.SmsService - Sending SMS to 13800138999: Your verification code is 7049
2025-10-01 00:12:50 [http-nio-8080-exec-4] INFO  com.fliliy.secondhand.service.SmsService - SMS code sent to mobile: 13800138999, type: LOGIN, code: 7049
2025-10-01 00:12:50 [http-nio-8080-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:12:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:12:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:12:56 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 1, completed tasks = 0]
2025-10-01 00:13:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:13:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:13:48 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/login/sms
2025-10-01 00:13:48 [http-nio-8080-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:13:48 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-01 00:13:48 [http-nio-8080-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/login/sms] with attributes [permitAll]
2025-10-01 00:13:48 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/login/sms
Hibernate: 
    select
        verificati0_.id as id1_14_0_,
        verificati0_.attempts as attempts2_14_0_,
        verificati0_.code as code3_14_0_,
        verificati0_.created_at as created_4_14_0_,
        verificati0_.email as email5_14_0_,
        verificati0_.expires_at as expires_6_14_0_,
        verificati0_.max_attempts as max_atte7_14_0_,
        verificati0_.mobile as mobile8_14_0_,
        verificati0_.type as type9_14_0_,
        verificati0_.used as used10_14_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.id=?
2025-10-01 00:13:48 [http-nio-8080-exec-6] ERROR com.fliliy.secondhand.controller.AuthController - SMS login failed
java.lang.RuntimeException: 验证码错误
	at com.fliliy.secondhand.service.AuthService.loginWithSms(AuthService.java:119)
	at com.fliliy.secondhand.service.AuthService$$FastClassBySpringCGLIB$$de222911.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.fliliy.secondhand.service.AuthService$$EnhancerBySpringCGLIB$$b7eea2b9.loginWithSms(<generated>)
	at com.fliliy.secondhand.controller.AuthController.loginWithSms(AuthController.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.fliliy.secondhand.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:59)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2025-10-01 00:13:48 [http-nio-8080-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:13:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:13:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:14:01 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/login/sms
2025-10-01 00:14:01 [http-nio-8080-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:14:01 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-01 00:14:01 [http-nio-8080-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/login/sms] with attributes [permitAll]
2025-10-01 00:14:01 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/login/sms
Hibernate: 
    select
        verificati0_.id as id1_14_0_,
        verificati0_.attempts as attempts2_14_0_,
        verificati0_.code as code3_14_0_,
        verificati0_.created_at as created_4_14_0_,
        verificati0_.email as email5_14_0_,
        verificati0_.expires_at as expires_6_14_0_,
        verificati0_.max_attempts as max_atte7_14_0_,
        verificati0_.mobile as mobile8_14_0_,
        verificati0_.type as type9_14_0_,
        verificati0_.used as used10_14_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.id=?
2025-10-01 00:14:01 [http-nio-8080-exec-7] ERROR com.fliliy.secondhand.controller.AuthController - SMS login failed
java.lang.RuntimeException: 验证码错误
	at com.fliliy.secondhand.service.AuthService.loginWithSms(AuthService.java:119)
	at com.fliliy.secondhand.service.AuthService$$FastClassBySpringCGLIB$$de222911.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.fliliy.secondhand.service.AuthService$$EnhancerBySpringCGLIB$$b7eea2b9.loginWithSms(<generated>)
	at com.fliliy.secondhand.controller.AuthController.loginWithSms(AuthController.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.fliliy.secondhand.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:59)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2025-10-01 00:14:01 [http-nio-8080-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:14:03 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/login/sms
2025-10-01 00:14:03 [http-nio-8080-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:14:03 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-01 00:14:03 [http-nio-8080-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/login/sms] with attributes [permitAll]
2025-10-01 00:14:03 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/login/sms
Hibernate: 
    select
        verificati0_.id as id1_14_0_,
        verificati0_.attempts as attempts2_14_0_,
        verificati0_.code as code3_14_0_,
        verificati0_.created_at as created_4_14_0_,
        verificati0_.email as email5_14_0_,
        verificati0_.expires_at as expires_6_14_0_,
        verificati0_.max_attempts as max_atte7_14_0_,
        verificati0_.mobile as mobile8_14_0_,
        verificati0_.type as type9_14_0_,
        verificati0_.used as used10_14_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.id=?
2025-10-01 00:14:03 [http-nio-8080-exec-9] ERROR com.fliliy.secondhand.controller.AuthController - SMS login failed
java.lang.RuntimeException: 验证码错误
	at com.fliliy.secondhand.service.AuthService.loginWithSms(AuthService.java:119)
	at com.fliliy.secondhand.service.AuthService$$FastClassBySpringCGLIB$$de222911.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.fliliy.secondhand.service.AuthService$$EnhancerBySpringCGLIB$$b7eea2b9.loginWithSms(<generated>)
	at com.fliliy.secondhand.controller.AuthController.loginWithSms(AuthController.java:95)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.fliliy.secondhand.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:59)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2025-10-01 00:14:03 [http-nio-8080-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:14:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:14:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:14:31 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/sms/send
2025-10-01 00:14:31 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:14:31 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-01 00:14:31 [http-nio-8080-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/sms/send] with attributes [permitAll]
2025-10-01 00:14:31 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/sms/send
Hibernate: 
    select
        count(verificati0_.id) as col_0_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.mobile=? 
        and verificati0_.type=? 
        and verificati0_.created_at>?
Hibernate: 
    update
        verification_codes 
    set
        used=1 
    where
        mobile=? 
        and type=? 
        and used=0
2025-10-01 00:14:31 [http-nio-8080-exec-1] INFO  com.fliliy.secondhand.service.SmsService - Saving verification code - Mobile: 13800138000, Type: LOGIN, Enum name: LOGIN
Hibernate: 
    select
        verificati0_.id as id1_14_0_,
        verificati0_.attempts as attempts2_14_0_,
        verificati0_.code as code3_14_0_,
        verificati0_.created_at as created_4_14_0_,
        verificati0_.email as email5_14_0_,
        verificati0_.expires_at as expires_6_14_0_,
        verificati0_.max_attempts as max_atte7_14_0_,
        verificati0_.mobile as mobile8_14_0_,
        verificati0_.type as type9_14_0_,
        verificati0_.used as used10_14_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.id=?
Hibernate: 
    insert 
    into
        verification_codes
        (attempts, code, created_at, email, expires_at, max_attempts, mobile, type, used, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        sms_records
        (code, cost_amount, created_at, error_code, error_message, ip_address, mobile, provider, provider_msg_id, send_status, sent_at, template_code, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-01 00:14:31 [http-nio-8080-exec-1] INFO  com.fliliy.secondhand.service.SmsService - SMS record saved - Mobile: 13800138000, Type: LOGIN, SmsType name: LOGIN
2025-10-01 00:14:31 [http-nio-8080-exec-1] INFO  com.fliliy.secondhand.service.SmsService - Sending SMS to 13800138000: Your verification code is 1183
2025-10-01 00:14:31 [http-nio-8080-exec-1] INFO  com.fliliy.secondhand.service.SmsService - SMS code sent to mobile: 13800138000, type: LOGIN, code: 1183
2025-10-01 00:14:31 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:14:49 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/sms/send
2025-10-01 00:14:49 [http-nio-8080-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:14:49 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-01 00:14:49 [http-nio-8080-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/sms/send] with attributes [permitAll]
2025-10-01 00:14:49 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/sms/send
Hibernate: 
    select
        count(verificati0_.id) as col_0_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.mobile=? 
        and verificati0_.type=? 
        and verificati0_.created_at>?
Hibernate: 
    update
        verification_codes 
    set
        used=1 
    where
        mobile=? 
        and type=? 
        and used=0
2025-10-01 00:14:49 [http-nio-8080-exec-3] INFO  com.fliliy.secondhand.service.SmsService - Saving verification code - Mobile: 13800138999, Type: LOGIN, Enum name: LOGIN
Hibernate: 
    select
        verificati0_.id as id1_14_0_,
        verificati0_.attempts as attempts2_14_0_,
        verificati0_.code as code3_14_0_,
        verificati0_.created_at as created_4_14_0_,
        verificati0_.email as email5_14_0_,
        verificati0_.expires_at as expires_6_14_0_,
        verificati0_.max_attempts as max_atte7_14_0_,
        verificati0_.mobile as mobile8_14_0_,
        verificati0_.type as type9_14_0_,
        verificati0_.used as used10_14_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.id=?
Hibernate: 
    insert 
    into
        verification_codes
        (attempts, code, created_at, email, expires_at, max_attempts, mobile, type, used, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        sms_records
        (code, cost_amount, created_at, error_code, error_message, ip_address, mobile, provider, provider_msg_id, send_status, sent_at, template_code, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-01 00:14:49 [http-nio-8080-exec-3] INFO  com.fliliy.secondhand.service.SmsService - SMS record saved - Mobile: 13800138999, Type: LOGIN, SmsType name: LOGIN
2025-10-01 00:14:49 [http-nio-8080-exec-3] INFO  com.fliliy.secondhand.service.SmsService - Sending SMS to 13800138999: Your verification code is 6807
2025-10-01 00:14:49 [http-nio-8080-exec-3] INFO  com.fliliy.secondhand.service.SmsService - SMS code sent to mobile: 13800138999, type: LOGIN, code: 6807
2025-10-01 00:14:49 [http-nio-8080-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:14:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:14:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:15:17 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/login/sms
2025-10-01 00:15:17 [http-nio-8080-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:15:17 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-01 00:15:17 [http-nio-8080-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/login/sms] with attributes [permitAll]
2025-10-01 00:15:17 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/login/sms
Hibernate: 
    select
        verificati0_.id as id1_14_0_,
        verificati0_.attempts as attempts2_14_0_,
        verificati0_.code as code3_14_0_,
        verificati0_.created_at as created_4_14_0_,
        verificati0_.email as email5_14_0_,
        verificati0_.expires_at as expires_6_14_0_,
        verificati0_.max_attempts as max_atte7_14_0_,
        verificati0_.mobile as mobile8_14_0_,
        verificati0_.type as type9_14_0_,
        verificati0_.used as used10_14_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.id=?
Hibernate: 
    select
        user0_.id as id1_13_,
        user0_.avatar as avatar2_13_,
        user0_.bio as bio3_13_,
        user0_.birthday as birthday4_13_,
        user0_.created_at as created_5_13_,
        user0_.deleted_at as deleted_6_13_,
        user0_.email as email7_13_,
        user0_.gender as gender8_13_,
        user0_.last_login_at as last_log9_13_,
        user0_.last_login_ip as last_lo10_13_,
        user0_.location as locatio11_13_,
        user0_.login_attempts as login_a12_13_,
        user0_.mobile as mobile13_13_,
        user0_.password_hash as passwor14_13_,
        user0_.salt as salt15_13_,
        user0_.status as status16_13_,
        user0_.updated_at as updated17_13_,
        user0_.username as usernam18_13_,
        user0_.verified as verifie19_13_ 
    from
        users user0_ 
    where
        (
            user0_.deleted_at IS NULL
        ) 
        and user0_.mobile=?
Hibernate: 
    update
        users 
    set
        last_login_at=?,
        last_login_ip=?,
        login_attempts=0 
    where
        id=?
Hibernate: 
    insert 
    into
        user_tokens
        (created_at, device_id, device_info, device_type, expires_at, ip_address, last_used_at, refresh_token, revoked, user_agent, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        verification_codes 
    set
        attempts=?,
        code=?,
        email=?,
        expires_at=?,
        max_attempts=?,
        mobile=?,
        type=?,
        used=? 
    where
        id=?
2025-10-01 00:15:18 [http-nio-8080-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:15:23 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/login/sms
2025-10-01 00:15:23 [http-nio-8080-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:15:23 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-10-01 00:15:23 [http-nio-8080-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/login/sms] with attributes [permitAll]
2025-10-01 00:15:23 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/login/sms
Hibernate: 
    select
        verificati0_.id as id1_14_0_,
        verificati0_.attempts as attempts2_14_0_,
        verificati0_.code as code3_14_0_,
        verificati0_.created_at as created_4_14_0_,
        verificati0_.email as email5_14_0_,
        verificati0_.expires_at as expires_6_14_0_,
        verificati0_.max_attempts as max_atte7_14_0_,
        verificati0_.mobile as mobile8_14_0_,
        verificati0_.type as type9_14_0_,
        verificati0_.used as used10_14_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.id=?
Hibernate: 
    select
        user0_.id as id1_13_,
        user0_.avatar as avatar2_13_,
        user0_.bio as bio3_13_,
        user0_.birthday as birthday4_13_,
        user0_.created_at as created_5_13_,
        user0_.deleted_at as deleted_6_13_,
        user0_.email as email7_13_,
        user0_.gender as gender8_13_,
        user0_.last_login_at as last_log9_13_,
        user0_.last_login_ip as last_lo10_13_,
        user0_.location as locatio11_13_,
        user0_.login_attempts as login_a12_13_,
        user0_.mobile as mobile13_13_,
        user0_.password_hash as passwor14_13_,
        user0_.salt as salt15_13_,
        user0_.status as status16_13_,
        user0_.updated_at as updated17_13_,
        user0_.username as usernam18_13_,
        user0_.verified as verifie19_13_ 
    from
        users user0_ 
    where
        (
            user0_.deleted_at IS NULL
        ) 
        and user0_.mobile=?
Hibernate: 
    update
        users 
    set
        last_login_at=?,
        last_login_ip=?,
        login_attempts=0 
    where
        id=?
Hibernate: 
    insert 
    into
        user_tokens
        (created_at, device_id, device_info, device_type, expires_at, ip_address, last_used_at, refresh_token, revoked, user_agent, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        verification_codes 
    set
        attempts=?,
        code=?,
        email=?,
        expires_at=?,
        max_attempts=?,
        mobile=?,
        type=?,
        used=? 
    where
        id=?
2025-10-01 00:15:23 [http-nio-8080-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:15:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:15:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:15:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:15:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:16:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:16:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:16:51 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /transactions/request
2025-10-01 00:16:51 [http-nio-8080-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:16:51 [http-nio-8080-exec-8] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1962950810434408448
2025-10-01 00:16:51 [http-nio-8080-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /transactions/request] with attributes [authenticated]
2025-10-01 00:16:51 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /transactions/request
2025-10-01 00:16:51 [http-nio-8080-exec-8] INFO  com.fliliy.secondhand.service.TransactionService - User 1962950810434408448 creating transaction request for product 1969757587893260288 in chatRoom 1971547214450921472
Hibernate: 
    SELECT
        CASE 
            WHEN COUNT(*) > 0 THEN 1 
            ELSE 0 
        END 
    FROM
        chat_rooms 
    WHERE
        id = ? 
        AND (
            buyer_id = ? 
            OR seller_id = ?
        )
Hibernate: 
    select
        product0_.id as id1_6_0_,
        product0_.category_id as category2_6_0_,
        product0_.chat_count as chat_cou3_6_0_,
        product0_.city as city4_6_0_,
        product0_.created_at as created_5_6_0_,
        product0_.deleted_at as deleted_6_6_0_,
        product0_.description as descript7_6_0_,
        product0_.detail_address as detail_a8_6_0_,
        product0_.district as district9_6_0_,
        product0_.favorite_count as favorit10_6_0_,
        product0_.has_warranty as has_war11_6_0_,
        product0_.inquiry_count as inquiry12_6_0_,
        product0_.is_promoted as is_prom13_6_0_,
        product0_.latitude as latitud14_6_0_,
        product0_.longitude as longitu15_6_0_,
        product0_.original_price as origina16_6_0_,
        product0_.price as price17_6_0_,
        product0_.product_condition as product18_6_0_,
        product0_.promoted_at as promote19_6_0_,
        product0_.promoted_expires_at as promote20_6_0_,
        product0_.province as provinc21_6_0_,
        product0_.published_at as publish22_6_0_,
        product0_.seller_id as seller_23_6_0_,
        product0_.sold_at as sold_at24_6_0_,
        product0_.status as status25_6_0_,
        product0_.title as title26_6_0_,
        product0_.updated_at as updated27_6_0_,
        product0_.usage_type as usage_t28_6_0_,
        product0_.usage_unit as usage_u29_6_0_,
        product0_.usage_value as usage_v30_6_0_,
        product0_.view_count as view_co31_6_0_,
        product0_.warranty_description as warrant32_6_0_,
        product0_.warranty_months as warrant33_6_0_,
        product0_.warranty_type as warrant34_6_0_ 
    from
        products product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_muted as buyer_mu3_2_0_,
        chatroom0_.buyer_pinned as buyer_pi4_2_0_,
        chatroom0_.buyer_unread_count as buyer_un5_2_0_,
        chatroom0_.created_at as created_6_2_0_,
        chatroom0_.last_message_content as last_mes7_2_0_,
        chatroom0_.last_message_id as last_mes8_2_0_,
        chatroom0_.last_message_sender_id as last_mes9_2_0_,
        chatroom0_.last_message_time as last_me10_2_0_,
        chatroom0_.last_message_type as last_me11_2_0_,
        chatroom0_.seller_id as seller_12_2_0_,
        chatroom0_.seller_muted as seller_13_2_0_,
        chatroom0_.seller_pinned as seller_14_2_0_,
        chatroom0_.seller_unread_count as seller_15_2_0_,
        chatroom0_.status as status16_2_0_,
        chatroom0_.total_messages as total_m17_2_0_,
        chatroom0_.transaction_id as transac18_2_0_,
        chatroom0_.updated_at as updated19_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
Hibernate: 
    select
        transactio0_.id as id1_9_,
        transactio0_.buyer_id as buyer_id2_9_,
        transactio0_.cancel_reason as cancel_r3_9_,
        transactio0_.cancel_type as cancel_t4_9_,
        transactio0_.cancelled_at as cancelle5_9_,
        transactio0_.cancelled_by as cancelle6_9_,
        transactio0_.chat_room_id as chat_roo7_9_,
        transactio0_.code_expires_at as code_exp8_9_,
        transactio0_.code_refresh_count as code_ref9_9_,
        transactio0_.completed_at as complet10_9_,
        transactio0_.contact_name as contact11_9_,
        transactio0_.contact_phone as contact12_9_,
        transactio0_.created_at as created13_9_,
        transactio0_.feedback as feedbac14_9_,
        transactio0_.inquiry_type as inquiry15_9_,
        transactio0_.meeting_detail_address as meeting16_9_,
        transactio0_.meeting_latitude as meeting17_9_,
        transactio0_.meeting_location_name as meeting18_9_,
        transactio0_.meeting_longitude as meeting19_9_,
        transactio0_.meeting_notes as meeting20_9_,
        transactio0_.meeting_time as meeting21_9_,
        transactio0_.product_id as product22_9_,
        transactio0_.rating as rating23_9_,
        transactio0_.reject_reason as reject_24_9_,
        transactio0_.request_by as request25_9_,
        transactio0_.requested_at as request26_9_,
        transactio0_.responded_at as respond27_9_,
        transactio0_.seller_id as seller_28_9_,
        transactio0_.status as status29_9_,
        transactio0_.transaction_code as transac30_9_,
        transactio0_.transaction_price as transac31_9_,
        transactio0_.updated_at as updated32_9_ 
    from
        transactions transactio0_ 
    where
        transactio0_.buyer_id=? 
        and transactio0_.product_id=? 
        and transactio0_.status<>?
Hibernate: 
    select
        transactio0_.id as id1_9_0_,
        transactio0_.buyer_id as buyer_id2_9_0_,
        transactio0_.cancel_reason as cancel_r3_9_0_,
        transactio0_.cancel_type as cancel_t4_9_0_,
        transactio0_.cancelled_at as cancelle5_9_0_,
        transactio0_.cancelled_by as cancelle6_9_0_,
        transactio0_.chat_room_id as chat_roo7_9_0_,
        transactio0_.code_expires_at as code_exp8_9_0_,
        transactio0_.code_refresh_count as code_ref9_9_0_,
        transactio0_.completed_at as complet10_9_0_,
        transactio0_.contact_name as contact11_9_0_,
        transactio0_.contact_phone as contact12_9_0_,
        transactio0_.created_at as created13_9_0_,
        transactio0_.feedback as feedbac14_9_0_,
        transactio0_.inquiry_type as inquiry15_9_0_,
        transactio0_.meeting_detail_address as meeting16_9_0_,
        transactio0_.meeting_latitude as meeting17_9_0_,
        transactio0_.meeting_location_name as meeting18_9_0_,
        transactio0_.meeting_longitude as meeting19_9_0_,
        transactio0_.meeting_notes as meeting20_9_0_,
        transactio0_.meeting_time as meeting21_9_0_,
        transactio0_.product_id as product22_9_0_,
        transactio0_.rating as rating23_9_0_,
        transactio0_.reject_reason as reject_24_9_0_,
        transactio0_.request_by as request25_9_0_,
        transactio0_.requested_at as request26_9_0_,
        transactio0_.responded_at as respond27_9_0_,
        transactio0_.seller_id as seller_28_9_0_,
        transactio0_.status as status29_9_0_,
        transactio0_.transaction_code as transac30_9_0_,
        transactio0_.transaction_price as transac31_9_0_,
        transactio0_.updated_at as updated32_9_0_ 
    from
        transactions transactio0_ 
    where
        transactio0_.id=?
2025-10-01 00:16:51 [http-nio-8080-exec-8] INFO  com.fliliy.secondhand.service.ChatService - 发送交易申请消息 - 聊天室ID: 1971547214450921472, 交易ID: 1973059478068793344
Hibernate: 
    select
        chatmessag0_.id as id1_1_0_,
        chatmessag0_.chat_room_id as chat_roo2_1_0_,
        chatmessag0_.content as content3_1_0_,
        chatmessag0_.delivered_at as delivere4_1_0_,
        chatmessag0_.duration as duration5_1_0_,
        chatmessag0_.file_size as file_siz6_1_0_,
        chatmessag0_.file_url as file_url7_1_0_,
        chatmessag0_.image_height as image_he8_1_0_,
        chatmessag0_.image_width as image_wi9_1_0_,
        chatmessag0_.inquiry_type as inquiry10_1_0_,
        chatmessag0_.is_recalled as is_reca11_1_0_,
        chatmessag0_.message_type as message12_1_0_,
        chatmessag0_.product_snapshot as product13_1_0_,
        chatmessag0_.read_at as read_at14_1_0_,
        chatmessag0_.recalled_at as recalle15_1_0_,
        chatmessag0_.related_product_id as related16_1_0_,
        chatmessag0_.sender_id as sender_17_1_0_,
        chatmessag0_.sent_at as sent_at18_1_0_,
        chatmessag0_.status as status19_1_0_,
        chatmessag0_.system_data as system_20_1_0_,
        chatmessag0_.system_type as system_21_1_0_,
        chatmessag0_.thumbnail_url as thumbna22_1_0_,
        chatmessag0_.transaction_id as transac23_1_0_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.id=?
Hibernate: 
    update
        chat_rooms 
    set
        last_message_id=?,
        last_message_content=?,
        last_message_type=?,
        last_message_time=CURRENT_TIMESTAMP,
        last_message_sender_id=?,
        updated_at=CURRENT_TIMESTAMP 
    where
        id=?
2025-10-01 00:16:51 [http-nio-8080-exec-8] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper - SQL Error: 1265, SQLState: 01000
2025-10-01 00:16:51 [http-nio-8080-exec-8] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper - Data truncated for column 'last_message_type' at row 1
2025-10-01 00:16:51 [http-nio-8080-exec-8] WARN  com.fliliy.secondhand.service.TransactionService - Failed to send transaction request message: could not execute statement; nested exception is org.hibernate.exception.GenericJDBCException: could not execute statement
2025-10-01 00:16:51 [http-nio-8080-exec-8] ERROR c.f.secondhand.controller.TransactionController - Create transaction request failed
org.springframework.transaction.UnexpectedRollbackException: Transaction silently rolled back because it has been marked as rollback-only
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:752)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.fliliy.secondhand.service.TransactionService$$EnhancerBySpringCGLIB$$e09f1bf.createTransactionRequest(<generated>)
	at com.fliliy.secondhand.controller.TransactionController.createTransactionRequest(TransactionController.java:192)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.fliliy.secondhand.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:59)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2025-10-01 00:16:51 [http-nio-8080-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:16:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:16:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:17:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:17:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:17:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:17:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:18:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:18:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:18:36 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /transactions/request
2025-10-01 00:18:36 [http-nio-8080-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:18:36 [http-nio-8080-exec-10] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1962950810434408448
2025-10-01 00:18:36 [http-nio-8080-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /transactions/request] with attributes [authenticated]
2025-10-01 00:18:36 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /transactions/request
2025-10-01 00:18:36 [http-nio-8080-exec-10] INFO  com.fliliy.secondhand.service.TransactionService - User 1962950810434408448 creating transaction request for product 1969757587893260288 in chatRoom 1971547214450921472
Hibernate: 
    SELECT
        CASE 
            WHEN COUNT(*) > 0 THEN 1 
            ELSE 0 
        END 
    FROM
        chat_rooms 
    WHERE
        id = ? 
        AND (
            buyer_id = ? 
            OR seller_id = ?
        )
Hibernate: 
    select
        product0_.id as id1_6_0_,
        product0_.category_id as category2_6_0_,
        product0_.chat_count as chat_cou3_6_0_,
        product0_.city as city4_6_0_,
        product0_.created_at as created_5_6_0_,
        product0_.deleted_at as deleted_6_6_0_,
        product0_.description as descript7_6_0_,
        product0_.detail_address as detail_a8_6_0_,
        product0_.district as district9_6_0_,
        product0_.favorite_count as favorit10_6_0_,
        product0_.has_warranty as has_war11_6_0_,
        product0_.inquiry_count as inquiry12_6_0_,
        product0_.is_promoted as is_prom13_6_0_,
        product0_.latitude as latitud14_6_0_,
        product0_.longitude as longitu15_6_0_,
        product0_.original_price as origina16_6_0_,
        product0_.price as price17_6_0_,
        product0_.product_condition as product18_6_0_,
        product0_.promoted_at as promote19_6_0_,
        product0_.promoted_expires_at as promote20_6_0_,
        product0_.province as provinc21_6_0_,
        product0_.published_at as publish22_6_0_,
        product0_.seller_id as seller_23_6_0_,
        product0_.sold_at as sold_at24_6_0_,
        product0_.status as status25_6_0_,
        product0_.title as title26_6_0_,
        product0_.updated_at as updated27_6_0_,
        product0_.usage_type as usage_t28_6_0_,
        product0_.usage_unit as usage_u29_6_0_,
        product0_.usage_value as usage_v30_6_0_,
        product0_.view_count as view_co31_6_0_,
        product0_.warranty_description as warrant32_6_0_,
        product0_.warranty_months as warrant33_6_0_,
        product0_.warranty_type as warrant34_6_0_ 
    from
        products product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_muted as buyer_mu3_2_0_,
        chatroom0_.buyer_pinned as buyer_pi4_2_0_,
        chatroom0_.buyer_unread_count as buyer_un5_2_0_,
        chatroom0_.created_at as created_6_2_0_,
        chatroom0_.last_message_content as last_mes7_2_0_,
        chatroom0_.last_message_id as last_mes8_2_0_,
        chatroom0_.last_message_sender_id as last_mes9_2_0_,
        chatroom0_.last_message_time as last_me10_2_0_,
        chatroom0_.last_message_type as last_me11_2_0_,
        chatroom0_.seller_id as seller_12_2_0_,
        chatroom0_.seller_muted as seller_13_2_0_,
        chatroom0_.seller_pinned as seller_14_2_0_,
        chatroom0_.seller_unread_count as seller_15_2_0_,
        chatroom0_.status as status16_2_0_,
        chatroom0_.total_messages as total_m17_2_0_,
        chatroom0_.transaction_id as transac18_2_0_,
        chatroom0_.updated_at as updated19_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
Hibernate: 
    select
        transactio0_.id as id1_9_,
        transactio0_.buyer_id as buyer_id2_9_,
        transactio0_.cancel_reason as cancel_r3_9_,
        transactio0_.cancel_type as cancel_t4_9_,
        transactio0_.cancelled_at as cancelle5_9_,
        transactio0_.cancelled_by as cancelle6_9_,
        transactio0_.chat_room_id as chat_roo7_9_,
        transactio0_.code_expires_at as code_exp8_9_,
        transactio0_.code_refresh_count as code_ref9_9_,
        transactio0_.completed_at as complet10_9_,
        transactio0_.contact_name as contact11_9_,
        transactio0_.contact_phone as contact12_9_,
        transactio0_.created_at as created13_9_,
        transactio0_.feedback as feedbac14_9_,
        transactio0_.inquiry_type as inquiry15_9_,
        transactio0_.meeting_detail_address as meeting16_9_,
        transactio0_.meeting_latitude as meeting17_9_,
        transactio0_.meeting_location_name as meeting18_9_,
        transactio0_.meeting_longitude as meeting19_9_,
        transactio0_.meeting_notes as meeting20_9_,
        transactio0_.meeting_time as meeting21_9_,
        transactio0_.product_id as product22_9_,
        transactio0_.rating as rating23_9_,
        transactio0_.reject_reason as reject_24_9_,
        transactio0_.request_by as request25_9_,
        transactio0_.requested_at as request26_9_,
        transactio0_.responded_at as respond27_9_,
        transactio0_.seller_id as seller_28_9_,
        transactio0_.status as status29_9_,
        transactio0_.transaction_code as transac30_9_,
        transactio0_.transaction_price as transac31_9_,
        transactio0_.updated_at as updated32_9_ 
    from
        transactions transactio0_ 
    where
        transactio0_.buyer_id=? 
        and transactio0_.product_id=? 
        and transactio0_.status<>?
Hibernate: 
    select
        transactio0_.id as id1_9_0_,
        transactio0_.buyer_id as buyer_id2_9_0_,
        transactio0_.cancel_reason as cancel_r3_9_0_,
        transactio0_.cancel_type as cancel_t4_9_0_,
        transactio0_.cancelled_at as cancelle5_9_0_,
        transactio0_.cancelled_by as cancelle6_9_0_,
        transactio0_.chat_room_id as chat_roo7_9_0_,
        transactio0_.code_expires_at as code_exp8_9_0_,
        transactio0_.code_refresh_count as code_ref9_9_0_,
        transactio0_.completed_at as complet10_9_0_,
        transactio0_.contact_name as contact11_9_0_,
        transactio0_.contact_phone as contact12_9_0_,
        transactio0_.created_at as created13_9_0_,
        transactio0_.feedback as feedbac14_9_0_,
        transactio0_.inquiry_type as inquiry15_9_0_,
        transactio0_.meeting_detail_address as meeting16_9_0_,
        transactio0_.meeting_latitude as meeting17_9_0_,
        transactio0_.meeting_location_name as meeting18_9_0_,
        transactio0_.meeting_longitude as meeting19_9_0_,
        transactio0_.meeting_notes as meeting20_9_0_,
        transactio0_.meeting_time as meeting21_9_0_,
        transactio0_.product_id as product22_9_0_,
        transactio0_.rating as rating23_9_0_,
        transactio0_.reject_reason as reject_24_9_0_,
        transactio0_.request_by as request25_9_0_,
        transactio0_.requested_at as request26_9_0_,
        transactio0_.responded_at as respond27_9_0_,
        transactio0_.seller_id as seller_28_9_0_,
        transactio0_.status as status29_9_0_,
        transactio0_.transaction_code as transac30_9_0_,
        transactio0_.transaction_price as transac31_9_0_,
        transactio0_.updated_at as updated32_9_0_ 
    from
        transactions transactio0_ 
    where
        transactio0_.id=?
2025-10-01 00:18:36 [http-nio-8080-exec-10] INFO  com.fliliy.secondhand.service.ChatService - 发送交易申请消息 - 聊天室ID: 1971547214450921472, 交易ID: 1973059915022995456
Hibernate: 
    select
        chatmessag0_.id as id1_1_0_,
        chatmessag0_.chat_room_id as chat_roo2_1_0_,
        chatmessag0_.content as content3_1_0_,
        chatmessag0_.delivered_at as delivere4_1_0_,
        chatmessag0_.duration as duration5_1_0_,
        chatmessag0_.file_size as file_siz6_1_0_,
        chatmessag0_.file_url as file_url7_1_0_,
        chatmessag0_.image_height as image_he8_1_0_,
        chatmessag0_.image_width as image_wi9_1_0_,
        chatmessag0_.inquiry_type as inquiry10_1_0_,
        chatmessag0_.is_recalled as is_reca11_1_0_,
        chatmessag0_.message_type as message12_1_0_,
        chatmessag0_.product_snapshot as product13_1_0_,
        chatmessag0_.read_at as read_at14_1_0_,
        chatmessag0_.recalled_at as recalle15_1_0_,
        chatmessag0_.related_product_id as related16_1_0_,
        chatmessag0_.sender_id as sender_17_1_0_,
        chatmessag0_.sent_at as sent_at18_1_0_,
        chatmessag0_.status as status19_1_0_,
        chatmessag0_.system_data as system_20_1_0_,
        chatmessag0_.system_type as system_21_1_0_,
        chatmessag0_.thumbnail_url as thumbna22_1_0_,
        chatmessag0_.transaction_id as transac23_1_0_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.id=?
Hibernate: 
    update
        chat_rooms 
    set
        last_message_id=?,
        last_message_content=?,
        last_message_type=?,
        last_message_time=CURRENT_TIMESTAMP,
        last_message_sender_id=?,
        updated_at=CURRENT_TIMESTAMP 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        total_messages=total_messages+1 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        buyer_unread_count=buyer_unread_count+1 
    where
        id=? 
        and buyer_id<>?
Hibernate: 
    update
        chat_rooms 
    set
        seller_unread_count=seller_unread_count+1 
    where
        id=? 
        and seller_id<>?
2025-10-01 00:18:36 [http-nio-8080-exec-10] INFO  c.f.secondhand.service.WebSocketMessageService - Broadcasted message to chatRoom 1971547214450921472: messageId=1973059915031384064
2025-10-01 00:18:36 [http-nio-8080-exec-10] INFO  c.f.secondhand.service.WebSocketMessageService - Sent private message to user 1959106057909440512
Hibernate: 
    insert 
    into
        transactions
        (buyer_id, cancel_reason, cancel_type, cancelled_at, cancelled_by, chat_room_id, code_expires_at, code_refresh_count, completed_at, contact_name, contact_phone, created_at, feedback, inquiry_type, meeting_detail_address, meeting_latitude, meeting_location_name, meeting_longitude, meeting_notes, meeting_time, product_id, rating, reject_reason, request_by, requested_at, responded_at, seller_id, status, transaction_code, transaction_price, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        chat_messages
        (chat_room_id, content, delivered_at, duration, file_size, file_url, image_height, image_width, inquiry_type, is_recalled, message_type, product_snapshot, read_at, recalled_at, related_product_id, sender_id, sent_at, status, system_data, system_type, thumbnail_url, transaction_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-01 00:18:36 [http-nio-8080-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:18:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:18:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:18:59 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /transactions/tx_1973059915022995456/respond
2025-10-01 00:18:59 [http-nio-8080-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:18:59 [http-nio-8080-exec-2] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1959106057909440512
2025-10-01 00:18:59 [http-nio-8080-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /transactions/tx_1973059915022995456/respond] with attributes [authenticated]
2025-10-01 00:18:59 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /transactions/tx_1973059915022995456/respond
2025-10-01 00:18:59 [http-nio-8080-exec-2] INFO  com.fliliy.secondhand.service.TransactionService - User 1959106057909440512 responding to transaction 1973059915022995456 with action AGREE
Hibernate: 
    select
        transactio0_.id as id1_9_0_,
        transactio0_.buyer_id as buyer_id2_9_0_,
        transactio0_.cancel_reason as cancel_r3_9_0_,
        transactio0_.cancel_type as cancel_t4_9_0_,
        transactio0_.cancelled_at as cancelle5_9_0_,
        transactio0_.cancelled_by as cancelle6_9_0_,
        transactio0_.chat_room_id as chat_roo7_9_0_,
        transactio0_.code_expires_at as code_exp8_9_0_,
        transactio0_.code_refresh_count as code_ref9_9_0_,
        transactio0_.completed_at as complet10_9_0_,
        transactio0_.contact_name as contact11_9_0_,
        transactio0_.contact_phone as contact12_9_0_,
        transactio0_.created_at as created13_9_0_,
        transactio0_.feedback as feedbac14_9_0_,
        transactio0_.inquiry_type as inquiry15_9_0_,
        transactio0_.meeting_detail_address as meeting16_9_0_,
        transactio0_.meeting_latitude as meeting17_9_0_,
        transactio0_.meeting_location_name as meeting18_9_0_,
        transactio0_.meeting_longitude as meeting19_9_0_,
        transactio0_.meeting_notes as meeting20_9_0_,
        transactio0_.meeting_time as meeting21_9_0_,
        transactio0_.product_id as product22_9_0_,
        transactio0_.rating as rating23_9_0_,
        transactio0_.reject_reason as reject_24_9_0_,
        transactio0_.request_by as request25_9_0_,
        transactio0_.requested_at as request26_9_0_,
        transactio0_.responded_at as respond27_9_0_,
        transactio0_.seller_id as seller_28_9_0_,
        transactio0_.status as status29_9_0_,
        transactio0_.transaction_code as transac30_9_0_,
        transactio0_.transaction_price as transac31_9_0_,
        transactio0_.updated_at as updated32_9_0_ 
    from
        transactions transactio0_ 
    where
        transactio0_.id=?
2025-10-01 00:18:59 [http-nio-8080-exec-2] INFO  com.fliliy.secondhand.service.ChatService - 发送交易响应消息 - 聊天室ID: 1971547214450921472, 交易ID: 1973059915022995456
Hibernate: 
    select
        chatmessag0_.id as id1_1_0_,
        chatmessag0_.chat_room_id as chat_roo2_1_0_,
        chatmessag0_.content as content3_1_0_,
        chatmessag0_.delivered_at as delivere4_1_0_,
        chatmessag0_.duration as duration5_1_0_,
        chatmessag0_.file_size as file_siz6_1_0_,
        chatmessag0_.file_url as file_url7_1_0_,
        chatmessag0_.image_height as image_he8_1_0_,
        chatmessag0_.image_width as image_wi9_1_0_,
        chatmessag0_.inquiry_type as inquiry10_1_0_,
        chatmessag0_.is_recalled as is_reca11_1_0_,
        chatmessag0_.message_type as message12_1_0_,
        chatmessag0_.product_snapshot as product13_1_0_,
        chatmessag0_.read_at as read_at14_1_0_,
        chatmessag0_.recalled_at as recalle15_1_0_,
        chatmessag0_.related_product_id as related16_1_0_,
        chatmessag0_.sender_id as sender_17_1_0_,
        chatmessag0_.sent_at as sent_at18_1_0_,
        chatmessag0_.status as status19_1_0_,
        chatmessag0_.system_data as system_20_1_0_,
        chatmessag0_.system_type as system_21_1_0_,
        chatmessag0_.thumbnail_url as thumbna22_1_0_,
        chatmessag0_.transaction_id as transac23_1_0_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.id=?
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_muted as buyer_mu3_2_0_,
        chatroom0_.buyer_pinned as buyer_pi4_2_0_,
        chatroom0_.buyer_unread_count as buyer_un5_2_0_,
        chatroom0_.created_at as created_6_2_0_,
        chatroom0_.last_message_content as last_mes7_2_0_,
        chatroom0_.last_message_id as last_mes8_2_0_,
        chatroom0_.last_message_sender_id as last_mes9_2_0_,
        chatroom0_.last_message_time as last_me10_2_0_,
        chatroom0_.last_message_type as last_me11_2_0_,
        chatroom0_.seller_id as seller_12_2_0_,
        chatroom0_.seller_muted as seller_13_2_0_,
        chatroom0_.seller_pinned as seller_14_2_0_,
        chatroom0_.seller_unread_count as seller_15_2_0_,
        chatroom0_.status as status16_2_0_,
        chatroom0_.total_messages as total_m17_2_0_,
        chatroom0_.transaction_id as transac18_2_0_,
        chatroom0_.updated_at as updated19_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
2025-10-01 00:18:59 [http-nio-8080-exec-2] INFO  c.f.secondhand.service.WebSocketMessageService - Broadcasted message to chatRoom 1971547214450921472: messageId=1973060014755155968
Hibernate: 
    insert 
    into
        chat_messages
        (chat_room_id, content, delivered_at, duration, file_size, file_url, image_height, image_width, inquiry_type, is_recalled, message_type, product_snapshot, read_at, recalled_at, related_product_id, sender_id, sent_at, status, system_data, system_type, thumbnail_url, transaction_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-01 00:18:59 [http-nio-8080-exec-2] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper - SQL Error: 1048, SQLState: 23000
2025-10-01 00:18:59 [http-nio-8080-exec-2] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper - Column 'sender_id' cannot be null
2025-10-01 00:18:59 [http-nio-8080-exec-2] INFO  o.h.engine.jdbc.batch.internal.AbstractBatchImpl - HHH000010: On release of batch it still contained JDBC statements
2025-10-01 00:18:59 [http-nio-8080-exec-2] ERROR c.f.secondhand.controller.TransactionController - Respond to transaction request failed
org.springframework.dao.DataIntegrityViolationException: could not execute statement; SQL [n/a]; constraint [null]; nested exception is org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:276)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:233)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:566)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.fliliy.secondhand.service.TransactionService$$EnhancerBySpringCGLIB$$e09f1bf.respondToTransactionRequest(<generated>)
	at com.fliliy.secondhand.controller.TransactionController.respondToTransactionRequest(TransactionController.java:212)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.fliliy.secondhand.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:59)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
Caused by: org.hibernate.exception.ConstraintViolationException: could not execute statement
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:59)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:37)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:200)
	at org.hibernate.engine.jdbc.batch.internal.NonBatchingBatch.addToBatch(NonBatchingBatch.java:46)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3375)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3937)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:107)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.lambda$executeActions$1(ActionQueue.java:478)
	at java.base/java.util.LinkedHashMap.forEach(LinkedHashMap.java:729)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:475)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:344)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:40)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:107)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1407)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:489)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3303)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2438)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:449)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	... 105 common frames omitted
Caused by: java.sql.SQLIntegrityConstraintViolationException: Column 'sender_id' cannot be null
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:916)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1061)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdateInternal(ClientPreparedStatement.java:1009)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeLargeUpdate(ClientPreparedStatement.java:1320)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeUpdate(ClientPreparedStatement.java:994)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeUpdate(HikariProxyPreparedStatement.java)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:197)
	... 126 common frames omitted
2025-10-01 00:18:59 [http-nio-8080-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:19:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:19:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:19:51 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /transactions/tx_1973059915022995456/respond
2025-10-01 00:19:51 [http-nio-8080-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:19:51 [http-nio-8080-exec-4] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1959106057909440512
2025-10-01 00:19:51 [http-nio-8080-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /transactions/tx_1973059915022995456/respond] with attributes [authenticated]
2025-10-01 00:19:51 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /transactions/tx_1973059915022995456/respond
2025-10-01 00:19:51 [http-nio-8080-exec-4] INFO  com.fliliy.secondhand.service.TransactionService - User 1959106057909440512 responding to transaction 1973059915022995456 with action AGREE
Hibernate: 
    select
        transactio0_.id as id1_9_0_,
        transactio0_.buyer_id as buyer_id2_9_0_,
        transactio0_.cancel_reason as cancel_r3_9_0_,
        transactio0_.cancel_type as cancel_t4_9_0_,
        transactio0_.cancelled_at as cancelle5_9_0_,
        transactio0_.cancelled_by as cancelle6_9_0_,
        transactio0_.chat_room_id as chat_roo7_9_0_,
        transactio0_.code_expires_at as code_exp8_9_0_,
        transactio0_.code_refresh_count as code_ref9_9_0_,
        transactio0_.completed_at as complet10_9_0_,
        transactio0_.contact_name as contact11_9_0_,
        transactio0_.contact_phone as contact12_9_0_,
        transactio0_.created_at as created13_9_0_,
        transactio0_.feedback as feedbac14_9_0_,
        transactio0_.inquiry_type as inquiry15_9_0_,
        transactio0_.meeting_detail_address as meeting16_9_0_,
        transactio0_.meeting_latitude as meeting17_9_0_,
        transactio0_.meeting_location_name as meeting18_9_0_,
        transactio0_.meeting_longitude as meeting19_9_0_,
        transactio0_.meeting_notes as meeting20_9_0_,
        transactio0_.meeting_time as meeting21_9_0_,
        transactio0_.product_id as product22_9_0_,
        transactio0_.rating as rating23_9_0_,
        transactio0_.reject_reason as reject_24_9_0_,
        transactio0_.request_by as request25_9_0_,
        transactio0_.requested_at as request26_9_0_,
        transactio0_.responded_at as respond27_9_0_,
        transactio0_.seller_id as seller_28_9_0_,
        transactio0_.status as status29_9_0_,
        transactio0_.transaction_code as transac30_9_0_,
        transactio0_.transaction_price as transac31_9_0_,
        transactio0_.updated_at as updated32_9_0_ 
    from
        transactions transactio0_ 
    where
        transactio0_.id=?
2025-10-01 00:19:51 [http-nio-8080-exec-4] INFO  com.fliliy.secondhand.service.ChatService - 发送交易响应消息 - 聊天室ID: 1971547214450921472, 交易ID: 1973059915022995456
Hibernate: 
    select
        chatmessag0_.id as id1_1_0_,
        chatmessag0_.chat_room_id as chat_roo2_1_0_,
        chatmessag0_.content as content3_1_0_,
        chatmessag0_.delivered_at as delivere4_1_0_,
        chatmessag0_.duration as duration5_1_0_,
        chatmessag0_.file_size as file_siz6_1_0_,
        chatmessag0_.file_url as file_url7_1_0_,
        chatmessag0_.image_height as image_he8_1_0_,
        chatmessag0_.image_width as image_wi9_1_0_,
        chatmessag0_.inquiry_type as inquiry10_1_0_,
        chatmessag0_.is_recalled as is_reca11_1_0_,
        chatmessag0_.message_type as message12_1_0_,
        chatmessag0_.product_snapshot as product13_1_0_,
        chatmessag0_.read_at as read_at14_1_0_,
        chatmessag0_.recalled_at as recalle15_1_0_,
        chatmessag0_.related_product_id as related16_1_0_,
        chatmessag0_.sender_id as sender_17_1_0_,
        chatmessag0_.sent_at as sent_at18_1_0_,
        chatmessag0_.status as status19_1_0_,
        chatmessag0_.system_data as system_20_1_0_,
        chatmessag0_.system_type as system_21_1_0_,
        chatmessag0_.thumbnail_url as thumbna22_1_0_,
        chatmessag0_.transaction_id as transac23_1_0_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.id=?
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_muted as buyer_mu3_2_0_,
        chatroom0_.buyer_pinned as buyer_pi4_2_0_,
        chatroom0_.buyer_unread_count as buyer_un5_2_0_,
        chatroom0_.created_at as created_6_2_0_,
        chatroom0_.last_message_content as last_mes7_2_0_,
        chatroom0_.last_message_id as last_mes8_2_0_,
        chatroom0_.last_message_sender_id as last_mes9_2_0_,
        chatroom0_.last_message_time as last_me10_2_0_,
        chatroom0_.last_message_type as last_me11_2_0_,
        chatroom0_.seller_id as seller_12_2_0_,
        chatroom0_.seller_muted as seller_13_2_0_,
        chatroom0_.seller_pinned as seller_14_2_0_,
        chatroom0_.seller_unread_count as seller_15_2_0_,
        chatroom0_.status as status16_2_0_,
        chatroom0_.total_messages as total_m17_2_0_,
        chatroom0_.transaction_id as transac18_2_0_,
        chatroom0_.updated_at as updated19_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
2025-10-01 00:19:51 [http-nio-8080-exec-4] INFO  c.f.secondhand.service.WebSocketMessageService - Broadcasted message to chatRoom 1971547214450921472: messageId=1973060231516786688
Hibernate: 
    insert 
    into
        chat_messages
        (chat_room_id, content, delivered_at, duration, file_size, file_url, image_height, image_width, inquiry_type, is_recalled, message_type, product_snapshot, read_at, recalled_at, related_product_id, sender_id, sent_at, status, system_data, system_type, thumbnail_url, transaction_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        transactions 
    set
        buyer_id=?,
        cancel_reason=?,
        cancel_type=?,
        cancelled_at=?,
        cancelled_by=?,
        chat_room_id=?,
        code_expires_at=?,
        code_refresh_count=?,
        completed_at=?,
        contact_name=?,
        contact_phone=?,
        created_at=?,
        feedback=?,
        inquiry_type=?,
        meeting_detail_address=?,
        meeting_latitude=?,
        meeting_location_name=?,
        meeting_longitude=?,
        meeting_notes=?,
        meeting_time=?,
        product_id=?,
        rating=?,
        reject_reason=?,
        request_by=?,
        requested_at=?,
        responded_at=?,
        seller_id=?,
        status=?,
        transaction_code=?,
        transaction_price=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        buyer_id=?,
        buyer_muted=?,
        buyer_pinned=?,
        buyer_unread_count=?,
        created_at=?,
        last_message_content=?,
        last_message_id=?,
        last_message_sender_id=?,
        last_message_time=?,
        last_message_type=?,
        seller_id=?,
        seller_muted=?,
        seller_pinned=?,
        seller_unread_count=?,
        status=?,
        total_messages=?,
        transaction_id=?,
        updated_at=? 
    where
        id=?
2025-10-01 00:19:51 [http-nio-8080-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:19:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:19:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:20:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:20:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:20:30 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /transactions/tx_1973059915022995456/complete
2025-10-01 00:20:30 [http-nio-8080-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:20:30 [http-nio-8080-exec-6] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1959106057909440512
2025-10-01 00:20:30 [http-nio-8080-exec-6] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /transactions/tx_1973059915022995456/complete] with attributes [authenticated]
2025-10-01 00:20:30 [http-nio-8080-exec-6] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /transactions/tx_1973059915022995456/complete
2025-10-01 00:20:30 [http-nio-8080-exec-6] INFO  com.fliliy.secondhand.service.TransactionService - User 1959106057909440512 completing transaction 1973059915022995456
Hibernate: 
    select
        transactio0_.id as id1_9_0_,
        transactio0_.buyer_id as buyer_id2_9_0_,
        transactio0_.cancel_reason as cancel_r3_9_0_,
        transactio0_.cancel_type as cancel_t4_9_0_,
        transactio0_.cancelled_at as cancelle5_9_0_,
        transactio0_.cancelled_by as cancelle6_9_0_,
        transactio0_.chat_room_id as chat_roo7_9_0_,
        transactio0_.code_expires_at as code_exp8_9_0_,
        transactio0_.code_refresh_count as code_ref9_9_0_,
        transactio0_.completed_at as complet10_9_0_,
        transactio0_.contact_name as contact11_9_0_,
        transactio0_.contact_phone as contact12_9_0_,
        transactio0_.created_at as created13_9_0_,
        transactio0_.feedback as feedbac14_9_0_,
        transactio0_.inquiry_type as inquiry15_9_0_,
        transactio0_.meeting_detail_address as meeting16_9_0_,
        transactio0_.meeting_latitude as meeting17_9_0_,
        transactio0_.meeting_location_name as meeting18_9_0_,
        transactio0_.meeting_longitude as meeting19_9_0_,
        transactio0_.meeting_notes as meeting20_9_0_,
        transactio0_.meeting_time as meeting21_9_0_,
        transactio0_.product_id as product22_9_0_,
        transactio0_.rating as rating23_9_0_,
        transactio0_.reject_reason as reject_24_9_0_,
        transactio0_.request_by as request25_9_0_,
        transactio0_.requested_at as request26_9_0_,
        transactio0_.responded_at as respond27_9_0_,
        transactio0_.seller_id as seller_28_9_0_,
        transactio0_.status as status29_9_0_,
        transactio0_.transaction_code as transac30_9_0_,
        transactio0_.transaction_price as transac31_9_0_,
        transactio0_.updated_at as updated32_9_0_ 
    from
        transactions transactio0_ 
    where
        transactio0_.id=?
Hibernate: 
    select
        product0_.id as id1_6_0_,
        product0_.category_id as category2_6_0_,
        product0_.chat_count as chat_cou3_6_0_,
        product0_.city as city4_6_0_,
        product0_.created_at as created_5_6_0_,
        product0_.deleted_at as deleted_6_6_0_,
        product0_.description as descript7_6_0_,
        product0_.detail_address as detail_a8_6_0_,
        product0_.district as district9_6_0_,
        product0_.favorite_count as favorit10_6_0_,
        product0_.has_warranty as has_war11_6_0_,
        product0_.inquiry_count as inquiry12_6_0_,
        product0_.is_promoted as is_prom13_6_0_,
        product0_.latitude as latitud14_6_0_,
        product0_.longitude as longitu15_6_0_,
        product0_.original_price as origina16_6_0_,
        product0_.price as price17_6_0_,
        product0_.product_condition as product18_6_0_,
        product0_.promoted_at as promote19_6_0_,
        product0_.promoted_expires_at as promote20_6_0_,
        product0_.province as provinc21_6_0_,
        product0_.published_at as publish22_6_0_,
        product0_.seller_id as seller_23_6_0_,
        product0_.sold_at as sold_at24_6_0_,
        product0_.status as status25_6_0_,
        product0_.title as title26_6_0_,
        product0_.updated_at as updated27_6_0_,
        product0_.usage_type as usage_t28_6_0_,
        product0_.usage_unit as usage_u29_6_0_,
        product0_.usage_value as usage_v30_6_0_,
        product0_.view_count as view_co31_6_0_,
        product0_.warranty_description as warrant32_6_0_,
        product0_.warranty_months as warrant33_6_0_,
        product0_.warranty_type as warrant34_6_0_ 
    from
        products product0_ 
    where
        product0_.id=?
2025-10-01 00:20:30 [http-nio-8080-exec-6] WARN  com.fliliy.secondhand.service.TransactionService - Failed to send completion message: 不支持的消息类型: SYSTEM
Hibernate: 
    update
        transactions 
    set
        buyer_id=?,
        cancel_reason=?,
        cancel_type=?,
        cancelled_at=?,
        cancelled_by=?,
        chat_room_id=?,
        code_expires_at=?,
        code_refresh_count=?,
        completed_at=?,
        contact_name=?,
        contact_phone=?,
        created_at=?,
        feedback=?,
        inquiry_type=?,
        meeting_detail_address=?,
        meeting_latitude=?,
        meeting_location_name=?,
        meeting_longitude=?,
        meeting_notes=?,
        meeting_time=?,
        product_id=?,
        rating=?,
        reject_reason=?,
        request_by=?,
        requested_at=?,
        responded_at=?,
        seller_id=?,
        status=?,
        transaction_code=?,
        transaction_price=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    update
        products 
    set
        category_id=?,
        chat_count=?,
        city=?,
        deleted_at=?,
        description=?,
        detail_address=?,
        district=?,
        favorite_count=?,
        has_warranty=?,
        inquiry_count=?,
        is_promoted=?,
        latitude=?,
        longitude=?,
        original_price=?,
        price=?,
        product_condition=?,
        promoted_at=?,
        promoted_expires_at=?,
        province=?,
        published_at=?,
        seller_id=?,
        sold_at=?,
        status=?,
        title=?,
        updated_at=?,
        usage_type=?,
        usage_unit=?,
        usage_value=?,
        view_count=?,
        warranty_description=?,
        warranty_months=?,
        warranty_type=? 
    where
        id=?
2025-10-01 00:20:30 [http-nio-8080-exec-6] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:20:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:20:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:21:12 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /transactions/request
2025-10-01 00:21:12 [http-nio-8080-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:21:12 [http-nio-8080-exec-9] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1962950810434408448
2025-10-01 00:21:12 [http-nio-8080-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /transactions/request] with attributes [authenticated]
2025-10-01 00:21:12 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /transactions/request
2025-10-01 00:21:12 [http-nio-8080-exec-9] INFO  com.fliliy.secondhand.service.TransactionService - User 1962950810434408448 creating transaction request for product 1969757702427119616 in chatRoom 1971547214450921472
Hibernate: 
    SELECT
        CASE 
            WHEN COUNT(*) > 0 THEN 1 
            ELSE 0 
        END 
    FROM
        chat_rooms 
    WHERE
        id = ? 
        AND (
            buyer_id = ? 
            OR seller_id = ?
        )
Hibernate: 
    select
        product0_.id as id1_6_0_,
        product0_.category_id as category2_6_0_,
        product0_.chat_count as chat_cou3_6_0_,
        product0_.city as city4_6_0_,
        product0_.created_at as created_5_6_0_,
        product0_.deleted_at as deleted_6_6_0_,
        product0_.description as descript7_6_0_,
        product0_.detail_address as detail_a8_6_0_,
        product0_.district as district9_6_0_,
        product0_.favorite_count as favorit10_6_0_,
        product0_.has_warranty as has_war11_6_0_,
        product0_.inquiry_count as inquiry12_6_0_,
        product0_.is_promoted as is_prom13_6_0_,
        product0_.latitude as latitud14_6_0_,
        product0_.longitude as longitu15_6_0_,
        product0_.original_price as origina16_6_0_,
        product0_.price as price17_6_0_,
        product0_.product_condition as product18_6_0_,
        product0_.promoted_at as promote19_6_0_,
        product0_.promoted_expires_at as promote20_6_0_,
        product0_.province as provinc21_6_0_,
        product0_.published_at as publish22_6_0_,
        product0_.seller_id as seller_23_6_0_,
        product0_.sold_at as sold_at24_6_0_,
        product0_.status as status25_6_0_,
        product0_.title as title26_6_0_,
        product0_.updated_at as updated27_6_0_,
        product0_.usage_type as usage_t28_6_0_,
        product0_.usage_unit as usage_u29_6_0_,
        product0_.usage_value as usage_v30_6_0_,
        product0_.view_count as view_co31_6_0_,
        product0_.warranty_description as warrant32_6_0_,
        product0_.warranty_months as warrant33_6_0_,
        product0_.warranty_type as warrant34_6_0_ 
    from
        products product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_muted as buyer_mu3_2_0_,
        chatroom0_.buyer_pinned as buyer_pi4_2_0_,
        chatroom0_.buyer_unread_count as buyer_un5_2_0_,
        chatroom0_.created_at as created_6_2_0_,
        chatroom0_.last_message_content as last_mes7_2_0_,
        chatroom0_.last_message_id as last_mes8_2_0_,
        chatroom0_.last_message_sender_id as last_mes9_2_0_,
        chatroom0_.last_message_time as last_me10_2_0_,
        chatroom0_.last_message_type as last_me11_2_0_,
        chatroom0_.seller_id as seller_12_2_0_,
        chatroom0_.seller_muted as seller_13_2_0_,
        chatroom0_.seller_pinned as seller_14_2_0_,
        chatroom0_.seller_unread_count as seller_15_2_0_,
        chatroom0_.status as status16_2_0_,
        chatroom0_.total_messages as total_m17_2_0_,
        chatroom0_.transaction_id as transac18_2_0_,
        chatroom0_.updated_at as updated19_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
Hibernate: 
    select
        transactio0_.id as id1_9_,
        transactio0_.buyer_id as buyer_id2_9_,
        transactio0_.cancel_reason as cancel_r3_9_,
        transactio0_.cancel_type as cancel_t4_9_,
        transactio0_.cancelled_at as cancelle5_9_,
        transactio0_.cancelled_by as cancelle6_9_,
        transactio0_.chat_room_id as chat_roo7_9_,
        transactio0_.code_expires_at as code_exp8_9_,
        transactio0_.code_refresh_count as code_ref9_9_,
        transactio0_.completed_at as complet10_9_,
        transactio0_.contact_name as contact11_9_,
        transactio0_.contact_phone as contact12_9_,
        transactio0_.created_at as created13_9_,
        transactio0_.feedback as feedbac14_9_,
        transactio0_.inquiry_type as inquiry15_9_,
        transactio0_.meeting_detail_address as meeting16_9_,
        transactio0_.meeting_latitude as meeting17_9_,
        transactio0_.meeting_location_name as meeting18_9_,
        transactio0_.meeting_longitude as meeting19_9_,
        transactio0_.meeting_notes as meeting20_9_,
        transactio0_.meeting_time as meeting21_9_,
        transactio0_.product_id as product22_9_,
        transactio0_.rating as rating23_9_,
        transactio0_.reject_reason as reject_24_9_,
        transactio0_.request_by as request25_9_,
        transactio0_.requested_at as request26_9_,
        transactio0_.responded_at as respond27_9_,
        transactio0_.seller_id as seller_28_9_,
        transactio0_.status as status29_9_,
        transactio0_.transaction_code as transac30_9_,
        transactio0_.transaction_price as transac31_9_,
        transactio0_.updated_at as updated32_9_ 
    from
        transactions transactio0_ 
    where
        transactio0_.buyer_id=? 
        and transactio0_.product_id=? 
        and transactio0_.status<>?
Hibernate: 
    select
        transactio0_.id as id1_9_0_,
        transactio0_.buyer_id as buyer_id2_9_0_,
        transactio0_.cancel_reason as cancel_r3_9_0_,
        transactio0_.cancel_type as cancel_t4_9_0_,
        transactio0_.cancelled_at as cancelle5_9_0_,
        transactio0_.cancelled_by as cancelle6_9_0_,
        transactio0_.chat_room_id as chat_roo7_9_0_,
        transactio0_.code_expires_at as code_exp8_9_0_,
        transactio0_.code_refresh_count as code_ref9_9_0_,
        transactio0_.completed_at as complet10_9_0_,
        transactio0_.contact_name as contact11_9_0_,
        transactio0_.contact_phone as contact12_9_0_,
        transactio0_.created_at as created13_9_0_,
        transactio0_.feedback as feedbac14_9_0_,
        transactio0_.inquiry_type as inquiry15_9_0_,
        transactio0_.meeting_detail_address as meeting16_9_0_,
        transactio0_.meeting_latitude as meeting17_9_0_,
        transactio0_.meeting_location_name as meeting18_9_0_,
        transactio0_.meeting_longitude as meeting19_9_0_,
        transactio0_.meeting_notes as meeting20_9_0_,
        transactio0_.meeting_time as meeting21_9_0_,
        transactio0_.product_id as product22_9_0_,
        transactio0_.rating as rating23_9_0_,
        transactio0_.reject_reason as reject_24_9_0_,
        transactio0_.request_by as request25_9_0_,
        transactio0_.requested_at as request26_9_0_,
        transactio0_.responded_at as respond27_9_0_,
        transactio0_.seller_id as seller_28_9_0_,
        transactio0_.status as status29_9_0_,
        transactio0_.transaction_code as transac30_9_0_,
        transactio0_.transaction_price as transac31_9_0_,
        transactio0_.updated_at as updated32_9_0_ 
    from
        transactions transactio0_ 
    where
        transactio0_.id=?
2025-10-01 00:21:12 [http-nio-8080-exec-9] INFO  com.fliliy.secondhand.service.ChatService - 发送交易申请消息 - 聊天室ID: 1971547214450921472, 交易ID: 1973060570131337216
Hibernate: 
    select
        chatmessag0_.id as id1_1_0_,
        chatmessag0_.chat_room_id as chat_roo2_1_0_,
        chatmessag0_.content as content3_1_0_,
        chatmessag0_.delivered_at as delivere4_1_0_,
        chatmessag0_.duration as duration5_1_0_,
        chatmessag0_.file_size as file_siz6_1_0_,
        chatmessag0_.file_url as file_url7_1_0_,
        chatmessag0_.image_height as image_he8_1_0_,
        chatmessag0_.image_width as image_wi9_1_0_,
        chatmessag0_.inquiry_type as inquiry10_1_0_,
        chatmessag0_.is_recalled as is_reca11_1_0_,
        chatmessag0_.message_type as message12_1_0_,
        chatmessag0_.product_snapshot as product13_1_0_,
        chatmessag0_.read_at as read_at14_1_0_,
        chatmessag0_.recalled_at as recalle15_1_0_,
        chatmessag0_.related_product_id as related16_1_0_,
        chatmessag0_.sender_id as sender_17_1_0_,
        chatmessag0_.sent_at as sent_at18_1_0_,
        chatmessag0_.status as status19_1_0_,
        chatmessag0_.system_data as system_20_1_0_,
        chatmessag0_.system_type as system_21_1_0_,
        chatmessag0_.thumbnail_url as thumbna22_1_0_,
        chatmessag0_.transaction_id as transac23_1_0_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.id=?
Hibernate: 
    update
        chat_rooms 
    set
        last_message_id=?,
        last_message_content=?,
        last_message_type=?,
        last_message_time=CURRENT_TIMESTAMP,
        last_message_sender_id=?,
        updated_at=CURRENT_TIMESTAMP 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        total_messages=total_messages+1 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        buyer_unread_count=buyer_unread_count+1 
    where
        id=? 
        and buyer_id<>?
Hibernate: 
    update
        chat_rooms 
    set
        seller_unread_count=seller_unread_count+1 
    where
        id=? 
        and seller_id<>?
2025-10-01 00:21:12 [http-nio-8080-exec-9] INFO  c.f.secondhand.service.WebSocketMessageService - Broadcasted message to chatRoom 1971547214450921472: messageId=1973060570139725824
2025-10-01 00:21:12 [http-nio-8080-exec-9] INFO  c.f.secondhand.service.WebSocketMessageService - Sent private message to user 1959106057909440512
Hibernate: 
    insert 
    into
        transactions
        (buyer_id, cancel_reason, cancel_type, cancelled_at, cancelled_by, chat_room_id, code_expires_at, code_refresh_count, completed_at, contact_name, contact_phone, created_at, feedback, inquiry_type, meeting_detail_address, meeting_latitude, meeting_location_name, meeting_longitude, meeting_notes, meeting_time, product_id, rating, reject_reason, request_by, requested_at, responded_at, seller_id, status, transaction_code, transaction_price, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        chat_messages
        (chat_room_id, content, delivered_at, duration, file_size, file_url, image_height, image_width, inquiry_type, is_recalled, message_type, product_snapshot, read_at, recalled_at, related_product_id, sender_id, sent_at, status, system_data, system_type, thumbnail_url, transaction_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-01 00:21:12 [http-nio-8080-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:21:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:21:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:21:24 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /transactions/tx_1973060570131337216/respond
2025-10-01 00:21:24 [http-nio-8080-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:21:24 [http-nio-8080-exec-10] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1959106057909440512
2025-10-01 00:21:24 [http-nio-8080-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /transactions/tx_1973060570131337216/respond] with attributes [authenticated]
2025-10-01 00:21:24 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /transactions/tx_1973060570131337216/respond
2025-10-01 00:21:24 [http-nio-8080-exec-10] INFO  com.fliliy.secondhand.service.TransactionService - User 1959106057909440512 responding to transaction 1973060570131337216 with action REJECT
Hibernate: 
    select
        transactio0_.id as id1_9_0_,
        transactio0_.buyer_id as buyer_id2_9_0_,
        transactio0_.cancel_reason as cancel_r3_9_0_,
        transactio0_.cancel_type as cancel_t4_9_0_,
        transactio0_.cancelled_at as cancelle5_9_0_,
        transactio0_.cancelled_by as cancelle6_9_0_,
        transactio0_.chat_room_id as chat_roo7_9_0_,
        transactio0_.code_expires_at as code_exp8_9_0_,
        transactio0_.code_refresh_count as code_ref9_9_0_,
        transactio0_.completed_at as complet10_9_0_,
        transactio0_.contact_name as contact11_9_0_,
        transactio0_.contact_phone as contact12_9_0_,
        transactio0_.created_at as created13_9_0_,
        transactio0_.feedback as feedbac14_9_0_,
        transactio0_.inquiry_type as inquiry15_9_0_,
        transactio0_.meeting_detail_address as meeting16_9_0_,
        transactio0_.meeting_latitude as meeting17_9_0_,
        transactio0_.meeting_location_name as meeting18_9_0_,
        transactio0_.meeting_longitude as meeting19_9_0_,
        transactio0_.meeting_notes as meeting20_9_0_,
        transactio0_.meeting_time as meeting21_9_0_,
        transactio0_.product_id as product22_9_0_,
        transactio0_.rating as rating23_9_0_,
        transactio0_.reject_reason as reject_24_9_0_,
        transactio0_.request_by as request25_9_0_,
        transactio0_.requested_at as request26_9_0_,
        transactio0_.responded_at as respond27_9_0_,
        transactio0_.seller_id as seller_28_9_0_,
        transactio0_.status as status29_9_0_,
        transactio0_.transaction_code as transac30_9_0_,
        transactio0_.transaction_price as transac31_9_0_,
        transactio0_.updated_at as updated32_9_0_ 
    from
        transactions transactio0_ 
    where
        transactio0_.id=?
2025-10-01 00:21:24 [http-nio-8080-exec-10] INFO  com.fliliy.secondhand.service.ChatService - 发送交易响应消息 - 聊天室ID: 1971547214450921472, 交易ID: 1973060570131337216
Hibernate: 
    select
        chatmessag0_.id as id1_1_0_,
        chatmessag0_.chat_room_id as chat_roo2_1_0_,
        chatmessag0_.content as content3_1_0_,
        chatmessag0_.delivered_at as delivere4_1_0_,
        chatmessag0_.duration as duration5_1_0_,
        chatmessag0_.file_size as file_siz6_1_0_,
        chatmessag0_.file_url as file_url7_1_0_,
        chatmessag0_.image_height as image_he8_1_0_,
        chatmessag0_.image_width as image_wi9_1_0_,
        chatmessag0_.inquiry_type as inquiry10_1_0_,
        chatmessag0_.is_recalled as is_reca11_1_0_,
        chatmessag0_.message_type as message12_1_0_,
        chatmessag0_.product_snapshot as product13_1_0_,
        chatmessag0_.read_at as read_at14_1_0_,
        chatmessag0_.recalled_at as recalle15_1_0_,
        chatmessag0_.related_product_id as related16_1_0_,
        chatmessag0_.sender_id as sender_17_1_0_,
        chatmessag0_.sent_at as sent_at18_1_0_,
        chatmessag0_.status as status19_1_0_,
        chatmessag0_.system_data as system_20_1_0_,
        chatmessag0_.system_type as system_21_1_0_,
        chatmessag0_.thumbnail_url as thumbna22_1_0_,
        chatmessag0_.transaction_id as transac23_1_0_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.id=?
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_muted as buyer_mu3_2_0_,
        chatroom0_.buyer_pinned as buyer_pi4_2_0_,
        chatroom0_.buyer_unread_count as buyer_un5_2_0_,
        chatroom0_.created_at as created_6_2_0_,
        chatroom0_.last_message_content as last_mes7_2_0_,
        chatroom0_.last_message_id as last_mes8_2_0_,
        chatroom0_.last_message_sender_id as last_mes9_2_0_,
        chatroom0_.last_message_time as last_me10_2_0_,
        chatroom0_.last_message_type as last_me11_2_0_,
        chatroom0_.seller_id as seller_12_2_0_,
        chatroom0_.seller_muted as seller_13_2_0_,
        chatroom0_.seller_pinned as seller_14_2_0_,
        chatroom0_.seller_unread_count as seller_15_2_0_,
        chatroom0_.status as status16_2_0_,
        chatroom0_.total_messages as total_m17_2_0_,
        chatroom0_.transaction_id as transac18_2_0_,
        chatroom0_.updated_at as updated19_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
2025-10-01 00:21:24 [http-nio-8080-exec-10] INFO  c.f.secondhand.service.WebSocketMessageService - Broadcasted message to chatRoom 1971547214450921472: messageId=1973060620349739008
Hibernate: 
    insert 
    into
        chat_messages
        (chat_room_id, content, delivered_at, duration, file_size, file_url, image_height, image_width, inquiry_type, is_recalled, message_type, product_snapshot, read_at, recalled_at, related_product_id, sender_id, sent_at, status, system_data, system_type, thumbnail_url, transaction_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        transactions 
    set
        buyer_id=?,
        cancel_reason=?,
        cancel_type=?,
        cancelled_at=?,
        cancelled_by=?,
        chat_room_id=?,
        code_expires_at=?,
        code_refresh_count=?,
        completed_at=?,
        contact_name=?,
        contact_phone=?,
        created_at=?,
        feedback=?,
        inquiry_type=?,
        meeting_detail_address=?,
        meeting_latitude=?,
        meeting_location_name=?,
        meeting_longitude=?,
        meeting_notes=?,
        meeting_time=?,
        product_id=?,
        rating=?,
        reject_reason=?,
        request_by=?,
        requested_at=?,
        responded_at=?,
        seller_id=?,
        status=?,
        transaction_code=?,
        transaction_price=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        buyer_id=?,
        buyer_muted=?,
        buyer_pinned=?,
        buyer_unread_count=?,
        created_at=?,
        last_message_content=?,
        last_message_id=?,
        last_message_sender_id=?,
        last_message_time=?,
        last_message_type=?,
        seller_id=?,
        seller_muted=?,
        seller_pinned=?,
        seller_unread_count=?,
        status=?,
        total_messages=?,
        transaction_id=?,
        updated_at=? 
    where
        id=?
2025-10-01 00:21:24 [http-nio-8080-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:21:49 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /transactions/request
2025-10-01 00:21:49 [http-nio-8080-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:21:49 [http-nio-8080-exec-2] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1962950810434408448
2025-10-01 00:21:49 [http-nio-8080-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /transactions/request] with attributes [authenticated]
2025-10-01 00:21:49 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /transactions/request
2025-10-01 00:21:49 [http-nio-8080-exec-2] INFO  com.fliliy.secondhand.service.TransactionService - User 1962950810434408448 creating transaction request for product 1969760518407327744 in chatRoom 1971547214450921472
Hibernate: 
    SELECT
        CASE 
            WHEN COUNT(*) > 0 THEN 1 
            ELSE 0 
        END 
    FROM
        chat_rooms 
    WHERE
        id = ? 
        AND (
            buyer_id = ? 
            OR seller_id = ?
        )
Hibernate: 
    select
        product0_.id as id1_6_0_,
        product0_.category_id as category2_6_0_,
        product0_.chat_count as chat_cou3_6_0_,
        product0_.city as city4_6_0_,
        product0_.created_at as created_5_6_0_,
        product0_.deleted_at as deleted_6_6_0_,
        product0_.description as descript7_6_0_,
        product0_.detail_address as detail_a8_6_0_,
        product0_.district as district9_6_0_,
        product0_.favorite_count as favorit10_6_0_,
        product0_.has_warranty as has_war11_6_0_,
        product0_.inquiry_count as inquiry12_6_0_,
        product0_.is_promoted as is_prom13_6_0_,
        product0_.latitude as latitud14_6_0_,
        product0_.longitude as longitu15_6_0_,
        product0_.original_price as origina16_6_0_,
        product0_.price as price17_6_0_,
        product0_.product_condition as product18_6_0_,
        product0_.promoted_at as promote19_6_0_,
        product0_.promoted_expires_at as promote20_6_0_,
        product0_.province as provinc21_6_0_,
        product0_.published_at as publish22_6_0_,
        product0_.seller_id as seller_23_6_0_,
        product0_.sold_at as sold_at24_6_0_,
        product0_.status as status25_6_0_,
        product0_.title as title26_6_0_,
        product0_.updated_at as updated27_6_0_,
        product0_.usage_type as usage_t28_6_0_,
        product0_.usage_unit as usage_u29_6_0_,
        product0_.usage_value as usage_v30_6_0_,
        product0_.view_count as view_co31_6_0_,
        product0_.warranty_description as warrant32_6_0_,
        product0_.warranty_months as warrant33_6_0_,
        product0_.warranty_type as warrant34_6_0_ 
    from
        products product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_muted as buyer_mu3_2_0_,
        chatroom0_.buyer_pinned as buyer_pi4_2_0_,
        chatroom0_.buyer_unread_count as buyer_un5_2_0_,
        chatroom0_.created_at as created_6_2_0_,
        chatroom0_.last_message_content as last_mes7_2_0_,
        chatroom0_.last_message_id as last_mes8_2_0_,
        chatroom0_.last_message_sender_id as last_mes9_2_0_,
        chatroom0_.last_message_time as last_me10_2_0_,
        chatroom0_.last_message_type as last_me11_2_0_,
        chatroom0_.seller_id as seller_12_2_0_,
        chatroom0_.seller_muted as seller_13_2_0_,
        chatroom0_.seller_pinned as seller_14_2_0_,
        chatroom0_.seller_unread_count as seller_15_2_0_,
        chatroom0_.status as status16_2_0_,
        chatroom0_.total_messages as total_m17_2_0_,
        chatroom0_.transaction_id as transac18_2_0_,
        chatroom0_.updated_at as updated19_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
Hibernate: 
    select
        transactio0_.id as id1_9_,
        transactio0_.buyer_id as buyer_id2_9_,
        transactio0_.cancel_reason as cancel_r3_9_,
        transactio0_.cancel_type as cancel_t4_9_,
        transactio0_.cancelled_at as cancelle5_9_,
        transactio0_.cancelled_by as cancelle6_9_,
        transactio0_.chat_room_id as chat_roo7_9_,
        transactio0_.code_expires_at as code_exp8_9_,
        transactio0_.code_refresh_count as code_ref9_9_,
        transactio0_.completed_at as complet10_9_,
        transactio0_.contact_name as contact11_9_,
        transactio0_.contact_phone as contact12_9_,
        transactio0_.created_at as created13_9_,
        transactio0_.feedback as feedbac14_9_,
        transactio0_.inquiry_type as inquiry15_9_,
        transactio0_.meeting_detail_address as meeting16_9_,
        transactio0_.meeting_latitude as meeting17_9_,
        transactio0_.meeting_location_name as meeting18_9_,
        transactio0_.meeting_longitude as meeting19_9_,
        transactio0_.meeting_notes as meeting20_9_,
        transactio0_.meeting_time as meeting21_9_,
        transactio0_.product_id as product22_9_,
        transactio0_.rating as rating23_9_,
        transactio0_.reject_reason as reject_24_9_,
        transactio0_.request_by as request25_9_,
        transactio0_.requested_at as request26_9_,
        transactio0_.responded_at as respond27_9_,
        transactio0_.seller_id as seller_28_9_,
        transactio0_.status as status29_9_,
        transactio0_.transaction_code as transac30_9_,
        transactio0_.transaction_price as transac31_9_,
        transactio0_.updated_at as updated32_9_ 
    from
        transactions transactio0_ 
    where
        transactio0_.buyer_id=? 
        and transactio0_.product_id=? 
        and transactio0_.status<>?
Hibernate: 
    select
        transactio0_.id as id1_9_0_,
        transactio0_.buyer_id as buyer_id2_9_0_,
        transactio0_.cancel_reason as cancel_r3_9_0_,
        transactio0_.cancel_type as cancel_t4_9_0_,
        transactio0_.cancelled_at as cancelle5_9_0_,
        transactio0_.cancelled_by as cancelle6_9_0_,
        transactio0_.chat_room_id as chat_roo7_9_0_,
        transactio0_.code_expires_at as code_exp8_9_0_,
        transactio0_.code_refresh_count as code_ref9_9_0_,
        transactio0_.completed_at as complet10_9_0_,
        transactio0_.contact_name as contact11_9_0_,
        transactio0_.contact_phone as contact12_9_0_,
        transactio0_.created_at as created13_9_0_,
        transactio0_.feedback as feedbac14_9_0_,
        transactio0_.inquiry_type as inquiry15_9_0_,
        transactio0_.meeting_detail_address as meeting16_9_0_,
        transactio0_.meeting_latitude as meeting17_9_0_,
        transactio0_.meeting_location_name as meeting18_9_0_,
        transactio0_.meeting_longitude as meeting19_9_0_,
        transactio0_.meeting_notes as meeting20_9_0_,
        transactio0_.meeting_time as meeting21_9_0_,
        transactio0_.product_id as product22_9_0_,
        transactio0_.rating as rating23_9_0_,
        transactio0_.reject_reason as reject_24_9_0_,
        transactio0_.request_by as request25_9_0_,
        transactio0_.requested_at as request26_9_0_,
        transactio0_.responded_at as respond27_9_0_,
        transactio0_.seller_id as seller_28_9_0_,
        transactio0_.status as status29_9_0_,
        transactio0_.transaction_code as transac30_9_0_,
        transactio0_.transaction_price as transac31_9_0_,
        transactio0_.updated_at as updated32_9_0_ 
    from
        transactions transactio0_ 
    where
        transactio0_.id=?
2025-10-01 00:21:49 [http-nio-8080-exec-2] INFO  com.fliliy.secondhand.service.ChatService - 发送交易申请消息 - 聊天室ID: 1971547214450921472, 交易ID: 1973060727640035328
Hibernate: 
    select
        chatmessag0_.id as id1_1_0_,
        chatmessag0_.chat_room_id as chat_roo2_1_0_,
        chatmessag0_.content as content3_1_0_,
        chatmessag0_.delivered_at as delivere4_1_0_,
        chatmessag0_.duration as duration5_1_0_,
        chatmessag0_.file_size as file_siz6_1_0_,
        chatmessag0_.file_url as file_url7_1_0_,
        chatmessag0_.image_height as image_he8_1_0_,
        chatmessag0_.image_width as image_wi9_1_0_,
        chatmessag0_.inquiry_type as inquiry10_1_0_,
        chatmessag0_.is_recalled as is_reca11_1_0_,
        chatmessag0_.message_type as message12_1_0_,
        chatmessag0_.product_snapshot as product13_1_0_,
        chatmessag0_.read_at as read_at14_1_0_,
        chatmessag0_.recalled_at as recalle15_1_0_,
        chatmessag0_.related_product_id as related16_1_0_,
        chatmessag0_.sender_id as sender_17_1_0_,
        chatmessag0_.sent_at as sent_at18_1_0_,
        chatmessag0_.status as status19_1_0_,
        chatmessag0_.system_data as system_20_1_0_,
        chatmessag0_.system_type as system_21_1_0_,
        chatmessag0_.thumbnail_url as thumbna22_1_0_,
        chatmessag0_.transaction_id as transac23_1_0_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.id=?
Hibernate: 
    update
        chat_rooms 
    set
        last_message_id=?,
        last_message_content=?,
        last_message_type=?,
        last_message_time=CURRENT_TIMESTAMP,
        last_message_sender_id=?,
        updated_at=CURRENT_TIMESTAMP 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        total_messages=total_messages+1 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        buyer_unread_count=buyer_unread_count+1 
    where
        id=? 
        and buyer_id<>?
Hibernate: 
    update
        chat_rooms 
    set
        seller_unread_count=seller_unread_count+1 
    where
        id=? 
        and seller_id<>?
2025-10-01 00:21:49 [http-nio-8080-exec-2] INFO  c.f.secondhand.service.WebSocketMessageService - Broadcasted message to chatRoom 1971547214450921472: messageId=1973060727648423936
2025-10-01 00:21:49 [http-nio-8080-exec-2] INFO  c.f.secondhand.service.WebSocketMessageService - Sent private message to user 1959106057909440512
Hibernate: 
    insert 
    into
        transactions
        (buyer_id, cancel_reason, cancel_type, cancelled_at, cancelled_by, chat_room_id, code_expires_at, code_refresh_count, completed_at, contact_name, contact_phone, created_at, feedback, inquiry_type, meeting_detail_address, meeting_latitude, meeting_location_name, meeting_longitude, meeting_notes, meeting_time, product_id, rating, reject_reason, request_by, requested_at, responded_at, seller_id, status, transaction_code, transaction_price, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        chat_messages
        (chat_room_id, content, delivered_at, duration, file_size, file_url, image_height, image_width, inquiry_type, is_recalled, message_type, product_snapshot, read_at, recalled_at, related_product_id, sender_id, sent_at, status, system_data, system_type, thumbnail_url, transaction_id, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-01 00:21:49 [http-nio-8080-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:21:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:21:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:22:01 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /transactions/tx_1973060727640035328/respond
2025-10-01 00:22:01 [http-nio-8080-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-10-01 00:22:01 [http-nio-8080-exec-5] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1962950810434408448
2025-10-01 00:22:01 [http-nio-8080-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /transactions/tx_1973060727640035328/respond] with attributes [authenticated]
2025-10-01 00:22:01 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /transactions/tx_1973060727640035328/respond
2025-10-01 00:22:01 [http-nio-8080-exec-5] INFO  com.fliliy.secondhand.service.TransactionService - User 1962950810434408448 responding to transaction 1973060727640035328 with action AGREE
Hibernate: 
    select
        transactio0_.id as id1_9_0_,
        transactio0_.buyer_id as buyer_id2_9_0_,
        transactio0_.cancel_reason as cancel_r3_9_0_,
        transactio0_.cancel_type as cancel_t4_9_0_,
        transactio0_.cancelled_at as cancelle5_9_0_,
        transactio0_.cancelled_by as cancelle6_9_0_,
        transactio0_.chat_room_id as chat_roo7_9_0_,
        transactio0_.code_expires_at as code_exp8_9_0_,
        transactio0_.code_refresh_count as code_ref9_9_0_,
        transactio0_.completed_at as complet10_9_0_,
        transactio0_.contact_name as contact11_9_0_,
        transactio0_.contact_phone as contact12_9_0_,
        transactio0_.created_at as created13_9_0_,
        transactio0_.feedback as feedbac14_9_0_,
        transactio0_.inquiry_type as inquiry15_9_0_,
        transactio0_.meeting_detail_address as meeting16_9_0_,
        transactio0_.meeting_latitude as meeting17_9_0_,
        transactio0_.meeting_location_name as meeting18_9_0_,
        transactio0_.meeting_longitude as meeting19_9_0_,
        transactio0_.meeting_notes as meeting20_9_0_,
        transactio0_.meeting_time as meeting21_9_0_,
        transactio0_.product_id as product22_9_0_,
        transactio0_.rating as rating23_9_0_,
        transactio0_.reject_reason as reject_24_9_0_,
        transactio0_.request_by as request25_9_0_,
        transactio0_.requested_at as request26_9_0_,
        transactio0_.responded_at as respond27_9_0_,
        transactio0_.seller_id as seller_28_9_0_,
        transactio0_.status as status29_9_0_,
        transactio0_.transaction_code as transac30_9_0_,
        transactio0_.transaction_price as transac31_9_0_,
        transactio0_.updated_at as updated32_9_0_ 
    from
        transactions transactio0_ 
    where
        transactio0_.id=?
2025-10-01 00:22:01 [http-nio-8080-exec-5] ERROR c.f.secondhand.controller.TransactionController - Respond to transaction request failed
java.lang.RuntimeException: 不能响应自己发起的交易申请
	at com.fliliy.secondhand.service.TransactionService.respondToTransactionRequest(TransactionService.java:662)
	at com.fliliy.secondhand.service.TransactionService$$FastClassBySpringCGLIB$$a8001053.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.fliliy.secondhand.service.TransactionService$$EnhancerBySpringCGLIB$$e09f1bf.respondToTransactionRequest(<generated>)
	at com.fliliy.secondhand.controller.TransactionController.respondToTransactionRequest(TransactionController.java:212)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.fliliy.secondhand.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:59)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2025-10-01 00:22:01 [http-nio-8080-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-10-01 00:22:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:22:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:22:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:22:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:23:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:23:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:23:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:23:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:24:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:24:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:24:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:24:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:25:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:25:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:25:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:25:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:26:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:26:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:26:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:26:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:27:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:27:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:27:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:27:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:28:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:28:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:28:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:28:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:29:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:29:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:29:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:29:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:30:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:30:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:30:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:30:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:31:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:31:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:31:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:31:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:32:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:32:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:32:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:32:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:33:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:33:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:33:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:33:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:34:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:34:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:34:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:34:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:35:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:35:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:35:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:35:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:36:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:36:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:36:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:36:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:37:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:37:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:37:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:37:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:38:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:38:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:38:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:38:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:39:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:39:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:39:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:39:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:40:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:40:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:40:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:40:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:41:19 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1b565bf3: (connection has passed maxLifetime)
2025-10-01 00:41:19 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5b86635f
2025-10-01 00:41:19 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:41:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:41:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:41:24 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6ddeb58: (connection has passed maxLifetime)
2025-10-01 00:41:24 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@73d65fbb
2025-10-01 00:41:25 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@54bf13bb: (connection has passed maxLifetime)
2025-10-01 00:41:25 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@32eb5580
2025-10-01 00:41:25 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5a6b51c8: (connection has passed maxLifetime)
2025-10-01 00:41:25 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3136321
2025-10-01 00:41:26 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7f37bb64: (connection has passed maxLifetime)
2025-10-01 00:41:26 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@52c4aacf
2025-10-01 00:41:37 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@2a87e1fc: (connection has passed maxLifetime)
2025-10-01 00:41:37 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@d77b08
2025-10-01 00:41:38 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7b79a4bc: (connection has passed maxLifetime)
2025-10-01 00:41:38 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@41ea7133
2025-10-01 00:41:47 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@605f9217: (connection has passed maxLifetime)
2025-10-01 00:41:47 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3c2fef89
2025-10-01 00:41:48 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@3b6b57ca: (connection has passed maxLifetime)
2025-10-01 00:41:48 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7d12e5b2
2025-10-01 00:41:50 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@14a54ef6: (connection has passed maxLifetime)
2025-10-01 00:41:50 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4ca57d4b
2025-10-01 00:41:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:41:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:42:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:42:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:42:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:42:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:42:57 [MessageBroker-2] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 1, completed tasks = 1]
2025-10-01 00:43:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:43:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:43:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:43:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:44:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:44:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:44:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:44:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:45:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:45:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:45:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:45:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:46:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:46:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:46:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:46:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:47:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:47:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:47:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:47:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:48:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:48:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:48:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:48:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:49:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:49:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:49:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:49:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:50:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:50:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:50:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:50:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:51:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:51:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:51:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:51:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:52:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:52:24 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:52:54 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:52:54 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:53:24 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:53:24 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:53:54 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:53:54 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:54:24 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:54:24 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:54:54 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:54:54 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:55:24 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:55:24 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:55:54 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:55:54 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:56:24 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:56:24 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:56:54 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:56:54 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:57:24 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:57:24 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-10-01 00:57:54 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-10-01 00:57:54 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
