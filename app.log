[INFO] Scanning for projects...
[INFO] 
[INFO] -----------------------< com.fliliy:second-hand >-----------------------
[INFO] Building second-hand 0.0.1-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot-maven-plugin:2.7.18:run (default-cli) > test-compile @ second-hand >>>
[WARNING] The artifact mysql:mysql-connector-java:jar:8.0.33 has been relocated to com.mysql:mysql-connector-j:jar:8.0.33
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ second-hand ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 5 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ second-hand ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ second-hand ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /Users/yit/Desktop/second-hand-platform2/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ second-hand ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to /Users/yit/Desktop/second-hand-platform2/target/test-classes
[INFO] 
[INFO] <<< spring-boot-maven-plugin:2.7.18:run (default-cli) < test-compile @ second-hand <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot-maven-plugin:2.7.18:run (default-cli) @ second-hand ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::               (v2.7.18)

2025-09-19 15:54:27 [main] INFO  com.fliliy.secondhand.SecondHandApplication - Starting SecondHandApplication using Java 20 on bogon with PID 75192 (/Users/yit/Desktop/second-hand-platform2/target/classes started by yit in /Users/yit/Desktop/second-hand-platform2)
2025-09-19 15:54:27 [main] DEBUG com.fliliy.secondhand.SecondHandApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-09-19 15:54:27 [main] INFO  com.fliliy.secondhand.SecondHandApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-19 15:54:28 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-09-19 15:54:28 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-19 15:54:28 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 147 ms. Found 12 JPA repository interfaces.
2025-09-19 15:54:28 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-09-19 15:54:28 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-09-19 15:54:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-19 15:54:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ChatMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-19 15:54:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ChatRoomRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-19 15:54:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ProductFavoriteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-19 15:54:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ProductImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-19 15:54:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-19 15:54:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ProductTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-19 15:54:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.SmsRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-19 15:54:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.TransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-19 15:54:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-19 15:54:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.UserTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-19 15:54:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-19 15:54:28 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 11 ms. Found 0 Redis repository interfaces.
2025-09-19 15:54:29 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-09-19 15:54:29 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-09-19 15:54:29 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-09-19 15:54:29 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-19 15:54:29 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1450 ms
2025-09-19 15:54:29 [main] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@7e32c033
2025-09-19 15:54:29 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-19 15:54:29 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-09-19 15:54:29 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.mysql.cj.jdbc.Driver"
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:mysql://localhost:3306/fliliy_db?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - username................................"root"
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2025-09-19 15:54:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-19 15:54:29 [main] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@591be8aa
2025-09-19 15:54:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-19 15:54:29 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-09-19 15:54:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2025-09-19 15:54:29 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@13fa8877
2025-09-19 15:54:29 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@52c7824c
2025-09-19 15:54:29 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@63df7002
2025-09-19 15:54:29 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@32e87d03
2025-09-19 15:54:29 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1cb7da9
2025-09-19 15:54:29 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@36a6a352
2025-09-19 15:54:29 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@17a22dca
2025-09-19 15:54:29 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6dc52260
2025-09-19 15:54:29 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@57523a6e
2025-09-19 15:54:29 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 15:54:30 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-09-19 15:54:30 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-19 15:54:31 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: d0a00437-ff92-438b-94f5-119da7c1fc32

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-09-19 15:54:31 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/auth/**']
2025-09-19 15:54:32 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-09-19 15:54:32 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/h2-console/**']
2025-09-19 15:54:32 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/categories/**']
2025-09-19 15:54:32 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/products']
2025-09-19 15:54:32 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/products/*']
2025-09-19 15:54:32 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/files/**']
2025-09-19 15:54:32 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-09-19 15:54:32 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@64c79b69, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a94c8e3, org.springframework.security.web.context.SecurityContextPersistenceFilter@12f32f99, org.springframework.security.web.header.HeaderWriterFilter@49231d79, org.springframework.web.filter.CorsFilter@54ee423f, org.springframework.security.web.authentication.logout.LogoutFilter@52ec5ba6, com.fliliy.secondhand.config.JwtAuthenticationFilter@6af90849, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@234dfc8e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18918ab9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@281a54b, org.springframework.security.web.session.SessionManagementFilter@2438a038, org.springframework.security.web.access.ExceptionTranslationFilter@5a86112a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@46c7e6c0]
2025-09-19 15:54:32 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-09-19 15:54:32 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/api/v1'
2025-09-19 15:54:32 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Starting...
2025-09-19 15:54:32 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2202e978]]
2025-09-19 15:54:32 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Started.
2025-09-19 15:54:32 [main] INFO  com.fliliy.secondhand.SecondHandApplication - Started SecondHandApplication in 4.903 seconds (JVM running for 5.198)
2025-09-19 15:54:55 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-19 15:54:55 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-19 15:54:55 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-09-19 15:54:55 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /health
2025-09-19 15:54:55 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 15:54:55 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 15:54:55 [http-nio-8080-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /health] with attributes [permitAll]
2025-09-19 15:54:55 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /health
2025-09-19 15:54:55 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 15:54:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 15:54:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 15:55:11 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/sms/send
2025-09-19 15:55:11 [http-nio-8080-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 15:55:11 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 15:55:11 [http-nio-8080-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/sms/send] with attributes [permitAll]
2025-09-19 15:55:11 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/sms/send
Hibernate: 
    select
        count(verificati0_.id) as col_0_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.mobile=? 
        and verificati0_.type=? 
        and verificati0_.created_at>?
Hibernate: 
    update
        verification_codes 
    set
        used=1 
    where
        mobile=? 
        and type=? 
        and used=0
2025-09-19 15:55:11 [http-nio-8080-exec-2] INFO  com.fliliy.secondhand.service.SmsService - Saving verification code - Mobile: 13900139003, Type: REGISTER, Enum name: REGISTER
Hibernate: 
    select
        verificati0_.id as id1_11_0_,
        verificati0_.attempts as attempts2_11_0_,
        verificati0_.code as code3_11_0_,
        verificati0_.created_at as created_4_11_0_,
        verificati0_.email as email5_11_0_,
        verificati0_.expires_at as expires_6_11_0_,
        verificati0_.max_attempts as max_atte7_11_0_,
        verificati0_.mobile as mobile8_11_0_,
        verificati0_.type as type9_11_0_,
        verificati0_.used as used10_11_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.id=?
Hibernate: 
    insert 
    into
        verification_codes
        (attempts, code, created_at, email, expires_at, max_attempts, mobile, type, used, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        sms_records
        (code, cost_amount, created_at, error_code, error_message, ip_address, mobile, provider, provider_msg_id, send_status, sent_at, template_code, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-19 15:55:11 [http-nio-8080-exec-2] INFO  com.fliliy.secondhand.service.SmsService - SMS record saved - Mobile: 13900139003, Type: REGISTER, SmsType name: REGISTER
2025-09-19 15:55:11 [http-nio-8080-exec-2] INFO  com.fliliy.secondhand.service.SmsService - Sending SMS to 13900139003: Your verification code is 2177
2025-09-19 15:55:12 [http-nio-8080-exec-2] INFO  com.fliliy.secondhand.service.SmsService - SMS code sent to mobile: 13900139003, type: REGISTER, code: 2177
2025-09-19 15:55:12 [http-nio-8080-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 15:55:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 15:55:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 15:55:32 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-09-19 15:55:35 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/register
2025-09-19 15:55:35 [http-nio-8080-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 15:55:35 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 15:55:35 [http-nio-8080-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/register] with attributes [permitAll]
2025-09-19 15:55:35 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/register
Hibernate: 
    select
        verificati0_.id as id1_11_0_,
        verificati0_.attempts as attempts2_11_0_,
        verificati0_.code as code3_11_0_,
        verificati0_.created_at as created_4_11_0_,
        verificati0_.email as email5_11_0_,
        verificati0_.expires_at as expires_6_11_0_,
        verificati0_.max_attempts as max_atte7_11_0_,
        verificati0_.mobile as mobile8_11_0_,
        verificati0_.type as type9_11_0_,
        verificati0_.used as used10_11_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.id=?
Hibernate: 
    select
        user0_.id as col_0_0_ 
    from
        users user0_ 
    where
        (
            user0_.deleted_at IS NULL
        ) 
        and user0_.mobile=? limit ?
Hibernate: 
    select
        user0_.id as id1_10_0_,
        user0_.avatar as avatar2_10_0_,
        user0_.bio as bio3_10_0_,
        user0_.birthday as birthday4_10_0_,
        user0_.created_at as created_5_10_0_,
        user0_.deleted_at as deleted_6_10_0_,
        user0_.email as email7_10_0_,
        user0_.gender as gender8_10_0_,
        user0_.last_login_at as last_log9_10_0_,
        user0_.last_login_ip as last_lo10_10_0_,
        user0_.location as locatio11_10_0_,
        user0_.login_attempts as login_a12_10_0_,
        user0_.mobile as mobile13_10_0_,
        user0_.password_hash as passwor14_10_0_,
        user0_.salt as salt15_10_0_,
        user0_.status as status16_10_0_,
        user0_.updated_at as updated17_10_0_,
        user0_.username as usernam18_10_0_,
        user0_.verified as verifie19_10_0_ 
    from
        users user0_ 
    where
        user0_.id=? 
        and (
            user0_.deleted_at IS NULL
        ) 
Hibernate: 
    insert 
    into
        users
        (avatar, bio, birthday, created_at, deleted_at, email, gender, last_login_at, last_login_ip, location, login_attempts, mobile, password_hash, salt, status, updated_at, username, verified, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        user_tokens
        (created_at, device_id, device_info, device_type, expires_at, ip_address, last_used_at, refresh_token, revoked, user_agent, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        verification_codes 
    set
        attempts=?,
        code=?,
        email=?,
        expires_at=?,
        max_attempts=?,
        mobile=?,
        type=?,
        used=? 
    where
        id=?
2025-09-19 15:55:35 [http-nio-8080-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 15:55:59 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/login/password
2025-09-19 15:55:59 [http-nio-8080-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 15:55:59 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 15:55:59 [http-nio-8080-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/login/password] with attributes [permitAll]
2025-09-19 15:55:59 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/login/password
Hibernate: 
    select
        user0_.id as id1_10_,
        user0_.avatar as avatar2_10_,
        user0_.bio as bio3_10_,
        user0_.birthday as birthday4_10_,
        user0_.created_at as created_5_10_,
        user0_.deleted_at as deleted_6_10_,
        user0_.email as email7_10_,
        user0_.gender as gender8_10_,
        user0_.last_login_at as last_log9_10_,
        user0_.last_login_ip as last_lo10_10_,
        user0_.location as locatio11_10_,
        user0_.login_attempts as login_a12_10_,
        user0_.mobile as mobile13_10_,
        user0_.password_hash as passwor14_10_,
        user0_.salt as salt15_10_,
        user0_.status as status16_10_,
        user0_.updated_at as updated17_10_,
        user0_.username as usernam18_10_,
        user0_.verified as verifie19_10_ 
    from
        users user0_ 
    where
        (
            user0_.deleted_at IS NULL
        ) 
        and user0_.mobile=?
Hibernate: 
    update
        users 
    set
        last_login_at=?,
        last_login_ip=?,
        login_attempts=0 
    where
        id=?
Hibernate: 
    insert 
    into
        user_tokens
        (created_at, device_id, device_info, device_type, expires_at, ip_address, last_used_at, refresh_token, revoked, user_agent, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-19 15:55:59 [http-nio-8080-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 15:55:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 15:55:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 15:56:25 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /products
2025-09-19 15:56:25 [http-nio-8080-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 15:56:25 [http-nio-8080-exec-5] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1968926156120002560
2025-09-19 15:56:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /products] with attributes [permitAll]
2025-09-19 15:56:25 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /products
Hibernate: 
    select
        category0_.id as col_0_0_ 
    from
        categories category0_ 
    where
        category0_.id=? 
        and category0_.is_active=? limit ?
Hibernate: 
    select
        product0_.id as id1_6_0_,
        product0_.category_id as category2_6_0_,
        product0_.chat_count as chat_cou3_6_0_,
        product0_.city as city4_6_0_,
        product0_.created_at as created_5_6_0_,
        product0_.deleted_at as deleted_6_6_0_,
        product0_.description as descript7_6_0_,
        product0_.detail_address as detail_a8_6_0_,
        product0_.district as district9_6_0_,
        product0_.favorite_count as favorit10_6_0_,
        product0_.has_warranty as has_war11_6_0_,
        product0_.inquiry_count as inquiry12_6_0_,
        product0_.is_promoted as is_prom13_6_0_,
        product0_.latitude as latitud14_6_0_,
        product0_.longitude as longitu15_6_0_,
        product0_.original_price as origina16_6_0_,
        product0_.price as price17_6_0_,
        product0_.product_condition as product18_6_0_,
        product0_.promoted_at as promote19_6_0_,
        product0_.promoted_expires_at as promote20_6_0_,
        product0_.province as provinc21_6_0_,
        product0_.published_at as publish22_6_0_,
        product0_.seller_id as seller_23_6_0_,
        product0_.sold_at as sold_at24_6_0_,
        product0_.status as status25_6_0_,
        product0_.title as title26_6_0_,
        product0_.updated_at as updated27_6_0_,
        product0_.usage_type as usage_t28_6_0_,
        product0_.usage_unit as usage_u29_6_0_,
        product0_.usage_value as usage_v30_6_0_,
        product0_.view_count as view_co31_6_0_,
        product0_.warranty_description as warrant32_6_0_,
        product0_.warranty_months as warrant33_6_0_,
        product0_.warranty_type as warrant34_6_0_ 
    from
        products product0_ 
    where
        product0_.id=?
Hibernate: 
    insert 
    into
        products
        (category_id, chat_count, city, created_at, deleted_at, description, detail_address, district, favorite_count, has_warranty, inquiry_count, is_promoted, latitude, longitude, original_price, price, product_condition, promoted_at, promoted_expires_at, province, published_at, seller_id, sold_at, status, title, updated_at, usage_type, usage_unit, usage_value, view_count, warranty_description, warranty_months, warranty_type, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        product_images
        (image_height, image_size, image_url, image_width, product_id, sort_order, thumbnail_url, upload_time) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        product_tags
        (created_at, product_id, tag_name) 
    values
        (?, ?, ?)
Hibernate: 
    insert 
    into
        product_tags
        (created_at, product_id, tag_name) 
    values
        (?, ?, ?)
Hibernate: 
    update
        categories 
    set
        product_count=(select
            count(product1_.id) 
        from
            products product1_ 
        where
            product1_.category_id=categories.id 
            and product1_.status='ACTIVE' 
            and (
                product1_.deleted_at is null
            )) 
    where
        id=?
2025-09-19 15:56:25 [http-nio-8080-exec-5] INFO  com.fliliy.secondhand.service.CategoryService - Updated product count for category: 12
2025-09-19 15:56:25 [http-nio-8080-exec-5] INFO  com.fliliy.secondhand.service.ProductService - Product published successfully: id=1968947273484341248, title=完整测试商品 MacBook Pro, seller=1968926156120002560
2025-09-19 15:56:25 [http-nio-8080-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 15:56:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 15:56:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 15:56:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 15:56:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 15:57:10 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /transactions/inquiry
2025-09-19 15:57:10 [http-nio-8080-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 15:57:10 [http-nio-8080-exec-7] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1968947060988317696
2025-09-19 15:57:10 [http-nio-8080-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /transactions/inquiry] with attributes [authenticated]
2025-09-19 15:57:10 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /transactions/inquiry
2025-09-19 15:57:10 [http-nio-8080-exec-7] INFO  com.fliliy.secondhand.service.TransactionService - User 1968947060988317696 creating inquiry for product 1968947273484341248
Hibernate: 
    select
        product0_.id as id1_6_0_,
        product0_.category_id as category2_6_0_,
        product0_.chat_count as chat_cou3_6_0_,
        product0_.city as city4_6_0_,
        product0_.created_at as created_5_6_0_,
        product0_.deleted_at as deleted_6_6_0_,
        product0_.description as descript7_6_0_,
        product0_.detail_address as detail_a8_6_0_,
        product0_.district as district9_6_0_,
        product0_.favorite_count as favorit10_6_0_,
        product0_.has_warranty as has_war11_6_0_,
        product0_.inquiry_count as inquiry12_6_0_,
        product0_.is_promoted as is_prom13_6_0_,
        product0_.latitude as latitud14_6_0_,
        product0_.longitude as longitu15_6_0_,
        product0_.original_price as origina16_6_0_,
        product0_.price as price17_6_0_,
        product0_.product_condition as product18_6_0_,
        product0_.promoted_at as promote19_6_0_,
        product0_.promoted_expires_at as promote20_6_0_,
        product0_.province as provinc21_6_0_,
        product0_.published_at as publish22_6_0_,
        product0_.seller_id as seller_23_6_0_,
        product0_.sold_at as sold_at24_6_0_,
        product0_.status as status25_6_0_,
        product0_.title as title26_6_0_,
        product0_.updated_at as updated27_6_0_,
        product0_.usage_type as usage_t28_6_0_,
        product0_.usage_unit as usage_u29_6_0_,
        product0_.usage_value as usage_v30_6_0_,
        product0_.view_count as view_co31_6_0_,
        product0_.warranty_description as warrant32_6_0_,
        product0_.warranty_months as warrant33_6_0_,
        product0_.warranty_type as warrant34_6_0_ 
    from
        products product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        user0_.id as id1_10_0_,
        user0_.avatar as avatar2_10_0_,
        user0_.bio as bio3_10_0_,
        user0_.birthday as birthday4_10_0_,
        user0_.created_at as created_5_10_0_,
        user0_.deleted_at as deleted_6_10_0_,
        user0_.email as email7_10_0_,
        user0_.gender as gender8_10_0_,
        user0_.last_login_at as last_log9_10_0_,
        user0_.last_login_ip as last_lo10_10_0_,
        user0_.location as locatio11_10_0_,
        user0_.login_attempts as login_a12_10_0_,
        user0_.mobile as mobile13_10_0_,
        user0_.password_hash as passwor14_10_0_,
        user0_.salt as salt15_10_0_,
        user0_.status as status16_10_0_,
        user0_.updated_at as updated17_10_0_,
        user0_.username as usernam18_10_0_,
        user0_.verified as verifie19_10_0_ 
    from
        users user0_ 
    where
        user0_.id=? 
        and (
            user0_.deleted_at IS NULL
        )
Hibernate: 
    select
        transactio0_.id as id1_8_,
        transactio0_.buyer_id as buyer_id2_8_,
        transactio0_.cancel_reason as cancel_r3_8_,
        transactio0_.cancel_type as cancel_t4_8_,
        transactio0_.cancelled_at as cancelle5_8_,
        transactio0_.cancelled_by as cancelle6_8_,
        transactio0_.chat_room_id as chat_roo7_8_,
        transactio0_.code_expires_at as code_exp8_8_,
        transactio0_.completed_at as complete9_8_,
        transactio0_.contact_name as contact10_8_,
        transactio0_.contact_phone as contact11_8_,
        transactio0_.created_at as created12_8_,
        transactio0_.feedback as feedbac13_8_,
        transactio0_.inquiry_type as inquiry14_8_,
        transactio0_.meeting_detail_address as meeting15_8_,
        transactio0_.meeting_latitude as meeting16_8_,
        transactio0_.meeting_location_name as meeting17_8_,
        transactio0_.meeting_longitude as meeting18_8_,
        transactio0_.meeting_notes as meeting19_8_,
        transactio0_.meeting_time as meeting20_8_,
        transactio0_.product_id as product21_8_,
        transactio0_.rating as rating22_8_,
        transactio0_.seller_id as seller_23_8_,
        transactio0_.status as status24_8_,
        transactio0_.transaction_code as transac25_8_,
        transactio0_.transaction_price as transac26_8_,
        transactio0_.updated_at as updated27_8_ 
    from
        transactions transactio0_ 
    where
        transactio0_.buyer_id=? 
        and transactio0_.product_id=?
Hibernate: 
    select
        product0_.id as id1_6_0_,
        product0_.category_id as category2_6_0_,
        product0_.chat_count as chat_cou3_6_0_,
        product0_.city as city4_6_0_,
        product0_.created_at as created_5_6_0_,
        product0_.deleted_at as deleted_6_6_0_,
        product0_.description as descript7_6_0_,
        product0_.detail_address as detail_a8_6_0_,
        product0_.district as district9_6_0_,
        product0_.favorite_count as favorit10_6_0_,
        product0_.has_warranty as has_war11_6_0_,
        product0_.inquiry_count as inquiry12_6_0_,
        product0_.is_promoted as is_prom13_6_0_,
        product0_.latitude as latitud14_6_0_,
        product0_.longitude as longitu15_6_0_,
        product0_.original_price as origina16_6_0_,
        product0_.price as price17_6_0_,
        product0_.product_condition as product18_6_0_,
        product0_.promoted_at as promote19_6_0_,
        product0_.promoted_expires_at as promote20_6_0_,
        product0_.province as provinc21_6_0_,
        product0_.published_at as publish22_6_0_,
        product0_.seller_id as seller_23_6_0_,
        product0_.sold_at as sold_at24_6_0_,
        product0_.status as status25_6_0_,
        product0_.title as title26_6_0_,
        product0_.updated_at as updated27_6_0_,
        product0_.usage_type as usage_t28_6_0_,
        product0_.usage_unit as usage_u29_6_0_,
        product0_.usage_value as usage_v30_6_0_,
        product0_.view_count as view_co31_6_0_,
        product0_.warranty_description as warrant32_6_0_,
        product0_.warranty_months as warrant33_6_0_,
        product0_.warranty_type as warrant34_6_0_ 
    from
        products product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        chatroom0_.id as id1_2_,
        chatroom0_.buyer_id as buyer_id2_2_,
        chatroom0_.buyer_unread_count as buyer_un3_2_,
        chatroom0_.created_at as created_4_2_,
        chatroom0_.last_message_content as last_mes5_2_,
        chatroom0_.last_message_id as last_mes6_2_,
        chatroom0_.last_message_sender_id as last_mes7_2_,
        chatroom0_.last_message_time as last_mes8_2_,
        chatroom0_.last_message_type as last_mes9_2_,
        chatroom0_.product_id as product10_2_,
        chatroom0_.seller_id as seller_11_2_,
        chatroom0_.seller_unread_count as seller_12_2_,
        chatroom0_.status as status13_2_,
        chatroom0_.total_messages as total_m14_2_,
        chatroom0_.transaction_id as transac15_2_,
        chatroom0_.updated_at as updated16_2_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.product_id=? 
        and chatroom0_.buyer_id=?
2025-09-19 15:57:10 [http-nio-8080-exec-7] INFO  com.fliliy.secondhand.service.ChatService - 创建新聊天室 - 商品ID: 1968947273484341248, 买家ID: 1968947060988317696, 卖家ID: 1968926156120002560
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_unread_count as buyer_un3_2_0_,
        chatroom0_.created_at as created_4_2_0_,
        chatroom0_.last_message_content as last_mes5_2_0_,
        chatroom0_.last_message_id as last_mes6_2_0_,
        chatroom0_.last_message_sender_id as last_mes7_2_0_,
        chatroom0_.last_message_time as last_mes8_2_0_,
        chatroom0_.last_message_type as last_mes9_2_0_,
        chatroom0_.product_id as product10_2_0_,
        chatroom0_.seller_id as seller_11_2_0_,
        chatroom0_.seller_unread_count as seller_12_2_0_,
        chatroom0_.status as status13_2_0_,
        chatroom0_.total_messages as total_m14_2_0_,
        chatroom0_.transaction_id as transac15_2_0_,
        chatroom0_.updated_at as updated16_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
Hibernate: 
    insert 
    into
        chat_rooms
        (buyer_id, buyer_unread_count, created_at, last_message_content, last_message_id, last_message_sender_id, last_message_time, last_message_type, product_id, seller_id, seller_unread_count, status, total_messages, transaction_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        transactio0_.id as id1_8_0_,
        transactio0_.buyer_id as buyer_id2_8_0_,
        transactio0_.cancel_reason as cancel_r3_8_0_,
        transactio0_.cancel_type as cancel_t4_8_0_,
        transactio0_.cancelled_at as cancelle5_8_0_,
        transactio0_.cancelled_by as cancelle6_8_0_,
        transactio0_.chat_room_id as chat_roo7_8_0_,
        transactio0_.code_expires_at as code_exp8_8_0_,
        transactio0_.completed_at as complete9_8_0_,
        transactio0_.contact_name as contact10_8_0_,
        transactio0_.contact_phone as contact11_8_0_,
        transactio0_.created_at as created12_8_0_,
        transactio0_.feedback as feedbac13_8_0_,
        transactio0_.inquiry_type as inquiry14_8_0_,
        transactio0_.meeting_detail_address as meeting15_8_0_,
        transactio0_.meeting_latitude as meeting16_8_0_,
        transactio0_.meeting_location_name as meeting17_8_0_,
        transactio0_.meeting_longitude as meeting18_8_0_,
        transactio0_.meeting_notes as meeting19_8_0_,
        transactio0_.meeting_time as meeting20_8_0_,
        transactio0_.product_id as product21_8_0_,
        transactio0_.rating as rating22_8_0_,
        transactio0_.seller_id as seller_23_8_0_,
        transactio0_.status as status24_8_0_,
        transactio0_.transaction_code as transac25_8_0_,
        transactio0_.transaction_price as transac26_8_0_,
        transactio0_.updated_at as updated27_8_0_ 
    from
        transactions transactio0_ 
    where
        transactio0_.id=?
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_unread_count as buyer_un3_2_0_,
        chatroom0_.created_at as created_4_2_0_,
        chatroom0_.last_message_content as last_mes5_2_0_,
        chatroom0_.last_message_id as last_mes6_2_0_,
        chatroom0_.last_message_sender_id as last_mes7_2_0_,
        chatroom0_.last_message_time as last_mes8_2_0_,
        chatroom0_.last_message_type as last_mes9_2_0_,
        chatroom0_.product_id as product10_2_0_,
        chatroom0_.seller_id as seller_11_2_0_,
        chatroom0_.seller_unread_count as seller_12_2_0_,
        chatroom0_.status as status13_2_0_,
        chatroom0_.total_messages as total_m14_2_0_,
        chatroom0_.transaction_id as transac15_2_0_,
        chatroom0_.updated_at as updated16_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
Hibernate: 
    select
        chatmessag0_.id as id1_1_0_,
        chatmessag0_.chat_room_id as chat_roo2_1_0_,
        chatmessag0_.content as content3_1_0_,
        chatmessag0_.delivered_at as delivere4_1_0_,
        chatmessag0_.duration as duration5_1_0_,
        chatmessag0_.file_size as file_siz6_1_0_,
        chatmessag0_.file_url as file_url7_1_0_,
        chatmessag0_.image_height as image_he8_1_0_,
        chatmessag0_.image_width as image_wi9_1_0_,
        chatmessag0_.is_recalled as is_reca10_1_0_,
        chatmessag0_.message_type as message11_1_0_,
        chatmessag0_.read_at as read_at12_1_0_,
        chatmessag0_.recalled_at as recalle13_1_0_,
        chatmessag0_.sender_id as sender_14_1_0_,
        chatmessag0_.sent_at as sent_at15_1_0_,
        chatmessag0_.status as status16_1_0_,
        chatmessag0_.system_data as system_17_1_0_,
        chatmessag0_.system_type as system_18_1_0_,
        chatmessag0_.thumbnail_url as thumbna19_1_0_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.id=?
Hibernate: 
    update
        chat_rooms 
    set
        last_message_id=?,
        last_message_content=?,
        last_message_type=?,
        last_message_time=CURRENT_TIMESTAMP,
        last_message_sender_id=?,
        updated_at=CURRENT_TIMESTAMP 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        total_messages=total_messages+1 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        buyer_unread_count=buyer_unread_count+1 
    where
        id=? 
        and buyer_id<>?
Hibernate: 
    update
        chat_rooms 
    set
        seller_unread_count=seller_unread_count+1 
    where
        id=? 
        and seller_id<>?
2025-09-19 15:57:10 [http-nio-8080-exec-7] INFO  com.fliliy.secondhand.service.ChatService - 发送文本消息 - 聊天室ID: 1968947461397549056, 发送者ID: 1968947060988317696, 内容: 你好！我对这个MacBook Pro很感兴趣，配置怎么样？价格能商量吗？
Hibernate: 
    insert 
    into
        chat_messages
        (chat_room_id, content, delivered_at, duration, file_size, file_url, image_height, image_width, is_recalled, message_type, read_at, recalled_at, sender_id, sent_at, status, system_data, system_type, thumbnail_url, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (buyer_id, cancel_reason, cancel_type, cancelled_at, cancelled_by, chat_room_id, code_expires_at, completed_at, contact_name, contact_phone, created_at, feedback, inquiry_type, meeting_detail_address, meeting_latitude, meeting_location_name, meeting_longitude, meeting_notes, meeting_time, product_id, rating, seller_id, status, transaction_code, transaction_price, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-19 15:57:10 [http-nio-8080-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 15:57:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 15:57:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 15:57:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 15:57:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 15:58:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 15:58:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 15:58:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 15:58:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 15:59:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 15:59:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 15:59:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 15:59:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:00:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:00:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:00:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:00:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:01:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:01:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:01:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:01:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:02:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:02:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:02:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:02:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:03:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:03:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:03:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:03:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:04:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:04:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:04:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:04:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:05:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:05:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:05:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:05:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:06:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:06:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:06:35 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /health
2025-09-19 16:06:35 [http-nio-8080-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:06:35 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 16:06:35 [http-nio-8080-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /health] with attributes [permitAll]
2025-09-19 16:06:35 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /health
2025-09-19 16:06:35 [http-nio-8080-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:06:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:06:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:07:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:07:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:07:32 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/sms/send
2025-09-19 16:07:32 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:07:32 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 16:07:32 [http-nio-8080-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/sms/send] with attributes [permitAll]
2025-09-19 16:07:32 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/sms/send
Hibernate: 
    select
        count(verificati0_.id) as col_0_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.mobile=? 
        and verificati0_.type=? 
        and verificati0_.created_at>?
Hibernate: 
    update
        verification_codes 
    set
        used=1 
    where
        mobile=? 
        and type=? 
        and used=0
2025-09-19 16:07:32 [http-nio-8080-exec-1] INFO  com.fliliy.secondhand.service.SmsService - Saving verification code - Mobile: 13800138001, Type: REGISTER, Enum name: REGISTER
Hibernate: 
    select
        verificati0_.id as id1_11_0_,
        verificati0_.attempts as attempts2_11_0_,
        verificati0_.code as code3_11_0_,
        verificati0_.created_at as created_4_11_0_,
        verificati0_.email as email5_11_0_,
        verificati0_.expires_at as expires_6_11_0_,
        verificati0_.max_attempts as max_atte7_11_0_,
        verificati0_.mobile as mobile8_11_0_,
        verificati0_.type as type9_11_0_,
        verificati0_.used as used10_11_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.id=?
Hibernate: 
    insert 
    into
        verification_codes
        (attempts, code, created_at, email, expires_at, max_attempts, mobile, type, used, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        sms_records
        (code, cost_amount, created_at, error_code, error_message, ip_address, mobile, provider, provider_msg_id, send_status, sent_at, template_code, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-19 16:07:32 [http-nio-8080-exec-1] INFO  com.fliliy.secondhand.service.SmsService - SMS record saved - Mobile: 13800138001, Type: REGISTER, SmsType name: REGISTER
2025-09-19 16:07:32 [http-nio-8080-exec-1] INFO  com.fliliy.secondhand.service.SmsService - Sending SMS to 13800138001: Your verification code is 1264
2025-09-19 16:07:32 [http-nio-8080-exec-1] INFO  com.fliliy.secondhand.service.SmsService - SMS code sent to mobile: 13800138001, type: REGISTER, code: 1264
2025-09-19 16:07:32 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:07:48 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/register
2025-09-19 16:07:48 [http-nio-8080-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:07:48 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 16:07:48 [http-nio-8080-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/register] with attributes [permitAll]
2025-09-19 16:07:48 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/register
Hibernate: 
    select
        verificati0_.id as id1_11_0_,
        verificati0_.attempts as attempts2_11_0_,
        verificati0_.code as code3_11_0_,
        verificati0_.created_at as created_4_11_0_,
        verificati0_.email as email5_11_0_,
        verificati0_.expires_at as expires_6_11_0_,
        verificati0_.max_attempts as max_atte7_11_0_,
        verificati0_.mobile as mobile8_11_0_,
        verificati0_.type as type9_11_0_,
        verificati0_.used as used10_11_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.id=?
Hibernate: 
    update
        verification_codes 
    set
        attempts=attempts+1 
    where
        id=?
2025-09-19 16:07:48 [http-nio-8080-exec-3] ERROR com.fliliy.secondhand.controller.AuthController - Register failed
java.lang.RuntimeException: 验证码错误
	at com.fliliy.secondhand.service.AuthService.register(AuthService.java:51)
	at com.fliliy.secondhand.service.AuthService$$FastClassBySpringCGLIB$$de222911.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.fliliy.secondhand.service.AuthService$$EnhancerBySpringCGLIB$$e6d6f9d3.register(<generated>)
	at com.fliliy.secondhand.controller.AuthController.register(AuthController.java:57)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.fliliy.secondhand.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:59)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2025-09-19 16:07:48 [http-nio-8080-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:07:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:07:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:08:20 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/login/password
2025-09-19 16:08:20 [http-nio-8080-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:08:20 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 16:08:20 [http-nio-8080-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/login/password] with attributes [permitAll]
2025-09-19 16:08:20 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/login/password
Hibernate: 
    select
        user0_.id as id1_10_,
        user0_.avatar as avatar2_10_,
        user0_.bio as bio3_10_,
        user0_.birthday as birthday4_10_,
        user0_.created_at as created_5_10_,
        user0_.deleted_at as deleted_6_10_,
        user0_.email as email7_10_,
        user0_.gender as gender8_10_,
        user0_.last_login_at as last_log9_10_,
        user0_.last_login_ip as last_lo10_10_,
        user0_.location as locatio11_10_,
        user0_.login_attempts as login_a12_10_,
        user0_.mobile as mobile13_10_,
        user0_.password_hash as passwor14_10_,
        user0_.salt as salt15_10_,
        user0_.status as status16_10_,
        user0_.updated_at as updated17_10_,
        user0_.username as usernam18_10_,
        user0_.verified as verifie19_10_ 
    from
        users user0_ 
    where
        (
            user0_.deleted_at IS NULL
        ) 
        and user0_.mobile=?
Hibernate: 
    update
        users 
    set
        login_attempts=? 
    where
        id=?
2025-09-19 16:08:20 [http-nio-8080-exec-5] ERROR com.fliliy.secondhand.controller.AuthController - Password login failed
java.lang.RuntimeException: 密码错误
	at com.fliliy.secondhand.service.AuthService.loginWithPassword(AuthService.java:96)
	at com.fliliy.secondhand.service.AuthService$$FastClassBySpringCGLIB$$de222911.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.fliliy.secondhand.service.AuthService$$EnhancerBySpringCGLIB$$e6d6f9d3.loginWithPassword(<generated>)
	at com.fliliy.secondhand.controller.AuthController.loginWithPassword(AuthController.java:76)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.fliliy.secondhand.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:59)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2025-09-19 16:08:20 [http-nio-8080-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:08:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:08:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:08:39 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/sms/send
2025-09-19 16:08:39 [http-nio-8080-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:08:39 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 16:08:39 [http-nio-8080-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/sms/send] with attributes [permitAll]
2025-09-19 16:08:39 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/sms/send
Hibernate: 
    select
        count(verificati0_.id) as col_0_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.mobile=? 
        and verificati0_.type=? 
        and verificati0_.created_at>?
Hibernate: 
    update
        verification_codes 
    set
        used=1 
    where
        mobile=? 
        and type=? 
        and used=0
2025-09-19 16:08:39 [http-nio-8080-exec-7] INFO  com.fliliy.secondhand.service.SmsService - Saving verification code - Mobile: 13900139001, Type: REGISTER, Enum name: REGISTER
Hibernate: 
    select
        verificati0_.id as id1_11_0_,
        verificati0_.attempts as attempts2_11_0_,
        verificati0_.code as code3_11_0_,
        verificati0_.created_at as created_4_11_0_,
        verificati0_.email as email5_11_0_,
        verificati0_.expires_at as expires_6_11_0_,
        verificati0_.max_attempts as max_atte7_11_0_,
        verificati0_.mobile as mobile8_11_0_,
        verificati0_.type as type9_11_0_,
        verificati0_.used as used10_11_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.id=?
Hibernate: 
    insert 
    into
        verification_codes
        (attempts, code, created_at, email, expires_at, max_attempts, mobile, type, used, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        sms_records
        (code, cost_amount, created_at, error_code, error_message, ip_address, mobile, provider, provider_msg_id, send_status, sent_at, template_code, type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-19 16:08:39 [http-nio-8080-exec-7] INFO  com.fliliy.secondhand.service.SmsService - SMS record saved - Mobile: 13900139001, Type: REGISTER, SmsType name: REGISTER
2025-09-19 16:08:39 [http-nio-8080-exec-7] INFO  com.fliliy.secondhand.service.SmsService - Sending SMS to 13900139001: Your verification code is 1691
2025-09-19 16:08:39 [http-nio-8080-exec-7] INFO  com.fliliy.secondhand.service.SmsService - SMS code sent to mobile: 13900139001, type: REGISTER, code: 1691
2025-09-19 16:08:39 [http-nio-8080-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:08:58 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/register
2025-09-19 16:08:58 [http-nio-8080-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:08:58 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 16:08:58 [http-nio-8080-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/register] with attributes [permitAll]
2025-09-19 16:08:58 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/register
Hibernate: 
    select
        verificati0_.id as id1_11_0_,
        verificati0_.attempts as attempts2_11_0_,
        verificati0_.code as code3_11_0_,
        verificati0_.created_at as created_4_11_0_,
        verificati0_.email as email5_11_0_,
        verificati0_.expires_at as expires_6_11_0_,
        verificati0_.max_attempts as max_atte7_11_0_,
        verificati0_.mobile as mobile8_11_0_,
        verificati0_.type as type9_11_0_,
        verificati0_.used as used10_11_0_ 
    from
        verification_codes verificati0_ 
    where
        verificati0_.id=?
Hibernate: 
    update
        verification_codes 
    set
        attempts=attempts+1 
    where
        id=?
2025-09-19 16:08:58 [http-nio-8080-exec-9] ERROR com.fliliy.secondhand.controller.AuthController - Register failed
java.lang.RuntimeException: 验证码错误
	at com.fliliy.secondhand.service.AuthService.register(AuthService.java:51)
	at com.fliliy.secondhand.service.AuthService$$FastClassBySpringCGLIB$$de222911.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.fliliy.secondhand.service.AuthService$$EnhancerBySpringCGLIB$$e6d6f9d3.register(<generated>)
	at com.fliliy.secondhand.controller.AuthController.register(AuthController.java:57)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.fliliy.secondhand.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:59)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2025-09-19 16:08:58 [http-nio-8080-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:08:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:08:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:09:15 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /products
2025-09-19 16:09:15 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:09:15 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 16:09:15 [http-nio-8080-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /products] with attributes [permitAll]
2025-09-19 16:09:15 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /products
2025-09-19 16:09:15 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1712120573 wrapping com.mysql.cj.jdbc.ConnectionImpl@591be8aa] read-only
Hibernate: 
    select
        product0_.id as id1_6_,
        product0_.category_id as category2_6_,
        product0_.chat_count as chat_cou3_6_,
        product0_.city as city4_6_,
        product0_.created_at as created_5_6_,
        product0_.deleted_at as deleted_6_6_,
        product0_.description as descript7_6_,
        product0_.detail_address as detail_a8_6_,
        product0_.district as district9_6_,
        product0_.favorite_count as favorit10_6_,
        product0_.has_warranty as has_war11_6_,
        product0_.inquiry_count as inquiry12_6_,
        product0_.is_promoted as is_prom13_6_,
        product0_.latitude as latitud14_6_,
        product0_.longitude as longitu15_6_,
        product0_.original_price as origina16_6_,
        product0_.price as price17_6_,
        product0_.product_condition as product18_6_,
        product0_.promoted_at as promote19_6_,
        product0_.promoted_expires_at as promote20_6_,
        product0_.province as provinc21_6_,
        product0_.published_at as publish22_6_,
        product0_.seller_id as seller_23_6_,
        product0_.sold_at as sold_at24_6_,
        product0_.status as status25_6_,
        product0_.title as title26_6_,
        product0_.updated_at as updated27_6_,
        product0_.usage_type as usage_t28_6_,
        product0_.usage_unit as usage_u29_6_,
        product0_.usage_value as usage_v30_6_,
        product0_.view_count as view_co31_6_,
        product0_.warranty_description as warrant32_6_,
        product0_.warranty_months as warrant33_6_,
        product0_.warranty_type as warrant34_6_ 
    from
        products product0_ 
    where
        (
            product0_.deleted_at is null
        ) 
        and product0_.status=? 
    order by
        product0_.published_at desc limit ?
2025-09-19 16:09:15 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1712120573 wrapping com.mysql.cj.jdbc.ConnectionImpl@591be8aa]
Hibernate: 
    select
        productima0_.image_url as col_0_0_ 
    from
        product_images productima0_ 
    where
        productima0_.product_id=? 
        and productima0_.sort_order=0
Hibernate: 
    select
        productima0_.image_url as col_0_0_ 
    from
        product_images productima0_ 
    where
        productima0_.product_id=? 
        and productima0_.sort_order=0
2025-09-19 16:09:15 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1860756718 wrapping com.mysql.cj.jdbc.ConnectionImpl@591be8aa] read-only
Hibernate: 
    select
        user0_.id as id1_10_,
        user0_.avatar as avatar2_10_,
        user0_.bio as bio3_10_,
        user0_.birthday as birthday4_10_,
        user0_.created_at as created_5_10_,
        user0_.deleted_at as deleted_6_10_,
        user0_.email as email7_10_,
        user0_.gender as gender8_10_,
        user0_.last_login_at as last_log9_10_,
        user0_.last_login_ip as last_lo10_10_,
        user0_.location as locatio11_10_,
        user0_.login_attempts as login_a12_10_,
        user0_.mobile as mobile13_10_,
        user0_.password_hash as passwor14_10_,
        user0_.salt as salt15_10_,
        user0_.status as status16_10_,
        user0_.updated_at as updated17_10_,
        user0_.username as usernam18_10_,
        user0_.verified as verifie19_10_ 
    from
        users user0_ 
    where
        (
            user0_.deleted_at IS NULL
        ) 
        and (
            user0_.id in (
                ? , ?
            )
        )
2025-09-19 16:09:15 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1860756718 wrapping com.mysql.cj.jdbc.ConnectionImpl@591be8aa]
Hibernate: 
    select
        producttag0_.tag_name as col_0_0_ 
    from
        product_tags producttag0_ 
    where
        producttag0_.product_id=?
Hibernate: 
    select
        producttag0_.tag_name as col_0_0_ 
    from
        product_tags producttag0_ 
    where
        producttag0_.product_id=?
2025-09-19 16:09:15 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:09:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:09:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:09:41 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/login/password
2025-09-19 16:09:41 [http-nio-8080-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:09:41 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 16:09:41 [http-nio-8080-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/login/password] with attributes [permitAll]
2025-09-19 16:09:41 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/login/password
Hibernate: 
    select
        user0_.id as id1_10_,
        user0_.avatar as avatar2_10_,
        user0_.bio as bio3_10_,
        user0_.birthday as birthday4_10_,
        user0_.created_at as created_5_10_,
        user0_.deleted_at as deleted_6_10_,
        user0_.email as email7_10_,
        user0_.gender as gender8_10_,
        user0_.last_login_at as last_log9_10_,
        user0_.last_login_ip as last_lo10_10_,
        user0_.location as locatio11_10_,
        user0_.login_attempts as login_a12_10_,
        user0_.mobile as mobile13_10_,
        user0_.password_hash as passwor14_10_,
        user0_.salt as salt15_10_,
        user0_.status as status16_10_,
        user0_.updated_at as updated17_10_,
        user0_.username as usernam18_10_,
        user0_.verified as verifie19_10_ 
    from
        users user0_ 
    where
        (
            user0_.deleted_at IS NULL
        ) 
        and user0_.mobile=?
Hibernate: 
    update
        users 
    set
        last_login_at=?,
        last_login_ip=?,
        login_attempts=0 
    where
        id=?
Hibernate: 
    insert 
    into
        user_tokens
        (created_at, device_id, device_info, device_type, expires_at, ip_address, last_used_at, refresh_token, revoked, user_agent, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-19 16:09:41 [http-nio-8080-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:09:59 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/login/password
2025-09-19 16:09:59 [http-nio-8080-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:09:59 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 16:09:59 [http-nio-8080-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/login/password] with attributes [permitAll]
2025-09-19 16:09:59 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/login/password
Hibernate: 
    select
        user0_.id as id1_10_,
        user0_.avatar as avatar2_10_,
        user0_.bio as bio3_10_,
        user0_.birthday as birthday4_10_,
        user0_.created_at as created_5_10_,
        user0_.deleted_at as deleted_6_10_,
        user0_.email as email7_10_,
        user0_.gender as gender8_10_,
        user0_.last_login_at as last_log9_10_,
        user0_.last_login_ip as last_lo10_10_,
        user0_.location as locatio11_10_,
        user0_.login_attempts as login_a12_10_,
        user0_.mobile as mobile13_10_,
        user0_.password_hash as passwor14_10_,
        user0_.salt as salt15_10_,
        user0_.status as status16_10_,
        user0_.updated_at as updated17_10_,
        user0_.username as usernam18_10_,
        user0_.verified as verifie19_10_ 
    from
        users user0_ 
    where
        (
            user0_.deleted_at IS NULL
        ) 
        and user0_.mobile=?
2025-09-19 16:09:59 [http-nio-8080-exec-5] ERROR com.fliliy.secondhand.controller.AuthController - Password login failed
java.lang.RuntimeException: 用户不存在
	at com.fliliy.secondhand.service.AuthService.loginWithPassword(AuthService.java:85)
	at com.fliliy.secondhand.service.AuthService$$FastClassBySpringCGLIB$$de222911.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.fliliy.secondhand.service.AuthService$$EnhancerBySpringCGLIB$$e6d6f9d3.loginWithPassword(<generated>)
	at com.fliliy.secondhand.controller.AuthController.loginWithPassword(AuthController.java:76)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.fliliy.secondhand.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:59)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2025-09-19 16:09:59 [http-nio-8080-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:09:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:09:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:10:14 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/login/password
2025-09-19 16:10:14 [http-nio-8080-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:10:14 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 16:10:14 [http-nio-8080-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/login/password] with attributes [permitAll]
2025-09-19 16:10:14 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/login/password
Hibernate: 
    select
        user0_.id as id1_10_,
        user0_.avatar as avatar2_10_,
        user0_.bio as bio3_10_,
        user0_.birthday as birthday4_10_,
        user0_.created_at as created_5_10_,
        user0_.deleted_at as deleted_6_10_,
        user0_.email as email7_10_,
        user0_.gender as gender8_10_,
        user0_.last_login_at as last_log9_10_,
        user0_.last_login_ip as last_lo10_10_,
        user0_.location as locatio11_10_,
        user0_.login_attempts as login_a12_10_,
        user0_.mobile as mobile13_10_,
        user0_.password_hash as passwor14_10_,
        user0_.salt as salt15_10_,
        user0_.status as status16_10_,
        user0_.updated_at as updated17_10_,
        user0_.username as usernam18_10_,
        user0_.verified as verifie19_10_ 
    from
        users user0_ 
    where
        (
            user0_.deleted_at IS NULL
        ) 
        and user0_.mobile=?
2025-09-19 16:10:14 [http-nio-8080-exec-7] ERROR com.fliliy.secondhand.controller.AuthController - Password login failed
java.lang.RuntimeException: 用户不存在
	at com.fliliy.secondhand.service.AuthService.loginWithPassword(AuthService.java:85)
	at com.fliliy.secondhand.service.AuthService$$FastClassBySpringCGLIB$$de222911.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.fliliy.secondhand.service.AuthService$$EnhancerBySpringCGLIB$$e6d6f9d3.loginWithPassword(<generated>)
	at com.fliliy.secondhand.controller.AuthController.loginWithPassword(AuthController.java:76)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.fliliy.secondhand.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:59)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2025-09-19 16:10:14 [http-nio-8080-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:10:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:10:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:10:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:10:59 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:11:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:11:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:12:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:12:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:12:28 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/login/password
2025-09-19 16:12:28 [http-nio-8080-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:12:28 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 16:12:28 [http-nio-8080-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/login/password] with attributes [permitAll]
2025-09-19 16:12:28 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/login/password
Hibernate: 
    select
        user0_.id as id1_10_,
        user0_.avatar as avatar2_10_,
        user0_.bio as bio3_10_,
        user0_.birthday as birthday4_10_,
        user0_.created_at as created_5_10_,
        user0_.deleted_at as deleted_6_10_,
        user0_.email as email7_10_,
        user0_.gender as gender8_10_,
        user0_.last_login_at as last_log9_10_,
        user0_.last_login_ip as last_lo10_10_,
        user0_.location as locatio11_10_,
        user0_.login_attempts as login_a12_10_,
        user0_.mobile as mobile13_10_,
        user0_.password_hash as passwor14_10_,
        user0_.salt as salt15_10_,
        user0_.status as status16_10_,
        user0_.updated_at as updated17_10_,
        user0_.username as usernam18_10_,
        user0_.verified as verifie19_10_ 
    from
        users user0_ 
    where
        (
            user0_.deleted_at IS NULL
        ) 
        and user0_.mobile=?
Hibernate: 
    update
        users 
    set
        last_login_at=?,
        last_login_ip=?,
        login_attempts=0 
    where
        id=?
Hibernate: 
    insert 
    into
        user_tokens
        (created_at, device_id, device_info, device_type, expires_at, ip_address, last_used_at, refresh_token, revoked, user_agent, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-19 16:12:28 [http-nio-8080-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:12:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:12:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:12:51 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /transactions/inquiry
2025-09-19 16:12:51 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:12:51 [http-nio-8080-exec-1] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1968926156120002560
2025-09-19 16:12:51 [http-nio-8080-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /transactions/inquiry] with attributes [authenticated]
2025-09-19 16:12:51 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /transactions/inquiry
2025-09-19 16:12:51 [http-nio-8080-exec-1] INFO  com.fliliy.secondhand.service.TransactionService - User 1968926156120002560 creating inquiry for product 1963907136069177344
Hibernate: 
    select
        product0_.id as id1_6_0_,
        product0_.category_id as category2_6_0_,
        product0_.chat_count as chat_cou3_6_0_,
        product0_.city as city4_6_0_,
        product0_.created_at as created_5_6_0_,
        product0_.deleted_at as deleted_6_6_0_,
        product0_.description as descript7_6_0_,
        product0_.detail_address as detail_a8_6_0_,
        product0_.district as district9_6_0_,
        product0_.favorite_count as favorit10_6_0_,
        product0_.has_warranty as has_war11_6_0_,
        product0_.inquiry_count as inquiry12_6_0_,
        product0_.is_promoted as is_prom13_6_0_,
        product0_.latitude as latitud14_6_0_,
        product0_.longitude as longitu15_6_0_,
        product0_.original_price as origina16_6_0_,
        product0_.price as price17_6_0_,
        product0_.product_condition as product18_6_0_,
        product0_.promoted_at as promote19_6_0_,
        product0_.promoted_expires_at as promote20_6_0_,
        product0_.province as provinc21_6_0_,
        product0_.published_at as publish22_6_0_,
        product0_.seller_id as seller_23_6_0_,
        product0_.sold_at as sold_at24_6_0_,
        product0_.status as status25_6_0_,
        product0_.title as title26_6_0_,
        product0_.updated_at as updated27_6_0_,
        product0_.usage_type as usage_t28_6_0_,
        product0_.usage_unit as usage_u29_6_0_,
        product0_.usage_value as usage_v30_6_0_,
        product0_.view_count as view_co31_6_0_,
        product0_.warranty_description as warrant32_6_0_,
        product0_.warranty_months as warrant33_6_0_,
        product0_.warranty_type as warrant34_6_0_ 
    from
        products product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        user0_.id as id1_10_0_,
        user0_.avatar as avatar2_10_0_,
        user0_.bio as bio3_10_0_,
        user0_.birthday as birthday4_10_0_,
        user0_.created_at as created_5_10_0_,
        user0_.deleted_at as deleted_6_10_0_,
        user0_.email as email7_10_0_,
        user0_.gender as gender8_10_0_,
        user0_.last_login_at as last_log9_10_0_,
        user0_.last_login_ip as last_lo10_10_0_,
        user0_.location as locatio11_10_0_,
        user0_.login_attempts as login_a12_10_0_,
        user0_.mobile as mobile13_10_0_,
        user0_.password_hash as passwor14_10_0_,
        user0_.salt as salt15_10_0_,
        user0_.status as status16_10_0_,
        user0_.updated_at as updated17_10_0_,
        user0_.username as usernam18_10_0_,
        user0_.verified as verifie19_10_0_ 
    from
        users user0_ 
    where
        user0_.id=? 
        and (
            user0_.deleted_at IS NULL
        )
Hibernate: 
    select
        transactio0_.id as id1_8_,
        transactio0_.buyer_id as buyer_id2_8_,
        transactio0_.cancel_reason as cancel_r3_8_,
        transactio0_.cancel_type as cancel_t4_8_,
        transactio0_.cancelled_at as cancelle5_8_,
        transactio0_.cancelled_by as cancelle6_8_,
        transactio0_.chat_room_id as chat_roo7_8_,
        transactio0_.code_expires_at as code_exp8_8_,
        transactio0_.completed_at as complete9_8_,
        transactio0_.contact_name as contact10_8_,
        transactio0_.contact_phone as contact11_8_,
        transactio0_.created_at as created12_8_,
        transactio0_.feedback as feedbac13_8_,
        transactio0_.inquiry_type as inquiry14_8_,
        transactio0_.meeting_detail_address as meeting15_8_,
        transactio0_.meeting_latitude as meeting16_8_,
        transactio0_.meeting_location_name as meeting17_8_,
        transactio0_.meeting_longitude as meeting18_8_,
        transactio0_.meeting_notes as meeting19_8_,
        transactio0_.meeting_time as meeting20_8_,
        transactio0_.product_id as product21_8_,
        transactio0_.rating as rating22_8_,
        transactio0_.seller_id as seller_23_8_,
        transactio0_.status as status24_8_,
        transactio0_.transaction_code as transac25_8_,
        transactio0_.transaction_price as transac26_8_,
        transactio0_.updated_at as updated27_8_ 
    from
        transactions transactio0_ 
    where
        transactio0_.buyer_id=? 
        and transactio0_.product_id=?
Hibernate: 
    select
        product0_.id as id1_6_0_,
        product0_.category_id as category2_6_0_,
        product0_.chat_count as chat_cou3_6_0_,
        product0_.city as city4_6_0_,
        product0_.created_at as created_5_6_0_,
        product0_.deleted_at as deleted_6_6_0_,
        product0_.description as descript7_6_0_,
        product0_.detail_address as detail_a8_6_0_,
        product0_.district as district9_6_0_,
        product0_.favorite_count as favorit10_6_0_,
        product0_.has_warranty as has_war11_6_0_,
        product0_.inquiry_count as inquiry12_6_0_,
        product0_.is_promoted as is_prom13_6_0_,
        product0_.latitude as latitud14_6_0_,
        product0_.longitude as longitu15_6_0_,
        product0_.original_price as origina16_6_0_,
        product0_.price as price17_6_0_,
        product0_.product_condition as product18_6_0_,
        product0_.promoted_at as promote19_6_0_,
        product0_.promoted_expires_at as promote20_6_0_,
        product0_.province as provinc21_6_0_,
        product0_.published_at as publish22_6_0_,
        product0_.seller_id as seller_23_6_0_,
        product0_.sold_at as sold_at24_6_0_,
        product0_.status as status25_6_0_,
        product0_.title as title26_6_0_,
        product0_.updated_at as updated27_6_0_,
        product0_.usage_type as usage_t28_6_0_,
        product0_.usage_unit as usage_u29_6_0_,
        product0_.usage_value as usage_v30_6_0_,
        product0_.view_count as view_co31_6_0_,
        product0_.warranty_description as warrant32_6_0_,
        product0_.warranty_months as warrant33_6_0_,
        product0_.warranty_type as warrant34_6_0_ 
    from
        products product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        chatroom0_.id as id1_2_,
        chatroom0_.buyer_id as buyer_id2_2_,
        chatroom0_.buyer_unread_count as buyer_un3_2_,
        chatroom0_.created_at as created_4_2_,
        chatroom0_.last_message_content as last_mes5_2_,
        chatroom0_.last_message_id as last_mes6_2_,
        chatroom0_.last_message_sender_id as last_mes7_2_,
        chatroom0_.last_message_time as last_mes8_2_,
        chatroom0_.last_message_type as last_mes9_2_,
        chatroom0_.product_id as product10_2_,
        chatroom0_.seller_id as seller_11_2_,
        chatroom0_.seller_unread_count as seller_12_2_,
        chatroom0_.status as status13_2_,
        chatroom0_.total_messages as total_m14_2_,
        chatroom0_.transaction_id as transac15_2_,
        chatroom0_.updated_at as updated16_2_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.product_id=? 
        and chatroom0_.buyer_id=?
2025-09-19 16:12:51 [http-nio-8080-exec-1] INFO  com.fliliy.secondhand.service.ChatService - 创建新聊天室 - 商品ID: 1963907136069177344, 买家ID: 1968926156120002560, 卖家ID: 1962925440754651136
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_unread_count as buyer_un3_2_0_,
        chatroom0_.created_at as created_4_2_0_,
        chatroom0_.last_message_content as last_mes5_2_0_,
        chatroom0_.last_message_id as last_mes6_2_0_,
        chatroom0_.last_message_sender_id as last_mes7_2_0_,
        chatroom0_.last_message_time as last_mes8_2_0_,
        chatroom0_.last_message_type as last_mes9_2_0_,
        chatroom0_.product_id as product10_2_0_,
        chatroom0_.seller_id as seller_11_2_0_,
        chatroom0_.seller_unread_count as seller_12_2_0_,
        chatroom0_.status as status13_2_0_,
        chatroom0_.total_messages as total_m14_2_0_,
        chatroom0_.transaction_id as transac15_2_0_,
        chatroom0_.updated_at as updated16_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
Hibernate: 
    insert 
    into
        chat_rooms
        (buyer_id, buyer_unread_count, created_at, last_message_content, last_message_id, last_message_sender_id, last_message_time, last_message_type, product_id, seller_id, seller_unread_count, status, total_messages, transaction_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        transactio0_.id as id1_8_0_,
        transactio0_.buyer_id as buyer_id2_8_0_,
        transactio0_.cancel_reason as cancel_r3_8_0_,
        transactio0_.cancel_type as cancel_t4_8_0_,
        transactio0_.cancelled_at as cancelle5_8_0_,
        transactio0_.cancelled_by as cancelle6_8_0_,
        transactio0_.chat_room_id as chat_roo7_8_0_,
        transactio0_.code_expires_at as code_exp8_8_0_,
        transactio0_.completed_at as complete9_8_0_,
        transactio0_.contact_name as contact10_8_0_,
        transactio0_.contact_phone as contact11_8_0_,
        transactio0_.created_at as created12_8_0_,
        transactio0_.feedback as feedbac13_8_0_,
        transactio0_.inquiry_type as inquiry14_8_0_,
        transactio0_.meeting_detail_address as meeting15_8_0_,
        transactio0_.meeting_latitude as meeting16_8_0_,
        transactio0_.meeting_location_name as meeting17_8_0_,
        transactio0_.meeting_longitude as meeting18_8_0_,
        transactio0_.meeting_notes as meeting19_8_0_,
        transactio0_.meeting_time as meeting20_8_0_,
        transactio0_.product_id as product21_8_0_,
        transactio0_.rating as rating22_8_0_,
        transactio0_.seller_id as seller_23_8_0_,
        transactio0_.status as status24_8_0_,
        transactio0_.transaction_code as transac25_8_0_,
        transactio0_.transaction_price as transac26_8_0_,
        transactio0_.updated_at as updated27_8_0_ 
    from
        transactions transactio0_ 
    where
        transactio0_.id=?
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_unread_count as buyer_un3_2_0_,
        chatroom0_.created_at as created_4_2_0_,
        chatroom0_.last_message_content as last_mes5_2_0_,
        chatroom0_.last_message_id as last_mes6_2_0_,
        chatroom0_.last_message_sender_id as last_mes7_2_0_,
        chatroom0_.last_message_time as last_mes8_2_0_,
        chatroom0_.last_message_type as last_mes9_2_0_,
        chatroom0_.product_id as product10_2_0_,
        chatroom0_.seller_id as seller_11_2_0_,
        chatroom0_.seller_unread_count as seller_12_2_0_,
        chatroom0_.status as status13_2_0_,
        chatroom0_.total_messages as total_m14_2_0_,
        chatroom0_.transaction_id as transac15_2_0_,
        chatroom0_.updated_at as updated16_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
Hibernate: 
    select
        chatmessag0_.id as id1_1_0_,
        chatmessag0_.chat_room_id as chat_roo2_1_0_,
        chatmessag0_.content as content3_1_0_,
        chatmessag0_.delivered_at as delivere4_1_0_,
        chatmessag0_.duration as duration5_1_0_,
        chatmessag0_.file_size as file_siz6_1_0_,
        chatmessag0_.file_url as file_url7_1_0_,
        chatmessag0_.image_height as image_he8_1_0_,
        chatmessag0_.image_width as image_wi9_1_0_,
        chatmessag0_.is_recalled as is_reca10_1_0_,
        chatmessag0_.message_type as message11_1_0_,
        chatmessag0_.read_at as read_at12_1_0_,
        chatmessag0_.recalled_at as recalle13_1_0_,
        chatmessag0_.sender_id as sender_14_1_0_,
        chatmessag0_.sent_at as sent_at15_1_0_,
        chatmessag0_.status as status16_1_0_,
        chatmessag0_.system_data as system_17_1_0_,
        chatmessag0_.system_type as system_18_1_0_,
        chatmessag0_.thumbnail_url as thumbna19_1_0_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.id=?
Hibernate: 
    update
        chat_rooms 
    set
        last_message_id=?,
        last_message_content=?,
        last_message_type=?,
        last_message_time=CURRENT_TIMESTAMP,
        last_message_sender_id=?,
        updated_at=CURRENT_TIMESTAMP 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        total_messages=total_messages+1 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        buyer_unread_count=buyer_unread_count+1 
    where
        id=? 
        and buyer_id<>?
Hibernate: 
    update
        chat_rooms 
    set
        seller_unread_count=seller_unread_count+1 
    where
        id=? 
        and seller_id<>?
2025-09-19 16:12:51 [http-nio-8080-exec-1] INFO  com.fliliy.secondhand.service.ChatService - 发送文本消息 - 聊天室ID: 1968951407537164288, 发送者ID: 1968926156120002560, 内容: 你好，这个PS5还在吗？可以见面看看商品吗？
Hibernate: 
    insert 
    into
        chat_messages
        (chat_room_id, content, delivered_at, duration, file_size, file_url, image_height, image_width, is_recalled, message_type, read_at, recalled_at, sender_id, sent_at, status, system_data, system_type, thumbnail_url, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        transactions
        (buyer_id, cancel_reason, cancel_type, cancelled_at, cancelled_by, chat_room_id, code_expires_at, completed_at, contact_name, contact_phone, created_at, feedback, inquiry_type, meeting_detail_address, meeting_latitude, meeting_location_name, meeting_longitude, meeting_notes, meeting_time, product_id, rating, seller_id, status, transaction_code, transaction_price, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-19 16:12:51 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:13:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:13:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:13:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:13:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:13:51 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /chats
2025-09-19 16:13:51 [http-nio-8080-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:13:51 [http-nio-8080-exec-3] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1968926156120002560
2025-09-19 16:13:51 [http-nio-8080-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /chats] with attributes [authenticated]
2025-09-19 16:13:51 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /chats
2025-09-19 16:13:51 [http-nio-8080-exec-3] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@763827522 wrapping com.mysql.cj.jdbc.ConnectionImpl@591be8aa] read-only
Hibernate: 
    select
        chatroom0_.id as id1_2_,
        chatroom0_.buyer_id as buyer_id2_2_,
        chatroom0_.buyer_unread_count as buyer_un3_2_,
        chatroom0_.created_at as created_4_2_,
        chatroom0_.last_message_content as last_mes5_2_,
        chatroom0_.last_message_id as last_mes6_2_,
        chatroom0_.last_message_sender_id as last_mes7_2_,
        chatroom0_.last_message_time as last_mes8_2_,
        chatroom0_.last_message_type as last_mes9_2_,
        chatroom0_.product_id as product10_2_,
        chatroom0_.seller_id as seller_11_2_,
        chatroom0_.seller_unread_count as seller_12_2_,
        chatroom0_.status as status13_2_,
        chatroom0_.total_messages as total_m14_2_,
        chatroom0_.transaction_id as transac15_2_,
        chatroom0_.updated_at as updated16_2_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.buyer_id=? 
        or chatroom0_.seller_id=? 
    order by
        chatroom0_.updated_at DESC limit ?
2025-09-19 16:13:51 [http-nio-8080-exec-3] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@763827522 wrapping com.mysql.cj.jdbc.ConnectionImpl@591be8aa]
2025-09-19 16:13:51 [http-nio-8080-exec-3] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1991903364 wrapping com.mysql.cj.jdbc.ConnectionImpl@591be8aa] read-only
Hibernate: 
    select
        product0_.id as id1_6_,
        product0_.category_id as category2_6_,
        product0_.chat_count as chat_cou3_6_,
        product0_.city as city4_6_,
        product0_.created_at as created_5_6_,
        product0_.deleted_at as deleted_6_6_,
        product0_.description as descript7_6_,
        product0_.detail_address as detail_a8_6_,
        product0_.district as district9_6_,
        product0_.favorite_count as favorit10_6_,
        product0_.has_warranty as has_war11_6_,
        product0_.inquiry_count as inquiry12_6_,
        product0_.is_promoted as is_prom13_6_,
        product0_.latitude as latitud14_6_,
        product0_.longitude as longitu15_6_,
        product0_.original_price as origina16_6_,
        product0_.price as price17_6_,
        product0_.product_condition as product18_6_,
        product0_.promoted_at as promote19_6_,
        product0_.promoted_expires_at as promote20_6_,
        product0_.province as provinc21_6_,
        product0_.published_at as publish22_6_,
        product0_.seller_id as seller_23_6_,
        product0_.sold_at as sold_at24_6_,
        product0_.status as status25_6_,
        product0_.title as title26_6_,
        product0_.updated_at as updated27_6_,
        product0_.usage_type as usage_t28_6_,
        product0_.usage_unit as usage_u29_6_,
        product0_.usage_value as usage_v30_6_,
        product0_.view_count as view_co31_6_,
        product0_.warranty_description as warrant32_6_,
        product0_.warranty_months as warrant33_6_,
        product0_.warranty_type as warrant34_6_ 
    from
        products product0_ 
    where
        product0_.id=? 
        and (
            product0_.deleted_at is null
        )
2025-09-19 16:13:51 [http-nio-8080-exec-3] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1991903364 wrapping com.mysql.cj.jdbc.ConnectionImpl@591be8aa]
2025-09-19 16:13:51 [http-nio-8080-exec-3] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@344615591 wrapping com.mysql.cj.jdbc.ConnectionImpl@591be8aa] read-only
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_unread_count as buyer_un3_2_0_,
        chatroom0_.created_at as created_4_2_0_,
        chatroom0_.last_message_content as last_mes5_2_0_,
        chatroom0_.last_message_id as last_mes6_2_0_,
        chatroom0_.last_message_sender_id as last_mes7_2_0_,
        chatroom0_.last_message_time as last_mes8_2_0_,
        chatroom0_.last_message_type as last_mes9_2_0_,
        chatroom0_.product_id as product10_2_0_,
        chatroom0_.seller_id as seller_11_2_0_,
        chatroom0_.seller_unread_count as seller_12_2_0_,
        chatroom0_.status as status13_2_0_,
        chatroom0_.total_messages as total_m14_2_0_,
        chatroom0_.transaction_id as transac15_2_0_,
        chatroom0_.updated_at as updated16_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
Hibernate: 
    select
        user0_.id as id1_10_0_,
        user0_.avatar as avatar2_10_0_,
        user0_.bio as bio3_10_0_,
        user0_.birthday as birthday4_10_0_,
        user0_.created_at as created_5_10_0_,
        user0_.deleted_at as deleted_6_10_0_,
        user0_.email as email7_10_0_,
        user0_.gender as gender8_10_0_,
        user0_.last_login_at as last_log9_10_0_,
        user0_.last_login_ip as last_lo10_10_0_,
        user0_.location as locatio11_10_0_,
        user0_.login_attempts as login_a12_10_0_,
        user0_.mobile as mobile13_10_0_,
        user0_.password_hash as passwor14_10_0_,
        user0_.salt as salt15_10_0_,
        user0_.status as status16_10_0_,
        user0_.updated_at as updated17_10_0_,
        user0_.username as usernam18_10_0_,
        user0_.verified as verifie19_10_0_ 
    from
        users user0_ 
    where
        user0_.id=? 
        and (
            user0_.deleted_at IS NULL
        )
2025-09-19 16:13:51 [http-nio-8080-exec-3] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@344615591 wrapping com.mysql.cj.jdbc.ConnectionImpl@591be8aa]
2025-09-19 16:13:51 [http-nio-8080-exec-3] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1333753450 wrapping com.mysql.cj.jdbc.ConnectionImpl@591be8aa] read-only
Hibernate: 
    select
        product0_.id as id1_6_,
        product0_.category_id as category2_6_,
        product0_.chat_count as chat_cou3_6_,
        product0_.city as city4_6_,
        product0_.created_at as created_5_6_,
        product0_.deleted_at as deleted_6_6_,
        product0_.description as descript7_6_,
        product0_.detail_address as detail_a8_6_,
        product0_.district as district9_6_,
        product0_.favorite_count as favorit10_6_,
        product0_.has_warranty as has_war11_6_,
        product0_.inquiry_count as inquiry12_6_,
        product0_.is_promoted as is_prom13_6_,
        product0_.latitude as latitud14_6_,
        product0_.longitude as longitu15_6_,
        product0_.original_price as origina16_6_,
        product0_.price as price17_6_,
        product0_.product_condition as product18_6_,
        product0_.promoted_at as promote19_6_,
        product0_.promoted_expires_at as promote20_6_,
        product0_.province as provinc21_6_,
        product0_.published_at as publish22_6_,
        product0_.seller_id as seller_23_6_,
        product0_.sold_at as sold_at24_6_,
        product0_.status as status25_6_,
        product0_.title as title26_6_,
        product0_.updated_at as updated27_6_,
        product0_.usage_type as usage_t28_6_,
        product0_.usage_unit as usage_u29_6_,
        product0_.usage_value as usage_v30_6_,
        product0_.view_count as view_co31_6_,
        product0_.warranty_description as warrant32_6_,
        product0_.warranty_months as warrant33_6_,
        product0_.warranty_type as warrant34_6_ 
    from
        products product0_ 
    where
        product0_.id=? 
        and (
            product0_.deleted_at is null
        )
2025-09-19 16:13:51 [http-nio-8080-exec-3] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1333753450 wrapping com.mysql.cj.jdbc.ConnectionImpl@591be8aa]
2025-09-19 16:13:51 [http-nio-8080-exec-3] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@239439886 wrapping com.mysql.cj.jdbc.ConnectionImpl@591be8aa] read-only
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_unread_count as buyer_un3_2_0_,
        chatroom0_.created_at as created_4_2_0_,
        chatroom0_.last_message_content as last_mes5_2_0_,
        chatroom0_.last_message_id as last_mes6_2_0_,
        chatroom0_.last_message_sender_id as last_mes7_2_0_,
        chatroom0_.last_message_time as last_mes8_2_0_,
        chatroom0_.last_message_type as last_mes9_2_0_,
        chatroom0_.product_id as product10_2_0_,
        chatroom0_.seller_id as seller_11_2_0_,
        chatroom0_.seller_unread_count as seller_12_2_0_,
        chatroom0_.status as status13_2_0_,
        chatroom0_.total_messages as total_m14_2_0_,
        chatroom0_.transaction_id as transac15_2_0_,
        chatroom0_.updated_at as updated16_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
Hibernate: 
    select
        user0_.id as id1_10_0_,
        user0_.avatar as avatar2_10_0_,
        user0_.bio as bio3_10_0_,
        user0_.birthday as birthday4_10_0_,
        user0_.created_at as created_5_10_0_,
        user0_.deleted_at as deleted_6_10_0_,
        user0_.email as email7_10_0_,
        user0_.gender as gender8_10_0_,
        user0_.last_login_at as last_log9_10_0_,
        user0_.last_login_ip as last_lo10_10_0_,
        user0_.location as locatio11_10_0_,
        user0_.login_attempts as login_a12_10_0_,
        user0_.mobile as mobile13_10_0_,
        user0_.password_hash as passwor14_10_0_,
        user0_.salt as salt15_10_0_,
        user0_.status as status16_10_0_,
        user0_.updated_at as updated17_10_0_,
        user0_.username as usernam18_10_0_,
        user0_.verified as verifie19_10_0_ 
    from
        users user0_ 
    where
        user0_.id=? 
        and (
            user0_.deleted_at IS NULL
        )
2025-09-19 16:13:51 [http-nio-8080-exec-3] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@239439886 wrapping com.mysql.cj.jdbc.ConnectionImpl@591be8aa]
2025-09-19 16:13:51 [http-nio-8080-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:14:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:14:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:14:25 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /chats/1968951407537164288/messages
2025-09-19 16:14:25 [http-nio-8080-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:14:25 [http-nio-8080-exec-5] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1968926156120002560
2025-09-19 16:14:25 [http-nio-8080-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /chats/1968951407537164288/messages] with attributes [authenticated]
2025-09-19 16:14:25 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /chats/1968951407537164288/messages
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_unread_count as buyer_un3_2_0_,
        chatroom0_.created_at as created_4_2_0_,
        chatroom0_.last_message_content as last_mes5_2_0_,
        chatroom0_.last_message_id as last_mes6_2_0_,
        chatroom0_.last_message_sender_id as last_mes7_2_0_,
        chatroom0_.last_message_time as last_mes8_2_0_,
        chatroom0_.last_message_type as last_mes9_2_0_,
        chatroom0_.product_id as product10_2_0_,
        chatroom0_.seller_id as seller_11_2_0_,
        chatroom0_.seller_unread_count as seller_12_2_0_,
        chatroom0_.status as status13_2_0_,
        chatroom0_.total_messages as total_m14_2_0_,
        chatroom0_.transaction_id as transac15_2_0_,
        chatroom0_.updated_at as updated16_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
Hibernate: 
    select
        chatmessag0_.id as id1_1_0_,
        chatmessag0_.chat_room_id as chat_roo2_1_0_,
        chatmessag0_.content as content3_1_0_,
        chatmessag0_.delivered_at as delivere4_1_0_,
        chatmessag0_.duration as duration5_1_0_,
        chatmessag0_.file_size as file_siz6_1_0_,
        chatmessag0_.file_url as file_url7_1_0_,
        chatmessag0_.image_height as image_he8_1_0_,
        chatmessag0_.image_width as image_wi9_1_0_,
        chatmessag0_.is_recalled as is_reca10_1_0_,
        chatmessag0_.message_type as message11_1_0_,
        chatmessag0_.read_at as read_at12_1_0_,
        chatmessag0_.recalled_at as recalle13_1_0_,
        chatmessag0_.sender_id as sender_14_1_0_,
        chatmessag0_.sent_at as sent_at15_1_0_,
        chatmessag0_.status as status16_1_0_,
        chatmessag0_.system_data as system_17_1_0_,
        chatmessag0_.system_type as system_18_1_0_,
        chatmessag0_.thumbnail_url as thumbna19_1_0_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.id=?
Hibernate: 
    update
        chat_rooms 
    set
        last_message_id=?,
        last_message_content=?,
        last_message_type=?,
        last_message_time=CURRENT_TIMESTAMP,
        last_message_sender_id=?,
        updated_at=CURRENT_TIMESTAMP 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        total_messages=total_messages+1 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        buyer_unread_count=buyer_unread_count+1 
    where
        id=? 
        and buyer_id<>?
Hibernate: 
    update
        chat_rooms 
    set
        seller_unread_count=seller_unread_count+1 
    where
        id=? 
        and seller_id<>?
2025-09-19 16:14:25 [http-nio-8080-exec-5] INFO  com.fliliy.secondhand.service.ChatService - 发送文本消息 - 聊天室ID: 1968951407537164288, 发送者ID: 1968926156120002560, 内容: 我想了解一下这个PS5的具体状况，用了多久？有什么配件吗？
Hibernate: 
    insert 
    into
        chat_messages
        (chat_room_id, content, delivered_at, duration, file_size, file_url, image_height, image_width, is_recalled, message_type, read_at, recalled_at, sender_id, sent_at, status, system_data, system_type, thumbnail_url, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-19 16:14:25 [http-nio-8080-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:14:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:14:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:15:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:15:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:15:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:15:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:16:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:16:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:16:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:16:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:17:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:17:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:17:23 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /chats/1968951407537164288/messages
2025-09-19 16:17:23 [http-nio-8080-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:17:23 [http-nio-8080-exec-7] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1962925440754651136
2025-09-19 16:17:23 [http-nio-8080-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /chats/1968951407537164288/messages] with attributes [authenticated]
2025-09-19 16:17:23 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /chats/1968951407537164288/messages
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_unread_count as buyer_un3_2_0_,
        chatroom0_.created_at as created_4_2_0_,
        chatroom0_.last_message_content as last_mes5_2_0_,
        chatroom0_.last_message_id as last_mes6_2_0_,
        chatroom0_.last_message_sender_id as last_mes7_2_0_,
        chatroom0_.last_message_time as last_mes8_2_0_,
        chatroom0_.last_message_type as last_mes9_2_0_,
        chatroom0_.product_id as product10_2_0_,
        chatroom0_.seller_id as seller_11_2_0_,
        chatroom0_.seller_unread_count as seller_12_2_0_,
        chatroom0_.status as status13_2_0_,
        chatroom0_.total_messages as total_m14_2_0_,
        chatroom0_.transaction_id as transac15_2_0_,
        chatroom0_.updated_at as updated16_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
Hibernate: 
    select
        chatmessag0_.id as id1_1_0_,
        chatmessag0_.chat_room_id as chat_roo2_1_0_,
        chatmessag0_.content as content3_1_0_,
        chatmessag0_.delivered_at as delivere4_1_0_,
        chatmessag0_.duration as duration5_1_0_,
        chatmessag0_.file_size as file_siz6_1_0_,
        chatmessag0_.file_url as file_url7_1_0_,
        chatmessag0_.image_height as image_he8_1_0_,
        chatmessag0_.image_width as image_wi9_1_0_,
        chatmessag0_.is_recalled as is_reca10_1_0_,
        chatmessag0_.message_type as message11_1_0_,
        chatmessag0_.read_at as read_at12_1_0_,
        chatmessag0_.recalled_at as recalle13_1_0_,
        chatmessag0_.sender_id as sender_14_1_0_,
        chatmessag0_.sent_at as sent_at15_1_0_,
        chatmessag0_.status as status16_1_0_,
        chatmessag0_.system_data as system_17_1_0_,
        chatmessag0_.system_type as system_18_1_0_,
        chatmessag0_.thumbnail_url as thumbna19_1_0_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.id=?
Hibernate: 
    update
        chat_rooms 
    set
        last_message_id=?,
        last_message_content=?,
        last_message_type=?,
        last_message_time=CURRENT_TIMESTAMP,
        last_message_sender_id=?,
        updated_at=CURRENT_TIMESTAMP 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        total_messages=total_messages+1 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        buyer_unread_count=buyer_unread_count+1 
    where
        id=? 
        and buyer_id<>?
Hibernate: 
    update
        chat_rooms 
    set
        seller_unread_count=seller_unread_count+1 
    where
        id=? 
        and seller_id<>?
2025-09-19 16:17:23 [http-nio-8080-exec-7] INFO  com.fliliy.secondhand.service.ChatService - 发送文本消息 - 聊天室ID: 1968951407537164288, 发送者ID: 1962925440754651136, 内容: 你好！PS5用了6个月，几乎全新，有原装手柄和所有配件。我们可以见面交易，明天下午方便吗？
Hibernate: 
    insert 
    into
        chat_messages
        (chat_room_id, content, delivered_at, duration, file_size, file_url, image_height, image_width, is_recalled, message_type, read_at, recalled_at, sender_id, sent_at, status, system_data, system_type, thumbnail_url, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-19 16:17:23 [http-nio-8080-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:17:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:17:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:18:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:18:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:18:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:18:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:19:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:19:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:19:26 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /transactions/1968951407574913024/agree-offline
2025-09-19 16:19:26 [http-nio-8080-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:19:26 [http-nio-8080-exec-9] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1962925440754651136
2025-09-19 16:19:26 [http-nio-8080-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /transactions/1968951407574913024/agree-offline] with attributes [authenticated]
2025-09-19 16:19:26 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /transactions/1968951407574913024/agree-offline
2025-09-19 16:19:26 [http-nio-8080-exec-9] ERROR c.f.secondhand.exception.GlobalExceptionHandler - Runtime exception: 
org.springframework.http.converter.HttpMessageNotReadableException: JSON parse error: Cannot deserialize value of type `java.time.LocalDateTime` from String "2025-09-20T15:00:00": Failed to deserialize java.time.LocalDateTime: (java.time.format.DateTimeParseException) Text '2025-09-20T15:00:00' could not be parsed at index 10; nested exception is com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDateTime` from String "2025-09-20T15:00:00": Failed to deserialize java.time.LocalDateTime: (java.time.format.DateTimeParseException) Text '2025-09-20T15:00:00' could not be parsed at index 10
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 3, column: 20] (through reference chain: com.fliliy.secondhand.dto.request.AgreeOfflineRequest["meetingTime"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:391)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.read(AbstractJackson2HttpMessageConverter.java:343)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:185)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.readWithMessageConverters(RequestResponseBodyMethodProcessor.java:160)
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.resolveArgument(RequestResponseBodyMethodProcessor.java:133)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.fliliy.secondhand.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:59)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
Caused by: com.fasterxml.jackson.databind.exc.InvalidFormatException: Cannot deserialize value of type `java.time.LocalDateTime` from String "2025-09-20T15:00:00": Failed to deserialize java.time.LocalDateTime: (java.time.format.DateTimeParseException) Text '2025-09-20T15:00:00' could not be parsed at index 10
 at [Source: (org.springframework.util.StreamUtils$NonClosingInputStream); line: 3, column: 20] (through reference chain: com.fliliy.secondhand.dto.request.AgreeOfflineRequest["meetingTime"])
	at com.fasterxml.jackson.databind.exc.InvalidFormatException.from(InvalidFormatException.java:67)
	at com.fasterxml.jackson.databind.DeserializationContext.weirdStringException(DeserializationContext.java:1991)
	at com.fasterxml.jackson.databind.DeserializationContext.handleWeirdStringValue(DeserializationContext.java:1219)
	at com.fasterxml.jackson.datatype.jsr310.deser.JSR310DeserializerBase._handleDateTimeException(JSR310DeserializerBase.java:176)
	at com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer._fromString(LocalDateTimeDeserializer.java:179)
	at com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer.deserialize(LocalDateTimeDeserializer.java:81)
	at com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer.deserialize(LocalDateTimeDeserializer.java:40)
	at com.fasterxml.jackson.databind.deser.impl.MethodProperty.deserializeAndSet(MethodProperty.java:129)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:392)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:185)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4674)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3682)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.readJavaType(AbstractJackson2HttpMessageConverter.java:380)
	... 98 common frames omitted
Caused by: java.time.format.DateTimeParseException: Text '2025-09-20T15:00:00' could not be parsed at index 10
	at java.base/java.time.format.DateTimeFormatter.parseResolved0(DateTimeFormatter.java:2106)
	at java.base/java.time.format.DateTimeFormatter.parse(DateTimeFormatter.java:2008)
	at java.base/java.time.LocalDateTime.parse(LocalDateTime.java:494)
	at com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer._fromString(LocalDateTimeDeserializer.java:177)
	... 107 common frames omitted
2025-09-19 16:19:26 [http-nio-8080-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:19:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:19:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:19:49 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /transactions/1968951407574913024/agree-offline
2025-09-19 16:19:49 [http-nio-8080-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:19:49 [http-nio-8080-exec-10] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1962925440754651136
2025-09-19 16:19:49 [http-nio-8080-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /transactions/1968951407574913024/agree-offline] with attributes [authenticated]
2025-09-19 16:19:49 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /transactions/1968951407574913024/agree-offline
2025-09-19 16:19:49 [http-nio-8080-exec-10] INFO  com.fliliy.secondhand.service.TransactionService - User 1962925440754651136 agreeing offline transaction 1968951407574913024
Hibernate: 
    select
        transactio0_.id as id1_8_0_,
        transactio0_.buyer_id as buyer_id2_8_0_,
        transactio0_.cancel_reason as cancel_r3_8_0_,
        transactio0_.cancel_type as cancel_t4_8_0_,
        transactio0_.cancelled_at as cancelle5_8_0_,
        transactio0_.cancelled_by as cancelle6_8_0_,
        transactio0_.chat_room_id as chat_roo7_8_0_,
        transactio0_.code_expires_at as code_exp8_8_0_,
        transactio0_.completed_at as complete9_8_0_,
        transactio0_.contact_name as contact10_8_0_,
        transactio0_.contact_phone as contact11_8_0_,
        transactio0_.created_at as created12_8_0_,
        transactio0_.feedback as feedbac13_8_0_,
        transactio0_.inquiry_type as inquiry14_8_0_,
        transactio0_.meeting_detail_address as meeting15_8_0_,
        transactio0_.meeting_latitude as meeting16_8_0_,
        transactio0_.meeting_location_name as meeting17_8_0_,
        transactio0_.meeting_longitude as meeting18_8_0_,
        transactio0_.meeting_notes as meeting19_8_0_,
        transactio0_.meeting_time as meeting20_8_0_,
        transactio0_.product_id as product21_8_0_,
        transactio0_.rating as rating22_8_0_,
        transactio0_.seller_id as seller_23_8_0_,
        transactio0_.status as status24_8_0_,
        transactio0_.transaction_code as transac25_8_0_,
        transactio0_.transaction_price as transac26_8_0_,
        transactio0_.updated_at as updated27_8_0_ 
    from
        transactions transactio0_ 
    where
        transactio0_.id=?
2025-09-19 16:19:49 [http-nio-8080-exec-10] WARN  com.fliliy.secondhand.service.TransactionService - Failed to send system message: 不支持的消息类型: SYSTEM
Hibernate: 
    update
        transactions 
    set
        buyer_id=?,
        cancel_reason=?,
        cancel_type=?,
        cancelled_at=?,
        cancelled_by=?,
        chat_room_id=?,
        code_expires_at=?,
        completed_at=?,
        contact_name=?,
        contact_phone=?,
        created_at=?,
        feedback=?,
        inquiry_type=?,
        meeting_detail_address=?,
        meeting_latitude=?,
        meeting_location_name=?,
        meeting_longitude=?,
        meeting_notes=?,
        meeting_time=?,
        product_id=?,
        rating=?,
        seller_id=?,
        status=?,
        transaction_code=?,
        transaction_price=?,
        updated_at=? 
    where
        id=?
2025-09-19 16:19:49 [http-nio-8080-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:20:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:20:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:20:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:20:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:20:54 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /transactions/1968951407574913024/complete
2025-09-19 16:20:54 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:20:54 [http-nio-8080-exec-1] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1962925440754651136
2025-09-19 16:20:54 [http-nio-8080-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /transactions/1968951407574913024/complete] with attributes [authenticated]
2025-09-19 16:20:54 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /transactions/1968951407574913024/complete
2025-09-19 16:20:54 [http-nio-8080-exec-1] INFO  com.fliliy.secondhand.service.TransactionService - User 1962925440754651136 completing transaction 1968951407574913024
Hibernate: 
    select
        transactio0_.id as id1_8_0_,
        transactio0_.buyer_id as buyer_id2_8_0_,
        transactio0_.cancel_reason as cancel_r3_8_0_,
        transactio0_.cancel_type as cancel_t4_8_0_,
        transactio0_.cancelled_at as cancelle5_8_0_,
        transactio0_.cancelled_by as cancelle6_8_0_,
        transactio0_.chat_room_id as chat_roo7_8_0_,
        transactio0_.code_expires_at as code_exp8_8_0_,
        transactio0_.completed_at as complete9_8_0_,
        transactio0_.contact_name as contact10_8_0_,
        transactio0_.contact_phone as contact11_8_0_,
        transactio0_.created_at as created12_8_0_,
        transactio0_.feedback as feedbac13_8_0_,
        transactio0_.inquiry_type as inquiry14_8_0_,
        transactio0_.meeting_detail_address as meeting15_8_0_,
        transactio0_.meeting_latitude as meeting16_8_0_,
        transactio0_.meeting_location_name as meeting17_8_0_,
        transactio0_.meeting_longitude as meeting18_8_0_,
        transactio0_.meeting_notes as meeting19_8_0_,
        transactio0_.meeting_time as meeting20_8_0_,
        transactio0_.product_id as product21_8_0_,
        transactio0_.rating as rating22_8_0_,
        transactio0_.seller_id as seller_23_8_0_,
        transactio0_.status as status24_8_0_,
        transactio0_.transaction_code as transac25_8_0_,
        transactio0_.transaction_price as transac26_8_0_,
        transactio0_.updated_at as updated27_8_0_ 
    from
        transactions transactio0_ 
    where
        transactio0_.id=?
Hibernate: 
    select
        product0_.id as id1_6_0_,
        product0_.category_id as category2_6_0_,
        product0_.chat_count as chat_cou3_6_0_,
        product0_.city as city4_6_0_,
        product0_.created_at as created_5_6_0_,
        product0_.deleted_at as deleted_6_6_0_,
        product0_.description as descript7_6_0_,
        product0_.detail_address as detail_a8_6_0_,
        product0_.district as district9_6_0_,
        product0_.favorite_count as favorit10_6_0_,
        product0_.has_warranty as has_war11_6_0_,
        product0_.inquiry_count as inquiry12_6_0_,
        product0_.is_promoted as is_prom13_6_0_,
        product0_.latitude as latitud14_6_0_,
        product0_.longitude as longitu15_6_0_,
        product0_.original_price as origina16_6_0_,
        product0_.price as price17_6_0_,
        product0_.product_condition as product18_6_0_,
        product0_.promoted_at as promote19_6_0_,
        product0_.promoted_expires_at as promote20_6_0_,
        product0_.province as provinc21_6_0_,
        product0_.published_at as publish22_6_0_,
        product0_.seller_id as seller_23_6_0_,
        product0_.sold_at as sold_at24_6_0_,
        product0_.status as status25_6_0_,
        product0_.title as title26_6_0_,
        product0_.updated_at as updated27_6_0_,
        product0_.usage_type as usage_t28_6_0_,
        product0_.usage_unit as usage_u29_6_0_,
        product0_.usage_value as usage_v30_6_0_,
        product0_.view_count as view_co31_6_0_,
        product0_.warranty_description as warrant32_6_0_,
        product0_.warranty_months as warrant33_6_0_,
        product0_.warranty_type as warrant34_6_0_ 
    from
        products product0_ 
    where
        product0_.id=?
2025-09-19 16:20:54 [http-nio-8080-exec-1] WARN  com.fliliy.secondhand.service.TransactionService - Failed to send completion message: 不支持的消息类型: SYSTEM
Hibernate: 
    update
        transactions 
    set
        buyer_id=?,
        cancel_reason=?,
        cancel_type=?,
        cancelled_at=?,
        cancelled_by=?,
        chat_room_id=?,
        code_expires_at=?,
        completed_at=?,
        contact_name=?,
        contact_phone=?,
        created_at=?,
        feedback=?,
        inquiry_type=?,
        meeting_detail_address=?,
        meeting_latitude=?,
        meeting_location_name=?,
        meeting_longitude=?,
        meeting_notes=?,
        meeting_time=?,
        product_id=?,
        rating=?,
        seller_id=?,
        status=?,
        transaction_code=?,
        transaction_price=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    update
        products 
    set
        category_id=?,
        chat_count=?,
        city=?,
        deleted_at=?,
        description=?,
        detail_address=?,
        district=?,
        favorite_count=?,
        has_warranty=?,
        inquiry_count=?,
        is_promoted=?,
        latitude=?,
        longitude=?,
        original_price=?,
        price=?,
        product_condition=?,
        promoted_at=?,
        promoted_expires_at=?,
        province=?,
        published_at=?,
        seller_id=?,
        sold_at=?,
        status=?,
        title=?,
        updated_at=?,
        usage_type=?,
        usage_unit=?,
        usage_value=?,
        view_count=?,
        warranty_description=?,
        warranty_months=?,
        warranty_type=? 
    where
        id=?
2025-09-19 16:20:54 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:21:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:21:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:21:15 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /products/1963907136069177344
2025-09-19 16:21:15 [http-nio-8080-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:21:15 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-19 16:21:15 [http-nio-8080-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /products/1963907136069177344] with attributes [permitAll]
2025-09-19 16:21:15 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /products/1963907136069177344
Hibernate: 
    select
        product0_.id as id1_6_,
        product0_.category_id as category2_6_,
        product0_.chat_count as chat_cou3_6_,
        product0_.city as city4_6_,
        product0_.created_at as created_5_6_,
        product0_.deleted_at as deleted_6_6_,
        product0_.description as descript7_6_,
        product0_.detail_address as detail_a8_6_,
        product0_.district as district9_6_,
        product0_.favorite_count as favorit10_6_,
        product0_.has_warranty as has_war11_6_,
        product0_.inquiry_count as inquiry12_6_,
        product0_.is_promoted as is_prom13_6_,
        product0_.latitude as latitud14_6_,
        product0_.longitude as longitu15_6_,
        product0_.original_price as origina16_6_,
        product0_.price as price17_6_,
        product0_.product_condition as product18_6_,
        product0_.promoted_at as promote19_6_,
        product0_.promoted_expires_at as promote20_6_,
        product0_.province as provinc21_6_,
        product0_.published_at as publish22_6_,
        product0_.seller_id as seller_23_6_,
        product0_.sold_at as sold_at24_6_,
        product0_.status as status25_6_,
        product0_.title as title26_6_,
        product0_.updated_at as updated27_6_,
        product0_.usage_type as usage_t28_6_,
        product0_.usage_unit as usage_u29_6_,
        product0_.usage_value as usage_v30_6_,
        product0_.view_count as view_co31_6_,
        product0_.warranty_description as warrant32_6_,
        product0_.warranty_months as warrant33_6_,
        product0_.warranty_type as warrant34_6_ 
    from
        products product0_ 
    where
        product0_.id=? 
        and (
            product0_.deleted_at is null
        )
Hibernate: 
    update
        products 
    set
        view_count=view_count+1 
    where
        id=?
Hibernate: 
    select
        productima0_.id as id1_4_,
        productima0_.image_height as image_he2_4_,
        productima0_.image_size as image_si3_4_,
        productima0_.image_url as image_ur4_4_,
        productima0_.image_width as image_wi5_4_,
        productima0_.product_id as product_6_4_,
        productima0_.sort_order as sort_ord7_4_,
        productima0_.thumbnail_url as thumbnai8_4_,
        productima0_.upload_time as upload_t9_4_ 
    from
        product_images productima0_ 
    where
        productima0_.product_id=? 
    order by
        productima0_.sort_order asc
Hibernate: 
    select
        producttag0_.tag_name as col_0_0_ 
    from
        product_tags producttag0_ 
    where
        producttag0_.product_id=?
Hibernate: 
    select
        user0_.id as id1_10_0_,
        user0_.avatar as avatar2_10_0_,
        user0_.bio as bio3_10_0_,
        user0_.birthday as birthday4_10_0_,
        user0_.created_at as created_5_10_0_,
        user0_.deleted_at as deleted_6_10_0_,
        user0_.email as email7_10_0_,
        user0_.gender as gender8_10_0_,
        user0_.last_login_at as last_log9_10_0_,
        user0_.last_login_ip as last_lo10_10_0_,
        user0_.location as locatio11_10_0_,
        user0_.login_attempts as login_a12_10_0_,
        user0_.mobile as mobile13_10_0_,
        user0_.password_hash as passwor14_10_0_,
        user0_.salt as salt15_10_0_,
        user0_.status as status16_10_0_,
        user0_.updated_at as updated17_10_0_,
        user0_.username as usernam18_10_0_,
        user0_.verified as verifie19_10_0_ 
    from
        users user0_ 
    where
        user0_.id=? 
        and (
            user0_.deleted_at IS NULL
        )
Hibernate: 
    select
        category0_.id as id1_0_0_,
        category0_.created_at as created_2_0_0_,
        category0_.description as descript3_0_0_,
        category0_.icon as icon4_0_0_,
        category0_.is_active as is_activ5_0_0_,
        category0_.name as name6_0_0_,
        category0_.parent_id as parent_i7_0_0_,
        category0_.product_count as product_8_0_0_,
        category0_.sort_order as sort_ord9_0_0_,
        category0_.updated_at as updated10_0_0_ 
    from
        categories category0_ 
    where
        category0_.id=?
Hibernate: 
    select
        product0_.id as id1_6_,
        product0_.category_id as category2_6_,
        product0_.chat_count as chat_cou3_6_,
        product0_.city as city4_6_,
        product0_.created_at as created_5_6_,
        product0_.deleted_at as deleted_6_6_,
        product0_.description as descript7_6_,
        product0_.detail_address as detail_a8_6_,
        product0_.district as district9_6_,
        product0_.favorite_count as favorit10_6_,
        product0_.has_warranty as has_war11_6_,
        product0_.inquiry_count as inquiry12_6_,
        product0_.is_promoted as is_prom13_6_,
        product0_.latitude as latitud14_6_,
        product0_.longitude as longitu15_6_,
        product0_.original_price as origina16_6_,
        product0_.price as price17_6_,
        product0_.product_condition as product18_6_,
        product0_.promoted_at as promote19_6_,
        product0_.promoted_expires_at as promote20_6_,
        product0_.province as provinc21_6_,
        product0_.published_at as publish22_6_,
        product0_.seller_id as seller_23_6_,
        product0_.sold_at as sold_at24_6_,
        product0_.status as status25_6_,
        product0_.title as title26_6_,
        product0_.updated_at as updated27_6_,
        product0_.usage_type as usage_t28_6_,
        product0_.usage_unit as usage_u29_6_,
        product0_.usage_value as usage_v30_6_,
        product0_.view_count as view_co31_6_,
        product0_.warranty_description as warrant32_6_,
        product0_.warranty_months as warrant33_6_,
        product0_.warranty_type as warrant34_6_ 
    from
        products product0_ 
    where
        product0_.category_id=? 
        and product0_.id<>? 
        and product0_.status='ACTIVE' 
        and (
            product0_.deleted_at is null
        ) 
    order by
        product0_.view_count DESC limit ?
Hibernate: 
    select
        productima0_.image_url as col_0_0_ 
    from
        product_images productima0_ 
    where
        productima0_.product_id=? 
        and productima0_.sort_order=0
2025-09-19 16:21:16 [http-nio-8080-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:21:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:21:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:21:46 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /transactions
2025-09-19 16:21:46 [http-nio-8080-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-19 16:21:46 [http-nio-8080-exec-5] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1968926156120002560
2025-09-19 16:21:46 [http-nio-8080-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /transactions] with attributes [authenticated]
2025-09-19 16:21:46 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /transactions
2025-09-19 16:21:46 [http-nio-8080-exec-5] INFO  com.fliliy.secondhand.service.TransactionService - Getting transactions for user 1968926156120002560, type: all, status: all
Hibernate: 
    select
        transactio0_.id as id1_8_,
        transactio0_.buyer_id as buyer_id2_8_,
        transactio0_.cancel_reason as cancel_r3_8_,
        transactio0_.cancel_type as cancel_t4_8_,
        transactio0_.cancelled_at as cancelle5_8_,
        transactio0_.cancelled_by as cancelle6_8_,
        transactio0_.chat_room_id as chat_roo7_8_,
        transactio0_.code_expires_at as code_exp8_8_,
        transactio0_.completed_at as complete9_8_,
        transactio0_.contact_name as contact10_8_,
        transactio0_.contact_phone as contact11_8_,
        transactio0_.created_at as created12_8_,
        transactio0_.feedback as feedbac13_8_,
        transactio0_.inquiry_type as inquiry14_8_,
        transactio0_.meeting_detail_address as meeting15_8_,
        transactio0_.meeting_latitude as meeting16_8_,
        transactio0_.meeting_location_name as meeting17_8_,
        transactio0_.meeting_longitude as meeting18_8_,
        transactio0_.meeting_notes as meeting19_8_,
        transactio0_.meeting_time as meeting20_8_,
        transactio0_.product_id as product21_8_,
        transactio0_.rating as rating22_8_,
        transactio0_.seller_id as seller_23_8_,
        transactio0_.status as status24_8_,
        transactio0_.transaction_code as transac25_8_,
        transactio0_.transaction_price as transac26_8_,
        transactio0_.updated_at as updated27_8_ 
    from
        transactions transactio0_ 
    where
        transactio0_.buyer_id=? 
        or transactio0_.seller_id=? 
    order by
        transactio0_.created_at DESC limit ?
Hibernate: 
    select
        product0_.id as id1_6_0_,
        product0_.category_id as category2_6_0_,
        product0_.chat_count as chat_cou3_6_0_,
        product0_.city as city4_6_0_,
        product0_.created_at as created_5_6_0_,
        product0_.deleted_at as deleted_6_6_0_,
        product0_.description as descript7_6_0_,
        product0_.detail_address as detail_a8_6_0_,
        product0_.district as district9_6_0_,
        product0_.favorite_count as favorit10_6_0_,
        product0_.has_warranty as has_war11_6_0_,
        product0_.inquiry_count as inquiry12_6_0_,
        product0_.is_promoted as is_prom13_6_0_,
        product0_.latitude as latitud14_6_0_,
        product0_.longitude as longitu15_6_0_,
        product0_.original_price as origina16_6_0_,
        product0_.price as price17_6_0_,
        product0_.product_condition as product18_6_0_,
        product0_.promoted_at as promote19_6_0_,
        product0_.promoted_expires_at as promote20_6_0_,
        product0_.province as provinc21_6_0_,
        product0_.published_at as publish22_6_0_,
        product0_.seller_id as seller_23_6_0_,
        product0_.sold_at as sold_at24_6_0_,
        product0_.status as status25_6_0_,
        product0_.title as title26_6_0_,
        product0_.updated_at as updated27_6_0_,
        product0_.usage_type as usage_t28_6_0_,
        product0_.usage_unit as usage_u29_6_0_,
        product0_.usage_value as usage_v30_6_0_,
        product0_.view_count as view_co31_6_0_,
        product0_.warranty_description as warrant32_6_0_,
        product0_.warranty_months as warrant33_6_0_,
        product0_.warranty_type as warrant34_6_0_ 
    from
        products product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        product0_.id as id1_6_0_,
        product0_.category_id as category2_6_0_,
        product0_.chat_count as chat_cou3_6_0_,
        product0_.city as city4_6_0_,
        product0_.created_at as created_5_6_0_,
        product0_.deleted_at as deleted_6_6_0_,
        product0_.description as descript7_6_0_,
        product0_.detail_address as detail_a8_6_0_,
        product0_.district as district9_6_0_,
        product0_.favorite_count as favorit10_6_0_,
        product0_.has_warranty as has_war11_6_0_,
        product0_.inquiry_count as inquiry12_6_0_,
        product0_.is_promoted as is_prom13_6_0_,
        product0_.latitude as latitud14_6_0_,
        product0_.longitude as longitu15_6_0_,
        product0_.original_price as origina16_6_0_,
        product0_.price as price17_6_0_,
        product0_.product_condition as product18_6_0_,
        product0_.promoted_at as promote19_6_0_,
        product0_.promoted_expires_at as promote20_6_0_,
        product0_.province as provinc21_6_0_,
        product0_.published_at as publish22_6_0_,
        product0_.seller_id as seller_23_6_0_,
        product0_.sold_at as sold_at24_6_0_,
        product0_.status as status25_6_0_,
        product0_.title as title26_6_0_,
        product0_.updated_at as updated27_6_0_,
        product0_.usage_type as usage_t28_6_0_,
        product0_.usage_unit as usage_u29_6_0_,
        product0_.usage_value as usage_v30_6_0_,
        product0_.view_count as view_co31_6_0_,
        product0_.warranty_description as warrant32_6_0_,
        product0_.warranty_months as warrant33_6_0_,
        product0_.warranty_type as warrant34_6_0_ 
    from
        products product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        product0_.id as id1_6_0_,
        product0_.category_id as category2_6_0_,
        product0_.chat_count as chat_cou3_6_0_,
        product0_.city as city4_6_0_,
        product0_.created_at as created_5_6_0_,
        product0_.deleted_at as deleted_6_6_0_,
        product0_.description as descript7_6_0_,
        product0_.detail_address as detail_a8_6_0_,
        product0_.district as district9_6_0_,
        product0_.favorite_count as favorit10_6_0_,
        product0_.has_warranty as has_war11_6_0_,
        product0_.inquiry_count as inquiry12_6_0_,
        product0_.is_promoted as is_prom13_6_0_,
        product0_.latitude as latitud14_6_0_,
        product0_.longitude as longitu15_6_0_,
        product0_.original_price as origina16_6_0_,
        product0_.price as price17_6_0_,
        product0_.product_condition as product18_6_0_,
        product0_.promoted_at as promote19_6_0_,
        product0_.promoted_expires_at as promote20_6_0_,
        product0_.province as provinc21_6_0_,
        product0_.published_at as publish22_6_0_,
        product0_.seller_id as seller_23_6_0_,
        product0_.sold_at as sold_at24_6_0_,
        product0_.status as status25_6_0_,
        product0_.title as title26_6_0_,
        product0_.updated_at as updated27_6_0_,
        product0_.usage_type as usage_t28_6_0_,
        product0_.usage_unit as usage_u29_6_0_,
        product0_.usage_value as usage_v30_6_0_,
        product0_.view_count as view_co31_6_0_,
        product0_.warranty_description as warrant32_6_0_,
        product0_.warranty_months as warrant33_6_0_,
        product0_.warranty_type as warrant34_6_0_ 
    from
        products product0_ 
    where
        product0_.id=?
2025-09-19 16:21:46 [http-nio-8080-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-19 16:22:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:22:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:22:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:22:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:23:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:23:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:23:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:23:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:23:45 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@63df7002: (connection has passed maxLifetime)
2025-09-19 16:23:45 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5b0e211d
2025-09-19 16:23:48 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@17a22dca: (connection has passed maxLifetime)
2025-09-19 16:23:48 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1a332b26
2025-09-19 16:23:48 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6dc52260: (connection has passed maxLifetime)
2025-09-19 16:23:48 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2be3f53c
2025-09-19 16:23:48 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@13fa8877: (connection has passed maxLifetime)
2025-09-19 16:23:48 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7a1cd469
2025-09-19 16:23:52 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@591be8aa: (connection has passed maxLifetime)
2025-09-19 16:23:52 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3683afbf
2025-09-19 16:23:55 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@36a6a352: (connection has passed maxLifetime)
2025-09-19 16:23:55 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7e52cad4
2025-09-19 16:23:56 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@52c7824c: (connection has passed maxLifetime)
2025-09-19 16:23:56 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@38913def
2025-09-19 16:24:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:24:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:24:09 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@57523a6e: (connection has passed maxLifetime)
2025-09-19 16:24:09 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6a7a6588
2025-09-19 16:24:19 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1cb7da9: (connection has passed maxLifetime)
2025-09-19 16:24:19 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@185d84b4
2025-09-19 16:24:25 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@32e87d03: (connection has passed maxLifetime)
2025-09-19 16:24:25 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4601f88d
2025-09-19 16:24:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:24:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:25:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:25:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:25:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:25:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:25:32 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2025-09-19 16:26:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:26:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:26:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:26:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:27:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:27:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:27:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:27:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:28:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:28:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:28:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:28:30 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:29:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:29:00 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:49:27 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=20m27s235ms).
2025-09-19 16:49:27 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:49:27 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-19 16:49:57 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-19 16:49:57 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 01:30:39 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=8h40m42s416ms).
2025-09-20 01:30:39 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 01:30:39 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 04:30:26 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2h59m46s511ms).
2025-09-20 04:30:26 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 04:30:26 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 06:45:13 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2h14m46s895ms).
2025-09-20 06:45:13 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 06:45:13 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 12:30:29 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5h45m16s502ms).
2025-09-20 12:30:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 12:30:29 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 12:31:01 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 12:31:01 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 12:31:31 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 12:31:31 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 12:32:01 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 12:32:01 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 12:32:31 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 12:32:31 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 12:33:01 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 12:33:01 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 12:33:31 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 12:33:31 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 12:34:01 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 12:34:01 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 12:34:31 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 12:34:31 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 12:35:01 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 12:35:01 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 12:35:31 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 12:35:31 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 12:36:01 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 12:36:01 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 12:36:31 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 12:36:31 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 12:37:01 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 12:37:01 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-20 12:37:31 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-20 12:37:31 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
