[INFO] Scanning for projects...
[INFO] 
[INFO] -----------------------< com.fliliy:second-hand >-----------------------
[INFO] Building second-hand 0.0.1-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] >>> spring-boot-maven-plugin:2.7.18:run (default-cli) > test-compile @ second-hand >>>
[WARNING] The artifact mysql:mysql-connector-java:jar:8.0.33 has been relocated to com.mysql:mysql-connector-j:jar:8.0.33
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ second-hand ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 5 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ second-hand ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ second-hand ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /Users/yit/Desktop/second-hand-platform2/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ second-hand ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] <<< spring-boot-maven-plugin:2.7.18:run (default-cli) < test-compile @ second-hand <<<
[INFO] 
[INFO] 
[INFO] --- spring-boot-maven-plugin:2.7.18:run (default-cli) @ second-hand ---
[INFO] Attaching agents: []

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::               (v2.7.18)

2025-09-23 15:34:20 [main] INFO  com.fliliy.secondhand.SecondHandApplication - Starting SecondHandApplication using Java 20 on bogon with PID 68688 (/Users/yit/Desktop/second-hand-platform2/target/classes started by yit in /Users/yit/Desktop/second-hand-platform2)
2025-09-23 15:34:20 [main] DEBUG com.fliliy.secondhand.SecondHandApplication - Running with Spring Boot v2.7.18, Spring v5.3.31
2025-09-23 15:34:20 [main] INFO  com.fliliy.secondhand.SecondHandApplication - No active profile set, falling back to 1 default profile: "default"
2025-09-23 15:34:21 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-09-23 15:34:21 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-09-23 15:34:21 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 137 ms. Found 12 JPA repository interfaces.
2025-09-23 15:34:21 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-09-23 15:34:21 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-09-23 15:34:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-23 15:34:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ChatMessageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-23 15:34:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ChatRoomRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-23 15:34:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ProductFavoriteRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-23 15:34:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ProductImageRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-23 15:34:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ProductRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-23 15:34:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.ProductTagRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-23 15:34:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.SmsRecordRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-23 15:34:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.TransactionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-23 15:34:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-23 15:34:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.UserTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-23 15:34:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.fliliy.secondhand.repository.VerificationCodeRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-09-23 15:34:21 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-09-23 15:34:22 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
2025-09-23 15:34:22 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-09-23 15:34:22 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.83]
2025-09-23 15:34:22 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/api/v1] - Initializing Spring embedded WebApplicationContext
2025-09-23 15:34:22 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1311 ms
2025-09-23 15:34:22 [main] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - Driver class com.mysql.cj.jdbc.Driver found in Thread context class loader jdk.internal.loader.ClassLoaders$AppClassLoader@7e32c033
2025-09-23 15:34:22 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-09-23 15:34:22 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 5.6.15.Final
2025-09-23 15:34:22 [main] INFO  org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - HikariPool-1 - configuration:
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - allowPoolSuspension................................false
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - autoCommit................................true
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - catalog................................none
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionInitSql................................none
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTestQuery................................none
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - connectionTimeout................................30000
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSource................................none
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceClassName................................none
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceJNDI................................none
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - dataSourceProperties................................{password=<masked>}
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - driverClassName................................"com.mysql.cj.jdbc.Driver"
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - exceptionOverrideClassName................................none
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckProperties................................{}
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - healthCheckRegistry................................none
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - idleTimeout................................600000
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - initializationFailTimeout................................1
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - isolateInternalQueries................................false
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - jdbcUrl................................jdbc:mysql://localhost:3306/fliliy_db?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - keepaliveTime................................0
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - leakDetectionThreshold................................0
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - maxLifetime................................1800000
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - maximumPoolSize................................10
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricRegistry................................none
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - metricsTrackerFactory................................none
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - minimumIdle................................10
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - password................................<masked>
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - poolName................................"HikariPool-1"
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - readOnly................................false
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - registerMbeans................................false
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - scheduledExecutor................................none
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - schema................................none
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - threadFactory................................internal
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - transactionIsolation................................default
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - username................................"root"
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.HikariConfig - validationTimeout................................5000
2025-09-23 15:34:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-09-23 15:34:22 [main] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4c063cb9
2025-09-23 15:34:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-09-23 15:34:22 [main] INFO  org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL8Dialect
2025-09-23 15:34:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
2025-09-23 15:34:22 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@77c4b93f
2025-09-23 15:34:22 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@36f9b304
2025-09-23 15:34:22 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7850351
2025-09-23 15:34:22 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@56d64c4b
2025-09-23 15:34:22 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7e97db1e
2025-09-23 15:34:22 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5298f63c
2025-09-23 15:34:22 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7df0d250
2025-09-23 15:34:22 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1cf52e47
2025-09-23 15:34:22 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@275d9678
2025-09-23 15:34:22 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:34:23 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-09-23 15:34:23 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-09-23 15:34:25 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 5d9e0e8f-d9d8-4234-8a2d-2f33f35f0dab

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-09-23 15:34:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/auth/**']
2025-09-23 15:34:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/health']
2025-09-23 15:34:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/h2-console/**']
2025-09-23 15:34:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/categories/**']
2025-09-23 15:34:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/products']
2025-09-23 15:34:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/products/*']
2025-09-23 15:34:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [permitAll] for Ant [pattern='/files/**']
2025-09-23 15:34:25 [main] DEBUG o.s.s.w.a.e.ExpressionBasedFilterInvocationSecurityMetadataSource - Adding web access control expression [authenticated] for any request
2025-09-23 15:34:25 [main] INFO  o.s.security.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@72bef795, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1f4d9c7f, org.springframework.security.web.context.SecurityContextPersistenceFilter@63661fc7, org.springframework.security.web.header.HeaderWriterFilter@1a16583d, org.springframework.web.filter.CorsFilter@6dcb4f30, org.springframework.security.web.authentication.logout.LogoutFilter@3ad5f99, com.fliliy.secondhand.config.JwtAuthenticationFilter@6870c3c2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@19412eef, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@542b27af, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@77f66138, org.springframework.security.web.session.SessionManagementFilter@34d644b5, org.springframework.security.web.access.ExceptionTranslationFilter@6d028c7e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@15b882a0]
2025-09-23 15:34:25 [main] INFO  o.s.b.a.web.servlet.WelcomePageHandlerMapping - Adding welcome page: class path resource [static/index.html]
2025-09-23 15:34:25 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path '/api/v1'
2025-09-23 15:34:25 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Starting...
2025-09-23 15:34:25 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@6fb514db]]
2025-09-23 15:34:25 [main] INFO  o.s.m.simp.broker.SimpleBrokerMessageHandler - Started.
2025-09-23 15:34:25 [main] INFO  com.fliliy.secondhand.SecondHandApplication - Started SecondHandApplication in 5.163 seconds (JVM running for 5.427)
2025-09-23 15:34:44 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/api/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-23 15:34:44 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-09-23 15:34:44 [http-nio-8080-exec-1] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-09-23 15:34:44 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /health
2025-09-23 15:34:44 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-23 15:34:44 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-23 15:34:44 [http-nio-8080-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /health] with attributes [permitAll]
2025-09-23 15:34:44 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /health
2025-09-23 15:34:44 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-23 15:34:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:34:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:35:17 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/login/password
2025-09-23 15:35:17 [http-nio-8080-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-23 15:35:17 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-23 15:35:17 [http-nio-8080-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/login/password] with attributes [permitAll]
2025-09-23 15:35:17 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/login/password
Hibernate: 
    select
        user0_.id as id1_10_,
        user0_.avatar as avatar2_10_,
        user0_.bio as bio3_10_,
        user0_.birthday as birthday4_10_,
        user0_.created_at as created_5_10_,
        user0_.deleted_at as deleted_6_10_,
        user0_.email as email7_10_,
        user0_.gender as gender8_10_,
        user0_.last_login_at as last_log9_10_,
        user0_.last_login_ip as last_lo10_10_,
        user0_.location as locatio11_10_,
        user0_.login_attempts as login_a12_10_,
        user0_.mobile as mobile13_10_,
        user0_.password_hash as passwor14_10_,
        user0_.salt as salt15_10_,
        user0_.status as status16_10_,
        user0_.updated_at as updated17_10_,
        user0_.username as usernam18_10_,
        user0_.verified as verifie19_10_ 
    from
        users user0_ 
    where
        (
            user0_.deleted_at IS NULL
        ) 
        and user0_.mobile=?
Hibernate: 
    update
        users 
    set
        last_login_at=?,
        last_login_ip=?,
        login_attempts=0 
    where
        id=?
Hibernate: 
    insert 
    into
        user_tokens
        (created_at, device_id, device_info, device_type, expires_at, ip_address, last_used_at, refresh_token, revoked, user_agent, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-23 15:35:18 [http-nio-8080-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-23 15:35:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:35:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:35:25 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2025-09-23 15:35:32 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /auth/login/password
2025-09-23 15:35:32 [http-nio-8080-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-23 15:35:32 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-23 15:35:32 [http-nio-8080-exec-3] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /auth/login/password] with attributes [permitAll]
2025-09-23 15:35:32 [http-nio-8080-exec-3] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /auth/login/password
Hibernate: 
    select
        user0_.id as id1_10_,
        user0_.avatar as avatar2_10_,
        user0_.bio as bio3_10_,
        user0_.birthday as birthday4_10_,
        user0_.created_at as created_5_10_,
        user0_.deleted_at as deleted_6_10_,
        user0_.email as email7_10_,
        user0_.gender as gender8_10_,
        user0_.last_login_at as last_log9_10_,
        user0_.last_login_ip as last_lo10_10_,
        user0_.location as locatio11_10_,
        user0_.login_attempts as login_a12_10_,
        user0_.mobile as mobile13_10_,
        user0_.password_hash as passwor14_10_,
        user0_.salt as salt15_10_,
        user0_.status as status16_10_,
        user0_.updated_at as updated17_10_,
        user0_.username as usernam18_10_,
        user0_.verified as verifie19_10_ 
    from
        users user0_ 
    where
        (
            user0_.deleted_at IS NULL
        ) 
        and user0_.mobile=?
Hibernate: 
    update
        users 
    set
        last_login_at=?,
        last_login_ip=?,
        login_attempts=0 
    where
        id=?
Hibernate: 
    insert 
    into
        user_tokens
        (created_at, device_id, device_info, device_type, expires_at, ip_address, last_used_at, refresh_token, revoked, user_agent, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-23 15:35:32 [http-nio-8080-exec-3] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-23 15:35:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:35:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:36:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:36:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:36:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:36:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:36:54 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /products
2025-09-23 15:36:54 [http-nio-8080-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-23 15:36:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-09-23 15:36:54 [http-nio-8080-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /products] with attributes [permitAll]
2025-09-23 15:36:54 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /products
2025-09-23 15:36:54 [http-nio-8080-exec-5] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@781331367 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9] read-only
Hibernate: 
    select
        product0_.id as id1_6_,
        product0_.category_id as category2_6_,
        product0_.chat_count as chat_cou3_6_,
        product0_.city as city4_6_,
        product0_.created_at as created_5_6_,
        product0_.deleted_at as deleted_6_6_,
        product0_.description as descript7_6_,
        product0_.detail_address as detail_a8_6_,
        product0_.district as district9_6_,
        product0_.favorite_count as favorit10_6_,
        product0_.has_warranty as has_war11_6_,
        product0_.inquiry_count as inquiry12_6_,
        product0_.is_promoted as is_prom13_6_,
        product0_.latitude as latitud14_6_,
        product0_.longitude as longitu15_6_,
        product0_.original_price as origina16_6_,
        product0_.price as price17_6_,
        product0_.product_condition as product18_6_,
        product0_.promoted_at as promote19_6_,
        product0_.promoted_expires_at as promote20_6_,
        product0_.province as provinc21_6_,
        product0_.published_at as publish22_6_,
        product0_.seller_id as seller_23_6_,
        product0_.sold_at as sold_at24_6_,
        product0_.status as status25_6_,
        product0_.title as title26_6_,
        product0_.updated_at as updated27_6_,
        product0_.usage_type as usage_t28_6_,
        product0_.usage_unit as usage_u29_6_,
        product0_.usage_value as usage_v30_6_,
        product0_.view_count as view_co31_6_,
        product0_.warranty_description as warrant32_6_,
        product0_.warranty_months as warrant33_6_,
        product0_.warranty_type as warrant34_6_ 
    from
        products product0_ 
    where
        (
            product0_.deleted_at is null
        ) 
        and product0_.status=? 
    order by
        product0_.published_at desc limit ?
Hibernate: 
    select
        count(product0_.id) as col_0_0_ 
    from
        products product0_ 
    where
        (
            product0_.deleted_at is null
        ) 
        and product0_.status=?
2025-09-23 15:36:54 [http-nio-8080-exec-5] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@781331367 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9]
Hibernate: 
    select
        productima0_.image_url as col_0_0_ 
    from
        product_images productima0_ 
    where
        productima0_.product_id=? 
        and productima0_.sort_order=0
Hibernate: 
    select
        productima0_.image_url as col_0_0_ 
    from
        product_images productima0_ 
    where
        productima0_.product_id=? 
        and productima0_.sort_order=0
Hibernate: 
    select
        productima0_.image_url as col_0_0_ 
    from
        product_images productima0_ 
    where
        productima0_.product_id=? 
        and productima0_.sort_order=0
Hibernate: 
    select
        productima0_.image_url as col_0_0_ 
    from
        product_images productima0_ 
    where
        productima0_.product_id=? 
        and productima0_.sort_order=0
2025-09-23 15:36:54 [http-nio-8080-exec-5] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1116618002 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9] read-only
Hibernate: 
    select
        user0_.id as id1_10_,
        user0_.avatar as avatar2_10_,
        user0_.bio as bio3_10_,
        user0_.birthday as birthday4_10_,
        user0_.created_at as created_5_10_,
        user0_.deleted_at as deleted_6_10_,
        user0_.email as email7_10_,
        user0_.gender as gender8_10_,
        user0_.last_login_at as last_log9_10_,
        user0_.last_login_ip as last_lo10_10_,
        user0_.location as locatio11_10_,
        user0_.login_attempts as login_a12_10_,
        user0_.mobile as mobile13_10_,
        user0_.password_hash as passwor14_10_,
        user0_.salt as salt15_10_,
        user0_.status as status16_10_,
        user0_.updated_at as updated17_10_,
        user0_.username as usernam18_10_,
        user0_.verified as verifie19_10_ 
    from
        users user0_ 
    where
        (
            user0_.deleted_at IS NULL
        ) 
        and (
            user0_.id in (
                ?
            )
        )
2025-09-23 15:36:54 [http-nio-8080-exec-5] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1116618002 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9]
Hibernate: 
    select
        producttag0_.tag_name as col_0_0_ 
    from
        product_tags producttag0_ 
    where
        producttag0_.product_id=?
Hibernate: 
    select
        producttag0_.tag_name as col_0_0_ 
    from
        product_tags producttag0_ 
    where
        producttag0_.product_id=?
Hibernate: 
    select
        producttag0_.tag_name as col_0_0_ 
    from
        product_tags producttag0_ 
    where
        producttag0_.product_id=?
Hibernate: 
    select
        producttag0_.tag_name as col_0_0_ 
    from
        product_tags producttag0_ 
    where
        producttag0_.product_id=?
2025-09-23 15:36:54 [http-nio-8080-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-23 15:37:17 [http-nio-8080-exec-6] INFO  org.apache.coyote.http11.Http11Processor - Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target [/api/v1/chats/product-discussion?productId=1969761981678358528&initialMessage=0xe40xbd0xa00xe50xa50xbd0xef0xbc0x8c0xe60x880x910xe50xaf0xb90xe80xbf0x990xe40xb80xaa0xe50x950x860xe50x930x810xe50xbe0x880xe60x840x9f0xe50x850xb40xe80xb60xa3 ]. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:482)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:263)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2025-09-23 15:37:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:37:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:37:46 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /chats/product-discussion
2025-09-23 15:37:46 [http-nio-8080-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-23 15:37:46 [http-nio-8080-exec-7] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1968947060988317696
2025-09-23 15:37:46 [http-nio-8080-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /chats/product-discussion] with attributes [authenticated]
2025-09-23 15:37:46 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /chats/product-discussion
2025-09-23 15:37:46 [http-nio-8080-exec-7] ERROR c.f.secondhand.exception.GlobalExceptionHandler - Unexpected exception: 
org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValueInternal(RequestParamMethodArgumentResolver.java:218)
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:193)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:179)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:146)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.fliliy.secondhand.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:59)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2025-09-23 15:37:46 [http-nio-8080-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-23 15:37:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:37:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:38:09 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /chats/product-discussion?productId=1969761981678358528&initialMessage=Hello
2025-09-23 15:38:09 [http-nio-8080-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-23 15:38:09 [http-nio-8080-exec-8] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1968947060988317696
2025-09-23 15:38:09 [http-nio-8080-exec-8] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /chats/product-discussion?productId=1969761981678358528&initialMessage=Hello] with attributes [authenticated]
2025-09-23 15:38:09 [http-nio-8080-exec-8] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /chats/product-discussion?productId=1969761981678358528&initialMessage=Hello
Hibernate: 
    select
        product0_.id as id1_6_0_,
        product0_.category_id as category2_6_0_,
        product0_.chat_count as chat_cou3_6_0_,
        product0_.city as city4_6_0_,
        product0_.created_at as created_5_6_0_,
        product0_.deleted_at as deleted_6_6_0_,
        product0_.description as descript7_6_0_,
        product0_.detail_address as detail_a8_6_0_,
        product0_.district as district9_6_0_,
        product0_.favorite_count as favorit10_6_0_,
        product0_.has_warranty as has_war11_6_0_,
        product0_.inquiry_count as inquiry12_6_0_,
        product0_.is_promoted as is_prom13_6_0_,
        product0_.latitude as latitud14_6_0_,
        product0_.longitude as longitu15_6_0_,
        product0_.original_price as origina16_6_0_,
        product0_.price as price17_6_0_,
        product0_.product_condition as product18_6_0_,
        product0_.promoted_at as promote19_6_0_,
        product0_.promoted_expires_at as promote20_6_0_,
        product0_.province as provinc21_6_0_,
        product0_.published_at as publish22_6_0_,
        product0_.seller_id as seller_23_6_0_,
        product0_.sold_at as sold_at24_6_0_,
        product0_.status as status25_6_0_,
        product0_.title as title26_6_0_,
        product0_.updated_at as updated27_6_0_,
        product0_.usage_type as usage_t28_6_0_,
        product0_.usage_unit as usage_u29_6_0_,
        product0_.usage_value as usage_v30_6_0_,
        product0_.view_count as view_co31_6_0_,
        product0_.warranty_description as warrant32_6_0_,
        product0_.warranty_months as warrant33_6_0_,
        product0_.warranty_type as warrant34_6_0_ 
    from
        products product0_ 
    where
        product0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        users user0_ 
    where
        (
            user0_.deleted_at IS NULL
        ) 
        and user0_.id=?
Hibernate: 
    select
        count(*) as col_0_0_ 
    from
        users user0_ 
    where
        (
            user0_.deleted_at IS NULL
        ) 
        and user0_.id=?
Hibernate: 
    select
        chatroom0_.id as id1_2_,
        chatroom0_.buyer_id as buyer_id2_2_,
        chatroom0_.buyer_muted as buyer_mu3_2_,
        chatroom0_.buyer_pinned as buyer_pi4_2_,
        chatroom0_.buyer_unread_count as buyer_un5_2_,
        chatroom0_.created_at as created_6_2_,
        chatroom0_.last_message_content as last_mes7_2_,
        chatroom0_.last_message_id as last_mes8_2_,
        chatroom0_.last_message_sender_id as last_mes9_2_,
        chatroom0_.last_message_time as last_me10_2_,
        chatroom0_.last_message_type as last_me11_2_,
        chatroom0_.seller_id as seller_12_2_,
        chatroom0_.seller_muted as seller_13_2_,
        chatroom0_.seller_pinned as seller_14_2_,
        chatroom0_.seller_unread_count as seller_15_2_,
        chatroom0_.status as status16_2_,
        chatroom0_.total_messages as total_m17_2_,
        chatroom0_.transaction_id as transac18_2_,
        chatroom0_.updated_at as updated19_2_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.buyer_id=? 
        and chatroom0_.seller_id=? 
        or chatroom0_.buyer_id=? 
        and chatroom0_.seller_id=?
2025-09-23 15:38:09 [http-nio-8080-exec-8] INFO  com.fliliy.secondhand.service.ChatService - 创建新聊天室 - 用户1: 1968947060988317696, 用户2: 1959106057909440512, 聊天室ID: 1970392226659962880, 标准化为 buyer: 1959106057909440512, seller: 1968947060988317696
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_muted as buyer_mu3_2_0_,
        chatroom0_.buyer_pinned as buyer_pi4_2_0_,
        chatroom0_.buyer_unread_count as buyer_un5_2_0_,
        chatroom0_.created_at as created_6_2_0_,
        chatroom0_.last_message_content as last_mes7_2_0_,
        chatroom0_.last_message_id as last_mes8_2_0_,
        chatroom0_.last_message_sender_id as last_mes9_2_0_,
        chatroom0_.last_message_time as last_me10_2_0_,
        chatroom0_.last_message_type as last_me11_2_0_,
        chatroom0_.seller_id as seller_12_2_0_,
        chatroom0_.seller_muted as seller_13_2_0_,
        chatroom0_.seller_pinned as seller_14_2_0_,
        chatroom0_.seller_unread_count as seller_15_2_0_,
        chatroom0_.status as status16_2_0_,
        chatroom0_.total_messages as total_m17_2_0_,
        chatroom0_.transaction_id as transac18_2_0_,
        chatroom0_.updated_at as updated19_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
Hibernate: 
    select
        count(chatmessag0_.id) as col_0_0_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.chat_room_id=? 
        and chatmessag0_.related_product_id=?
Hibernate: 
    select
        chatmessag0_.id as id1_1_0_,
        chatmessag0_.chat_room_id as chat_roo2_1_0_,
        chatmessag0_.content as content3_1_0_,
        chatmessag0_.delivered_at as delivere4_1_0_,
        chatmessag0_.duration as duration5_1_0_,
        chatmessag0_.file_size as file_siz6_1_0_,
        chatmessag0_.file_url as file_url7_1_0_,
        chatmessag0_.image_height as image_he8_1_0_,
        chatmessag0_.image_width as image_wi9_1_0_,
        chatmessag0_.is_recalled as is_reca10_1_0_,
        chatmessag0_.message_type as message11_1_0_,
        chatmessag0_.product_snapshot as product12_1_0_,
        chatmessag0_.read_at as read_at13_1_0_,
        chatmessag0_.recalled_at as recalle14_1_0_,
        chatmessag0_.related_product_id as related15_1_0_,
        chatmessag0_.sender_id as sender_16_1_0_,
        chatmessag0_.sent_at as sent_at17_1_0_,
        chatmessag0_.status as status18_1_0_,
        chatmessag0_.system_data as system_19_1_0_,
        chatmessag0_.system_type as system_20_1_0_,
        chatmessag0_.thumbnail_url as thumbna21_1_0_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.id=?
Hibernate: 
    insert 
    into
        chat_rooms
        (buyer_id, buyer_muted, buyer_pinned, buyer_unread_count, created_at, last_message_content, last_message_id, last_message_sender_id, last_message_time, last_message_type, seller_id, seller_muted, seller_pinned, seller_unread_count, status, total_messages, transaction_id, updated_at, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        chat_messages
        (chat_room_id, content, delivered_at, duration, file_size, file_url, image_height, image_width, is_recalled, message_type, product_snapshot, read_at, recalled_at, related_product_id, sender_id, sent_at, status, system_data, system_type, thumbnail_url, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    update
        chat_rooms 
    set
        last_message_id=?,
        last_message_content=?,
        last_message_type=?,
        last_message_time=CURRENT_TIMESTAMP,
        last_message_sender_id=?,
        updated_at=CURRENT_TIMESTAMP 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        total_messages=total_messages+1 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        buyer_unread_count=buyer_unread_count+1 
    where
        id=? 
        and buyer_id<>?
Hibernate: 
    update
        chat_rooms 
    set
        seller_unread_count=seller_unread_count+1 
    where
        id=? 
        and seller_id<>?
2025-09-23 15:38:09 [http-nio-8080-exec-8] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1137157307 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9] read-only
Hibernate: 
    SELECT
        * 
    FROM
        chat_rooms 
    WHERE
        buyer_id = ? 
        OR seller_id = ? 
    ORDER BY
        updated_at DESC
2025-09-23 15:38:09 [http-nio-8080-exec-8] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1137157307 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9]
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_muted as buyer_mu3_2_0_,
        chatroom0_.buyer_pinned as buyer_pi4_2_0_,
        chatroom0_.buyer_unread_count as buyer_un5_2_0_,
        chatroom0_.created_at as created_6_2_0_,
        chatroom0_.last_message_content as last_mes7_2_0_,
        chatroom0_.last_message_id as last_mes8_2_0_,
        chatroom0_.last_message_sender_id as last_mes9_2_0_,
        chatroom0_.last_message_time as last_me10_2_0_,
        chatroom0_.last_message_type as last_me11_2_0_,
        chatroom0_.seller_id as seller_12_2_0_,
        chatroom0_.seller_muted as seller_13_2_0_,
        chatroom0_.seller_pinned as seller_14_2_0_,
        chatroom0_.seller_unread_count as seller_15_2_0_,
        chatroom0_.status as status16_2_0_,
        chatroom0_.total_messages as total_m17_2_0_,
        chatroom0_.transaction_id as transac18_2_0_,
        chatroom0_.updated_at as updated19_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
Hibernate: 
    select
        chatmessag0_.id as id1_1_0_,
        chatmessag0_.chat_room_id as chat_roo2_1_0_,
        chatmessag0_.content as content3_1_0_,
        chatmessag0_.delivered_at as delivere4_1_0_,
        chatmessag0_.duration as duration5_1_0_,
        chatmessag0_.file_size as file_siz6_1_0_,
        chatmessag0_.file_url as file_url7_1_0_,
        chatmessag0_.image_height as image_he8_1_0_,
        chatmessag0_.image_width as image_wi9_1_0_,
        chatmessag0_.is_recalled as is_reca10_1_0_,
        chatmessag0_.message_type as message11_1_0_,
        chatmessag0_.product_snapshot as product12_1_0_,
        chatmessag0_.read_at as read_at13_1_0_,
        chatmessag0_.recalled_at as recalle14_1_0_,
        chatmessag0_.related_product_id as related15_1_0_,
        chatmessag0_.sender_id as sender_16_1_0_,
        chatmessag0_.sent_at as sent_at17_1_0_,
        chatmessag0_.status as status18_1_0_,
        chatmessag0_.system_data as system_19_1_0_,
        chatmessag0_.system_type as system_20_1_0_,
        chatmessag0_.thumbnail_url as thumbna21_1_0_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.id=?
Hibernate: 
    update
        chat_rooms 
    set
        last_message_id=?,
        last_message_content=?,
        last_message_type=?,
        last_message_time=CURRENT_TIMESTAMP,
        last_message_sender_id=?,
        updated_at=CURRENT_TIMESTAMP 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        total_messages=total_messages+1 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        buyer_unread_count=buyer_unread_count+1 
    where
        id=? 
        and buyer_id<>?
Hibernate: 
    update
        chat_rooms 
    set
        seller_unread_count=seller_unread_count+1 
    where
        id=? 
        and seller_id<>?
2025-09-23 15:38:09 [http-nio-8080-exec-8] INFO  c.f.secondhand.service.WebSocketMessageService - Broadcasted message to chatRoom 1970392226659962880: messageId=1970392226966147072
2025-09-23 15:38:10 [http-nio-8080-exec-8] INFO  c.f.secondhand.service.WebSocketMessageService - Sent private message to user 1959106057909440512
2025-09-23 15:38:10 [http-nio-8080-exec-8] INFO  com.fliliy.secondhand.service.ChatService - 发送文本消息 - 聊天室ID: 1970392226659962880, 发送者ID: 1968947060988317696, 内容: Hello
Hibernate: 
    insert 
    into
        chat_messages
        (chat_room_id, content, delivered_at, duration, file_size, file_url, image_height, image_width, is_recalled, message_type, product_snapshot, read_at, recalled_at, related_product_id, sender_id, sent_at, status, system_data, system_type, thumbnail_url, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-23 15:38:10 [http-nio-8080-exec-8] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@688680533 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9] read-only
Hibernate: 
    select
        user0_.id as id1_10_0_,
        user0_.avatar as avatar2_10_0_,
        user0_.bio as bio3_10_0_,
        user0_.birthday as birthday4_10_0_,
        user0_.created_at as created_5_10_0_,
        user0_.deleted_at as deleted_6_10_0_,
        user0_.email as email7_10_0_,
        user0_.gender as gender8_10_0_,
        user0_.last_login_at as last_log9_10_0_,
        user0_.last_login_ip as last_lo10_10_0_,
        user0_.location as locatio11_10_0_,
        user0_.login_attempts as login_a12_10_0_,
        user0_.mobile as mobile13_10_0_,
        user0_.password_hash as passwor14_10_0_,
        user0_.salt as salt15_10_0_,
        user0_.status as status16_10_0_,
        user0_.updated_at as updated17_10_0_,
        user0_.username as usernam18_10_0_,
        user0_.verified as verifie19_10_0_ 
    from
        users user0_ 
    where
        user0_.id=? 
        and (
            user0_.deleted_at IS NULL
        )
2025-09-23 15:38:10 [http-nio-8080-exec-8] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@688680533 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9]
2025-09-23 15:38:10 [http-nio-8080-exec-8] INFO  com.fliliy.secondhand.controller.ChatController - 开始商品讨论成功 - 买家ID: 1968947060988317696, 商品ID: 1969761981678358528, 聊天室ID: 1970392226659962880
2025-09-23 15:38:10 [http-nio-8080-exec-8] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-23 15:38:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:38:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:38:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:38:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:38:53 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /chats
2025-09-23 15:38:53 [http-nio-8080-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-23 15:38:53 [http-nio-8080-exec-9] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1968947060988317696
2025-09-23 15:38:53 [http-nio-8080-exec-9] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /chats] with attributes [authenticated]
2025-09-23 15:38:53 [http-nio-8080-exec-9] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /chats
2025-09-23 15:38:53 [http-nio-8080-exec-9] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1728375661 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9] read-only
Hibernate: 
    SELECT
        * 
    FROM
        chat_rooms 
    WHERE
        buyer_id = ? 
        OR seller_id = ? 
    ORDER BY
        updated_at DESC limit ?
2025-09-23 15:38:53 [http-nio-8080-exec-9] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1728375661 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9]
2025-09-23 15:38:53 [http-nio-8080-exec-9] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@2033616855 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9] read-only
Hibernate: 
    select
        user0_.id as id1_10_0_,
        user0_.avatar as avatar2_10_0_,
        user0_.bio as bio3_10_0_,
        user0_.birthday as birthday4_10_0_,
        user0_.created_at as created_5_10_0_,
        user0_.deleted_at as deleted_6_10_0_,
        user0_.email as email7_10_0_,
        user0_.gender as gender8_10_0_,
        user0_.last_login_at as last_log9_10_0_,
        user0_.last_login_ip as last_lo10_10_0_,
        user0_.location as locatio11_10_0_,
        user0_.login_attempts as login_a12_10_0_,
        user0_.mobile as mobile13_10_0_,
        user0_.password_hash as passwor14_10_0_,
        user0_.salt as salt15_10_0_,
        user0_.status as status16_10_0_,
        user0_.updated_at as updated17_10_0_,
        user0_.username as usernam18_10_0_,
        user0_.verified as verifie19_10_0_ 
    from
        users user0_ 
    where
        user0_.id=? 
        and (
            user0_.deleted_at IS NULL
        )
2025-09-23 15:38:53 [http-nio-8080-exec-9] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@2033616855 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9]
2025-09-23 15:38:53 [http-nio-8080-exec-9] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1898953482 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9] read-only
Hibernate: 
    select
        user0_.id as id1_10_0_,
        user0_.avatar as avatar2_10_0_,
        user0_.bio as bio3_10_0_,
        user0_.birthday as birthday4_10_0_,
        user0_.created_at as created_5_10_0_,
        user0_.deleted_at as deleted_6_10_0_,
        user0_.email as email7_10_0_,
        user0_.gender as gender8_10_0_,
        user0_.last_login_at as last_log9_10_0_,
        user0_.last_login_ip as last_lo10_10_0_,
        user0_.location as locatio11_10_0_,
        user0_.login_attempts as login_a12_10_0_,
        user0_.mobile as mobile13_10_0_,
        user0_.password_hash as passwor14_10_0_,
        user0_.salt as salt15_10_0_,
        user0_.status as status16_10_0_,
        user0_.updated_at as updated17_10_0_,
        user0_.username as usernam18_10_0_,
        user0_.verified as verifie19_10_0_ 
    from
        users user0_ 
    where
        user0_.id=? 
        and (
            user0_.deleted_at IS NULL
        )
2025-09-23 15:38:53 [http-nio-8080-exec-9] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1898953482 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9]
2025-09-23 15:38:53 [http-nio-8080-exec-9] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@972978055 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9] read-only
Hibernate: 
    select
        user0_.id as id1_10_0_,
        user0_.avatar as avatar2_10_0_,
        user0_.bio as bio3_10_0_,
        user0_.birthday as birthday4_10_0_,
        user0_.created_at as created_5_10_0_,
        user0_.deleted_at as deleted_6_10_0_,
        user0_.email as email7_10_0_,
        user0_.gender as gender8_10_0_,
        user0_.last_login_at as last_log9_10_0_,
        user0_.last_login_ip as last_lo10_10_0_,
        user0_.location as locatio11_10_0_,
        user0_.login_attempts as login_a12_10_0_,
        user0_.mobile as mobile13_10_0_,
        user0_.password_hash as passwor14_10_0_,
        user0_.salt as salt15_10_0_,
        user0_.status as status16_10_0_,
        user0_.updated_at as updated17_10_0_,
        user0_.username as usernam18_10_0_,
        user0_.verified as verifie19_10_0_ 
    from
        users user0_ 
    where
        user0_.id=? 
        and (
            user0_.deleted_at IS NULL
        )
2025-09-23 15:38:53 [http-nio-8080-exec-9] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@972978055 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9]
2025-09-23 15:38:53 [http-nio-8080-exec-9] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-23 15:39:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:39:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:39:38 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /chats/1970392226659963000/messages
2025-09-23 15:39:38 [http-nio-8080-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-23 15:39:38 [http-nio-8080-exec-10] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1968947060988317696
2025-09-23 15:39:38 [http-nio-8080-exec-10] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /chats/1970392226659963000/messages] with attributes [authenticated]
2025-09-23 15:39:38 [http-nio-8080-exec-10] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /chats/1970392226659963000/messages
2025-09-23 15:39:38 [http-nio-8080-exec-10] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1691588494 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9] read-only
Hibernate: 
    SELECT
        CASE 
            WHEN COUNT(*) > 0 THEN 1 
            ELSE 0 
        END 
    FROM
        chat_rooms 
    WHERE
        id = ? 
        AND (
            buyer_id = ? 
            OR seller_id = ?
        )
2025-09-23 15:39:38 [http-nio-8080-exec-10] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1691588494 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9]
2025-09-23 15:39:38 [http-nio-8080-exec-10] ERROR com.fliliy.secondhand.controller.ChatController - 获取聊天记录失败
java.lang.RuntimeException: 无权限访问此聊天室
	at com.fliliy.secondhand.service.ChatService.getChatMessages(ChatService.java:221)
	at com.fliliy.secondhand.service.ChatService$$FastClassBySpringCGLIB$$7daaad61.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.fliliy.secondhand.service.ChatService$$EnhancerBySpringCGLIB$$5f4253a1.getChatMessages(<generated>)
	at com.fliliy.secondhand.controller.ChatController.getChatMessages(ChatController.java:148)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:529)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.fliliy.secondhand.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:59)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2025-09-23 15:39:38 [http-nio-8080-exec-10] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-23 15:39:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:39:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Securing GET /chats/1970392226659962880/messages
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1968947060988317696
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [GET /chats/1970392226659962880/messages] with attributes [authenticated]
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG org.springframework.security.web.FilterChainProxy - Secured GET /chats/1970392226659962880/messages
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1078252123 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9] read-only
Hibernate: 
    SELECT
        CASE 
            WHEN COUNT(*) > 0 THEN 1 
            ELSE 0 
        END 
    FROM
        chat_rooms 
    WHERE
        id = ? 
        AND (
            buyer_id = ? 
            OR seller_id = ?
        )
Hibernate: 
    select
        chatmessag0_.id as id1_1_,
        chatmessag0_.chat_room_id as chat_roo2_1_,
        chatmessag0_.content as content3_1_,
        chatmessag0_.delivered_at as delivere4_1_,
        chatmessag0_.duration as duration5_1_,
        chatmessag0_.file_size as file_siz6_1_,
        chatmessag0_.file_url as file_url7_1_,
        chatmessag0_.image_height as image_he8_1_,
        chatmessag0_.image_width as image_wi9_1_,
        chatmessag0_.is_recalled as is_reca10_1_,
        chatmessag0_.message_type as message11_1_,
        chatmessag0_.product_snapshot as product12_1_,
        chatmessag0_.read_at as read_at13_1_,
        chatmessag0_.recalled_at as recalle14_1_,
        chatmessag0_.related_product_id as related15_1_,
        chatmessag0_.sender_id as sender_16_1_,
        chatmessag0_.sent_at as sent_at17_1_,
        chatmessag0_.status as status18_1_,
        chatmessag0_.system_data as system_19_1_,
        chatmessag0_.system_type as system_20_1_,
        chatmessag0_.thumbnail_url as thumbna21_1_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.chat_room_id=? 
    order by
        chatmessag0_.sent_at desc limit ?
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1078252123 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9]
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1133098219 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9] read-only
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_muted as buyer_mu3_2_0_,
        chatroom0_.buyer_pinned as buyer_pi4_2_0_,
        chatroom0_.buyer_unread_count as buyer_un5_2_0_,
        chatroom0_.created_at as created_6_2_0_,
        chatroom0_.last_message_content as last_mes7_2_0_,
        chatroom0_.last_message_id as last_mes8_2_0_,
        chatroom0_.last_message_sender_id as last_mes9_2_0_,
        chatroom0_.last_message_time as last_me10_2_0_,
        chatroom0_.last_message_type as last_me11_2_0_,
        chatroom0_.seller_id as seller_12_2_0_,
        chatroom0_.seller_muted as seller_13_2_0_,
        chatroom0_.seller_pinned as seller_14_2_0_,
        chatroom0_.seller_unread_count as seller_15_2_0_,
        chatroom0_.status as status16_2_0_,
        chatroom0_.total_messages as total_m17_2_0_,
        chatroom0_.transaction_id as transac18_2_0_,
        chatroom0_.updated_at as updated19_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1133098219 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9]
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@486282154 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9] read-only
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_muted as buyer_mu3_2_0_,
        chatroom0_.buyer_pinned as buyer_pi4_2_0_,
        chatroom0_.buyer_unread_count as buyer_un5_2_0_,
        chatroom0_.created_at as created_6_2_0_,
        chatroom0_.last_message_content as last_mes7_2_0_,
        chatroom0_.last_message_id as last_mes8_2_0_,
        chatroom0_.last_message_sender_id as last_mes9_2_0_,
        chatroom0_.last_message_time as last_me10_2_0_,
        chatroom0_.last_message_type as last_me11_2_0_,
        chatroom0_.seller_id as seller_12_2_0_,
        chatroom0_.seller_muted as seller_13_2_0_,
        chatroom0_.seller_pinned as seller_14_2_0_,
        chatroom0_.seller_unread_count as seller_15_2_0_,
        chatroom0_.status as status16_2_0_,
        chatroom0_.total_messages as total_m17_2_0_,
        chatroom0_.transaction_id as transac18_2_0_,
        chatroom0_.updated_at as updated19_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
Hibernate: 
    select
        user0_.id as id1_10_0_,
        user0_.avatar as avatar2_10_0_,
        user0_.bio as bio3_10_0_,
        user0_.birthday as birthday4_10_0_,
        user0_.created_at as created_5_10_0_,
        user0_.deleted_at as deleted_6_10_0_,
        user0_.email as email7_10_0_,
        user0_.gender as gender8_10_0_,
        user0_.last_login_at as last_log9_10_0_,
        user0_.last_login_ip as last_lo10_10_0_,
        user0_.location as locatio11_10_0_,
        user0_.login_attempts as login_a12_10_0_,
        user0_.mobile as mobile13_10_0_,
        user0_.password_hash as passwor14_10_0_,
        user0_.salt as salt15_10_0_,
        user0_.status as status16_10_0_,
        user0_.updated_at as updated17_10_0_,
        user0_.username as usernam18_10_0_,
        user0_.verified as verifie19_10_0_ 
    from
        users user0_ 
    where
        user0_.id=? 
        and (
            user0_.deleted_at IS NULL
        )
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@486282154 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9]
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1599004206 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9] read-only
Hibernate: 
    SELECT
        CASE 
            WHEN COUNT(*) > 0 THEN 1 
            ELSE 0 
        END 
    FROM
        chat_rooms 
    WHERE
        id = ? 
        AND (
            buyer_id = ? 
            OR seller_id = ?
        )
Hibernate: 
    select
        distinct chatmessag0_.related_product_id as col_0_0_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.chat_room_id=? 
        and (
            chatmessag0_.related_product_id is not null
        ) 
    order by
        chatmessag0_.related_product_id
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1599004206 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9]
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1326439364 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9] read-only
Hibernate: 
    select
        user0_.id as id1_10_0_,
        user0_.avatar as avatar2_10_0_,
        user0_.bio as bio3_10_0_,
        user0_.birthday as birthday4_10_0_,
        user0_.created_at as created_5_10_0_,
        user0_.deleted_at as deleted_6_10_0_,
        user0_.email as email7_10_0_,
        user0_.gender as gender8_10_0_,
        user0_.last_login_at as last_log9_10_0_,
        user0_.last_login_ip as last_lo10_10_0_,
        user0_.location as locatio11_10_0_,
        user0_.login_attempts as login_a12_10_0_,
        user0_.mobile as mobile13_10_0_,
        user0_.password_hash as passwor14_10_0_,
        user0_.salt as salt15_10_0_,
        user0_.status as status16_10_0_,
        user0_.updated_at as updated17_10_0_,
        user0_.username as usernam18_10_0_,
        user0_.verified as verifie19_10_0_ 
    from
        users user0_ 
    where
        user0_.id=? 
        and (
            user0_.deleted_at IS NULL
        )
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1326439364 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9]
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@1517499079 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9] read-only
Hibernate: 
    select
        user0_.id as id1_10_0_,
        user0_.avatar as avatar2_10_0_,
        user0_.bio as bio3_10_0_,
        user0_.birthday as birthday4_10_0_,
        user0_.created_at as created_5_10_0_,
        user0_.deleted_at as deleted_6_10_0_,
        user0_.email as email7_10_0_,
        user0_.gender as gender8_10_0_,
        user0_.last_login_at as last_log9_10_0_,
        user0_.last_login_ip as last_lo10_10_0_,
        user0_.location as locatio11_10_0_,
        user0_.login_attempts as login_a12_10_0_,
        user0_.mobile as mobile13_10_0_,
        user0_.password_hash as passwor14_10_0_,
        user0_.salt as salt15_10_0_,
        user0_.status as status16_10_0_,
        user0_.updated_at as updated17_10_0_,
        user0_.username as usernam18_10_0_,
        user0_.verified as verifie19_10_0_ 
    from
        users user0_ 
    where
        user0_.id=? 
        and (
            user0_.deleted_at IS NULL
        )
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@1517499079 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9]
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Setting JDBC Connection [HikariProxyConnection@37719921 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9] read-only
Hibernate: 
    select
        product0_.id as id1_6_,
        product0_.category_id as category2_6_,
        product0_.chat_count as chat_cou3_6_,
        product0_.city as city4_6_,
        product0_.created_at as created_5_6_,
        product0_.deleted_at as deleted_6_6_,
        product0_.description as descript7_6_,
        product0_.detail_address as detail_a8_6_,
        product0_.district as district9_6_,
        product0_.favorite_count as favorit10_6_,
        product0_.has_warranty as has_war11_6_,
        product0_.inquiry_count as inquiry12_6_,
        product0_.is_promoted as is_prom13_6_,
        product0_.latitude as latitud14_6_,
        product0_.longitude as longitu15_6_,
        product0_.original_price as origina16_6_,
        product0_.price as price17_6_,
        product0_.product_condition as product18_6_,
        product0_.promoted_at as promote19_6_,
        product0_.promoted_expires_at as promote20_6_,
        product0_.province as provinc21_6_,
        product0_.published_at as publish22_6_,
        product0_.seller_id as seller_23_6_,
        product0_.sold_at as sold_at24_6_,
        product0_.status as status25_6_,
        product0_.title as title26_6_,
        product0_.updated_at as updated27_6_,
        product0_.usage_type as usage_t28_6_,
        product0_.usage_unit as usage_u29_6_,
        product0_.usage_value as usage_v30_6_,
        product0_.view_count as view_co31_6_,
        product0_.warranty_description as warrant32_6_,
        product0_.warranty_months as warrant33_6_,
        product0_.warranty_type as warrant34_6_ 
    from
        products product0_ 
    where
        product0_.id=? 
        and (
            product0_.deleted_at is null
        )
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.springframework.jdbc.datasource.DataSourceUtils - Resetting read-only flag of JDBC Connection [HikariProxyConnection@37719921 wrapping com.mysql.cj.jdbc.ConnectionImpl@4c063cb9]
Hibernate: 
    SELECT
        CASE 
            WHEN COUNT(*) > 0 THEN 1 
            ELSE 0 
        END 
    FROM
        chat_rooms 
    WHERE
        id = ? 
        AND (
            buyer_id = ? 
            OR seller_id = ?
        )
Hibernate: 
    update
        chat_messages 
    set
        status='read',
        read_at=CURRENT_TIMESTAMP 
    where
        chat_room_id=? 
        and sender_id<>? 
        and status<>'read'
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_muted as buyer_mu3_2_0_,
        chatroom0_.buyer_pinned as buyer_pi4_2_0_,
        chatroom0_.buyer_unread_count as buyer_un5_2_0_,
        chatroom0_.created_at as created_6_2_0_,
        chatroom0_.last_message_content as last_mes7_2_0_,
        chatroom0_.last_message_id as last_mes8_2_0_,
        chatroom0_.last_message_sender_id as last_mes9_2_0_,
        chatroom0_.last_message_time as last_me10_2_0_,
        chatroom0_.last_message_type as last_me11_2_0_,
        chatroom0_.seller_id as seller_12_2_0_,
        chatroom0_.seller_muted as seller_13_2_0_,
        chatroom0_.seller_pinned as seller_14_2_0_,
        chatroom0_.seller_unread_count as seller_15_2_0_,
        chatroom0_.status as status16_2_0_,
        chatroom0_.total_messages as total_m17_2_0_,
        chatroom0_.transaction_id as transac18_2_0_,
        chatroom0_.updated_at as updated19_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
2025-09-23 15:40:02 [http-nio-8080-exec-1] INFO  com.fliliy.secondhand.service.ChatService - 标记消息为已读 - 聊天室ID: 1970392226659962880, 用户ID: 1968947060988317696
2025-09-23 15:40:02 [http-nio-8080-exec-1] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-23 15:40:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:40:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:40:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:40:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:41:12 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /chats/1970392226659962880/messages
2025-09-23 15:41:12 [http-nio-8080-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-23 15:41:12 [http-nio-8080-exec-2] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1968947060988317696
2025-09-23 15:41:12 [http-nio-8080-exec-2] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /chats/1970392226659962880/messages] with attributes [authenticated]
2025-09-23 15:41:12 [http-nio-8080-exec-2] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /chats/1970392226659962880/messages
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_muted as buyer_mu3_2_0_,
        chatroom0_.buyer_pinned as buyer_pi4_2_0_,
        chatroom0_.buyer_unread_count as buyer_un5_2_0_,
        chatroom0_.created_at as created_6_2_0_,
        chatroom0_.last_message_content as last_mes7_2_0_,
        chatroom0_.last_message_id as last_mes8_2_0_,
        chatroom0_.last_message_sender_id as last_mes9_2_0_,
        chatroom0_.last_message_time as last_me10_2_0_,
        chatroom0_.last_message_type as last_me11_2_0_,
        chatroom0_.seller_id as seller_12_2_0_,
        chatroom0_.seller_muted as seller_13_2_0_,
        chatroom0_.seller_pinned as seller_14_2_0_,
        chatroom0_.seller_unread_count as seller_15_2_0_,
        chatroom0_.status as status16_2_0_,
        chatroom0_.total_messages as total_m17_2_0_,
        chatroom0_.transaction_id as transac18_2_0_,
        chatroom0_.updated_at as updated19_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
Hibernate: 
    select
        chatmessag0_.id as id1_1_0_,
        chatmessag0_.chat_room_id as chat_roo2_1_0_,
        chatmessag0_.content as content3_1_0_,
        chatmessag0_.delivered_at as delivere4_1_0_,
        chatmessag0_.duration as duration5_1_0_,
        chatmessag0_.file_size as file_siz6_1_0_,
        chatmessag0_.file_url as file_url7_1_0_,
        chatmessag0_.image_height as image_he8_1_0_,
        chatmessag0_.image_width as image_wi9_1_0_,
        chatmessag0_.is_recalled as is_reca10_1_0_,
        chatmessag0_.message_type as message11_1_0_,
        chatmessag0_.product_snapshot as product12_1_0_,
        chatmessag0_.read_at as read_at13_1_0_,
        chatmessag0_.recalled_at as recalle14_1_0_,
        chatmessag0_.related_product_id as related15_1_0_,
        chatmessag0_.sender_id as sender_16_1_0_,
        chatmessag0_.sent_at as sent_at17_1_0_,
        chatmessag0_.status as status18_1_0_,
        chatmessag0_.system_data as system_19_1_0_,
        chatmessag0_.system_type as system_20_1_0_,
        chatmessag0_.thumbnail_url as thumbna21_1_0_ 
    from
        chat_messages chatmessag0_ 
    where
        chatmessag0_.id=?
Hibernate: 
    update
        chat_rooms 
    set
        last_message_id=?,
        last_message_content=?,
        last_message_type=?,
        last_message_time=CURRENT_TIMESTAMP,
        last_message_sender_id=?,
        updated_at=CURRENT_TIMESTAMP 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        total_messages=total_messages+1 
    where
        id=?
Hibernate: 
    update
        chat_rooms 
    set
        buyer_unread_count=buyer_unread_count+1 
    where
        id=? 
        and buyer_id<>?
Hibernate: 
    update
        chat_rooms 
    set
        seller_unread_count=seller_unread_count+1 
    where
        id=? 
        and seller_id<>?
2025-09-23 15:41:12 [http-nio-8080-exec-2] INFO  c.f.secondhand.service.WebSocketMessageService - Broadcasted message to chatRoom 1970392226659962880: messageId=1970392992279826432
2025-09-23 15:41:12 [http-nio-8080-exec-2] INFO  c.f.secondhand.service.WebSocketMessageService - Sent private message to user 1959106057909440512
2025-09-23 15:41:12 [http-nio-8080-exec-2] INFO  com.fliliy.secondhand.service.ChatService - 发送文本消息 - 聊天室ID: 1970392226659962880, 发送者ID: 1968947060988317696, 内容: 这个商品还在吗？什么时候方便看看？
Hibernate: 
    insert 
    into
        chat_messages
        (chat_room_id, content, delivered_at, duration, file_size, file_url, image_height, image_width, is_recalled, message_type, product_snapshot, read_at, recalled_at, related_product_id, sender_id, sent_at, status, system_data, system_type, thumbnail_url, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-09-23 15:41:12 [http-nio-8080-exec-2] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-23 15:41:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:41:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:41:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:41:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:41:54 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /chats/1970392226659962880/read
2025-09-23 15:41:54 [http-nio-8080-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-23 15:41:54 [http-nio-8080-exec-4] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1968947060988317696
2025-09-23 15:41:54 [http-nio-8080-exec-4] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /chats/1970392226659962880/read] with attributes [authenticated]
2025-09-23 15:41:54 [http-nio-8080-exec-4] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /chats/1970392226659962880/read
Hibernate: 
    SELECT
        CASE 
            WHEN COUNT(*) > 0 THEN 1 
            ELSE 0 
        END 
    FROM
        chat_rooms 
    WHERE
        id = ? 
        AND (
            buyer_id = ? 
            OR seller_id = ?
        )
Hibernate: 
    update
        chat_messages 
    set
        status='read',
        read_at=CURRENT_TIMESTAMP 
    where
        chat_room_id=? 
        and sender_id<>? 
        and status<>'read'
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_muted as buyer_mu3_2_0_,
        chatroom0_.buyer_pinned as buyer_pi4_2_0_,
        chatroom0_.buyer_unread_count as buyer_un5_2_0_,
        chatroom0_.created_at as created_6_2_0_,
        chatroom0_.last_message_content as last_mes7_2_0_,
        chatroom0_.last_message_id as last_mes8_2_0_,
        chatroom0_.last_message_sender_id as last_mes9_2_0_,
        chatroom0_.last_message_time as last_me10_2_0_,
        chatroom0_.last_message_type as last_me11_2_0_,
        chatroom0_.seller_id as seller_12_2_0_,
        chatroom0_.seller_muted as seller_13_2_0_,
        chatroom0_.seller_pinned as seller_14_2_0_,
        chatroom0_.seller_unread_count as seller_15_2_0_,
        chatroom0_.status as status16_2_0_,
        chatroom0_.total_messages as total_m17_2_0_,
        chatroom0_.transaction_id as transac18_2_0_,
        chatroom0_.updated_at as updated19_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
2025-09-23 15:41:54 [http-nio-8080-exec-4] INFO  com.fliliy.secondhand.service.ChatService - 标记消息为已读 - 聊天室ID: 1970392226659962880, 用户ID: 1968947060988317696
2025-09-23 15:41:54 [http-nio-8080-exec-4] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-23 15:42:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:42:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:42:46 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /chats/1970392226659962880/messages
2025-09-23 15:42:46 [http-nio-8080-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-23 15:42:46 [http-nio-8080-exec-5] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1968926156120002560
2025-09-23 15:42:46 [http-nio-8080-exec-5] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /chats/1970392226659962880/messages] with attributes [authenticated]
2025-09-23 15:42:46 [http-nio-8080-exec-5] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /chats/1970392226659962880/messages
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_muted as buyer_mu3_2_0_,
        chatroom0_.buyer_pinned as buyer_pi4_2_0_,
        chatroom0_.buyer_unread_count as buyer_un5_2_0_,
        chatroom0_.created_at as created_6_2_0_,
        chatroom0_.last_message_content as last_mes7_2_0_,
        chatroom0_.last_message_id as last_mes8_2_0_,
        chatroom0_.last_message_sender_id as last_mes9_2_0_,
        chatroom0_.last_message_time as last_me10_2_0_,
        chatroom0_.last_message_type as last_me11_2_0_,
        chatroom0_.seller_id as seller_12_2_0_,
        chatroom0_.seller_muted as seller_13_2_0_,
        chatroom0_.seller_pinned as seller_14_2_0_,
        chatroom0_.seller_unread_count as seller_15_2_0_,
        chatroom0_.status as status16_2_0_,
        chatroom0_.total_messages as total_m17_2_0_,
        chatroom0_.transaction_id as transac18_2_0_,
        chatroom0_.updated_at as updated19_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
2025-09-23 15:42:46 [http-nio-8080-exec-5] ERROR com.fliliy.secondhand.controller.ChatController - 发送消息失败
java.lang.RuntimeException: 无权限在此聊天室发送消息
	at com.fliliy.secondhand.service.ChatService.sendTextMessage(ChatService.java:240)
	at com.fliliy.secondhand.service.ChatService$$FastClassBySpringCGLIB$$7daaad61.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.fliliy.secondhand.service.ChatService$$EnhancerBySpringCGLIB$$5f4253a1.sendTextMessage(<generated>)
	at com.fliliy.secondhand.controller.ChatController.sendMessage(ChatController.java:222)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.fliliy.secondhand.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:59)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2025-09-23 15:42:46 [http-nio-8080-exec-5] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-23 15:42:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:42:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:43:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:43:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:43:28 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Securing POST /chats/1970392226659962880/messages
2025-09-23 15:43:28 [http-nio-8080-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Set SecurityContextHolder to empty SecurityContext
2025-09-23 15:43:28 [http-nio-8080-exec-7] DEBUG c.fliliy.secondhand.config.JwtAuthenticationFilter - JWT authentication successful for user: 1968926156120002560
2025-09-23 15:43:28 [http-nio-8080-exec-7] DEBUG o.s.s.w.access.intercept.FilterSecurityInterceptor - Authorized filter invocation [POST /chats/1970392226659962880/messages] with attributes [authenticated]
2025-09-23 15:43:28 [http-nio-8080-exec-7] DEBUG org.springframework.security.web.FilterChainProxy - Secured POST /chats/1970392226659962880/messages
Hibernate: 
    select
        chatroom0_.id as id1_2_0_,
        chatroom0_.buyer_id as buyer_id2_2_0_,
        chatroom0_.buyer_muted as buyer_mu3_2_0_,
        chatroom0_.buyer_pinned as buyer_pi4_2_0_,
        chatroom0_.buyer_unread_count as buyer_un5_2_0_,
        chatroom0_.created_at as created_6_2_0_,
        chatroom0_.last_message_content as last_mes7_2_0_,
        chatroom0_.last_message_id as last_mes8_2_0_,
        chatroom0_.last_message_sender_id as last_mes9_2_0_,
        chatroom0_.last_message_time as last_me10_2_0_,
        chatroom0_.last_message_type as last_me11_2_0_,
        chatroom0_.seller_id as seller_12_2_0_,
        chatroom0_.seller_muted as seller_13_2_0_,
        chatroom0_.seller_pinned as seller_14_2_0_,
        chatroom0_.seller_unread_count as seller_15_2_0_,
        chatroom0_.status as status16_2_0_,
        chatroom0_.total_messages as total_m17_2_0_,
        chatroom0_.transaction_id as transac18_2_0_,
        chatroom0_.updated_at as updated19_2_0_ 
    from
        chat_rooms chatroom0_ 
    where
        chatroom0_.id=?
2025-09-23 15:43:28 [http-nio-8080-exec-7] ERROR com.fliliy.secondhand.controller.ChatController - 发送消息失败
java.lang.RuntimeException: 无权限在此聊天室发送消息
	at com.fliliy.secondhand.service.ChatService.sendTextMessage(ChatService.java:240)
	at com.fliliy.secondhand.service.ChatService$$FastClassBySpringCGLIB$$7daaad61.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:792)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:388)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:762)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:707)
	at com.fliliy.secondhand.service.ChatService$$EnhancerBySpringCGLIB$$5f4253a1.sendTextMessage(<generated>)
	at com.fliliy.secondhand.controller.ChatController.sendMessage(ChatController.java:222)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:578)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:150)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:117)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:808)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1072)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:965)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:555)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:623)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:209)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:111)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:337)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:115)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:122)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:126)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:81)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:109)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:149)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at com.fliliy.secondhand.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:59)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:103)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:89)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:112)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:55)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:346)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:221)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:354)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:267)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:117)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:178)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:153)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:168)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:481)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:130)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:390)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:928)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1794)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1623)
2025-09-23 15:43:28 [http-nio-8080-exec-7] DEBUG o.s.s.web.context.SecurityContextPersistenceFilter - Cleared SecurityContextHolder to complete request
2025-09-23 15:43:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:43:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:44:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:44:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:44:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:44:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:45:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:45:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:45:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:45:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:46:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:46:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:46:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:46:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:47:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:47:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:47:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:47:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:48:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:48:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:48:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:48:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:49:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:49:22 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:49:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:49:52 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:50:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:50:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:50:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:50:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:51:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:51:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:51:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:51:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:52:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:52:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:52:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:52:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:53:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:53:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:53:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:53:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:54:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:54:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:54:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:54:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:55:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:55:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:55:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:55:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:56:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:56:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:56:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:56:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:57:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:57:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:57:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:57:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:58:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:58:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:58:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:58:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:59:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:59:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 15:59:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 15:59:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:00:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:00:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:00:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:00:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:01:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:01:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:01:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:01:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:02:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:02:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:02:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:02:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:03:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:03:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:03:50 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@275d9678: (connection has passed maxLifetime)
2025-09-23 16:03:50 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5cef24e2
2025-09-23 16:03:50 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:03:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:03:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:03:57 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7850351: (connection has passed maxLifetime)
2025-09-23 16:03:57 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@15136ebe
2025-09-23 16:03:58 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5298f63c: (connection has passed maxLifetime)
2025-09-23 16:03:58 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@542e6485
2025-09-23 16:04:00 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@4c063cb9: (connection has passed maxLifetime)
2025-09-23 16:04:00 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@653071cc
2025-09-23 16:04:03 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7df0d250: (connection has passed maxLifetime)
2025-09-23 16:04:03 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@34019bca
2025-09-23 16:04:03 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@56d64c4b: (connection has passed maxLifetime)
2025-09-23 16:04:03 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7d8ae156
2025-09-23 16:04:06 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7e97db1e: (connection has passed maxLifetime)
2025-09-23 16:04:06 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@304f437a
2025-09-23 16:04:07 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@77c4b93f: (connection has passed maxLifetime)
2025-09-23 16:04:07 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1351fbef
2025-09-23 16:04:11 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1cf52e47: (connection has passed maxLifetime)
2025-09-23 16:04:11 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@139e8894
2025-09-23 16:04:13 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@36f9b304: (connection has passed maxLifetime)
2025-09-23 16:04:13 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6f7919a4
2025-09-23 16:04:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:04:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:04:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:04:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:05:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:05:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:05:25 [MessageBroker-1] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2025-09-23 16:05:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:05:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:06:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:06:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:06:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:06:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:07:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:07:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:07:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:07:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:08:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:08:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:08:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:08:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:09:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:09:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:09:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:09:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:10:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:10:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:10:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:10:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:11:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:11:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:11:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:11:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:12:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:12:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:12:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:12:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:13:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:13:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:13:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:13:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:14:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:14:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:14:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:14:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:15:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:15:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:15:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:15:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:16:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:16:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:16:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:16:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:17:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:17:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:17:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:17:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:18:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:18:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:18:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:18:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:19:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:19:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:19:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:19:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:20:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:20:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:20:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:20:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:21:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:21:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:21:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:21:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:22:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:22:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:22:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:22:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:23:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:23:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:23:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:23:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:24:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:24:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:24:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:24:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:25:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:25:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:25:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:25:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:26:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:26:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:26:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:26:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:27:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:27:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:27:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:27:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:28:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:28:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:28:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:28:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:29:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:29:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:29:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:29:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:30:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:30:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:30:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:30:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:31:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:31:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:31:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:31:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:32:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:32:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:32:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:32:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:33:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:33:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:33:29 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@139e8894: (connection has passed maxLifetime)
2025-09-23 16:33:29 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6709d59c
2025-09-23 16:33:32 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@5cef24e2: (connection has passed maxLifetime)
2025-09-23 16:33:32 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2634dfa7
2025-09-23 16:33:34 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@7d8ae156: (connection has passed maxLifetime)
2025-09-23 16:33:34 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1758ba59
2025-09-23 16:33:34 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:33:37 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@15136ebe: (connection has passed maxLifetime)
2025-09-23 16:33:37 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@461b20e8
2025-09-23 16:33:43 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@653071cc: (connection has passed maxLifetime)
2025-09-23 16:33:43 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@73271b86
2025-09-23 16:33:45 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@6f7919a4: (connection has passed maxLifetime)
2025-09-23 16:33:45 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@321a11bd
2025-09-23 16:33:47 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@542e6485: (connection has passed maxLifetime)
2025-09-23 16:33:47 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@36246a9
2025-09-23 16:33:49 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@304f437a: (connection has passed maxLifetime)
2025-09-23 16:33:49 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5235eef2
2025-09-23 16:33:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:33:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:34:02 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@34019bca: (connection has passed maxLifetime)
2025-09-23 16:34:02 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@50e06ce9
2025-09-23 16:34:03 [HikariPool-1 connection closer] DEBUG com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Closing connection com.mysql.cj.jdbc.ConnectionImpl@1351fbef: (connection has passed maxLifetime)
2025-09-23 16:34:03 [HikariPool-1 connection adder] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@11dd66d2
2025-09-23 16:34:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:34:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:34:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:34:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:35:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:35:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:35:25 [MessageBroker-2] INFO  o.s.web.socket.config.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2025-09-23 16:35:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:35:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:36:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:36:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:36:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:36:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:37:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:37:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:37:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:37:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:38:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:38:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:38:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:38:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:39:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:39:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:39:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:39:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:40:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:40:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:40:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:40:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:41:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:41:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:41:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:41:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:42:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:42:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:42:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:42:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:43:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:43:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:43:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:43:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:44:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:44:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:44:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:44:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:45:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:45:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:45:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:45:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:46:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:46:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:46:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:46:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:47:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:47:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:47:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:47:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:48:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:48:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:48:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:48:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:49:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:49:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:49:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:49:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:50:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:50:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:50:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:50:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:51:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:51:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:51:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:51:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:52:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:52:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:52:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:52:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:53:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:53:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:53:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:53:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:54:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:54:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:54:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:54:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:55:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:55:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:55:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:55:53 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
2025-09-23 16:56:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
2025-09-23 16:56:23 [HikariPool-1 housekeeper] DEBUG com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Fill pool skipped, pool is at sufficient level.
